import { API } from '../API';
import { APIList } from './APIList';
import { APIListDeviceTime } from './APIListDeviceTime';
import { APIListFiles } from './APIListFiles';
import { APIListNotifications } from './APIListNotifications';
import { APIListRuns } from './APIListRuns';
import { APIListServices } from './APIListServices';
import { APIListSmartbearTunnels } from './APIListSmartbearTunnels';
import { APIResource } from './APIResource';
import { APIResourceAccessGroup } from './APIResourceAccessGroup';
import { APIResourceBillingPeriod } from './APIResourceBillingPeriod';
import { APIResourceDeviceGroup } from './APIResourceDeviceGroup';
import { APIResourceDeviceSessionStandalone } from './APIResourceDeviceSessionStandalone';
import { APIResourceFile } from './APIResourceFile';
import { APIResourceNotification } from './APIResourceNotification';
import { APIResourceProject } from './APIResourceProject';
import { APIUserResourceAccount } from './APIUserResourceAccount';
import { AccessGroup, AccessGroupsData } from './models/AccessGroup';
import { BillingPeriod } from './models/BillingPeriod';
import { DeviceGroup, DeviceGroupData, DeviceGroupIdsData, DeviceGroupWithPublicParams } from './models/DeviceGroup';
import { DeviceStatistics } from './models/DeviceStatistics';
import { DeviceUsage } from './models/DeviceUsage';
import { Framework } from './models/Framework';
import { Project, UserProjectData, UserProjectQueryParams } from './models/Project';
import { Service } from './models/Service';
import { User } from './models/User';
import { UserDeviceTimeSummary } from './models/UserDeviceTimeSummary';
import { UiPreferencesData, UserPreference } from './models/UserPreference';
import { StatisticQueryParams, UserStatistics } from './models/UserStatistics';
import { DeviceSession, DeviceSessionData, DeviceSessionQueryParams } from './models/DeviceSession';
import { CollectionBasicQueryParams, NoQueryParams } from './models/HTTP';
import { DeviceStatisticQueryParam, DeviceTimeSummaryQueryParams, DeviceUsageQueryParams } from './models/Device';
export declare class APIResourceUser extends APIResource<User> {
    constructor(parent: API, id: number | 'me');
    account(): APIUserResourceAccount;
    deviceTime(): APIListDeviceTime;
    deviceTimeSummary(): APIList<UserDeviceTimeSummary, DeviceTimeSummaryQueryParams, void>;
    services(): APIListServices;
    service(id: number): APIResource<Service, NoQueryParams, void>;
    billingPeriods(): APIList<BillingPeriod, CollectionBasicQueryParams, void>;
    billingPeriod(id: number): APIResourceBillingPeriod;
    deviceGroups(): APIList<DeviceGroup, DeviceGroupWithPublicParams, DeviceGroupIdsData | Omit<DeviceGroupData, "displayName">>;
    deviceGroup(id: number): APIResourceDeviceGroup;
    deviceSessions(): APIList<DeviceSession, DeviceSessionQueryParams, DeviceSessionData>;
    deviceSession(id: number): APIResourceDeviceSessionStandalone;
    markAccountOwner(): APIResource<User, NoQueryParams, void>;
    projects(): APIList<Project, UserProjectQueryParams, UserProjectData>;
    project(id: number): APIResourceProject;
    files(): APIListFiles;
    file(id: number): APIResourceFile;
    runs(): APIListRuns;
    availableFrameworks(): APIList<Framework, CollectionBasicQueryParams, void>;
    resetApiKey(): APIResource<User, NoQueryParams, void>;
    restore(): APIResource<User, NoQueryParams, void>;
    feedback(): APIResource<any, import("./models/HTTP").QueryParams, import("./models/HTTP").QueryParams>;
    notifications(): APIListNotifications;
    notification(id: number): APIResourceNotification;
    preferences(): APIResource<UserPreference, NoQueryParams, UserPreference>;
    uiPreferences(): APIResource<string, NoQueryParams, UiPreferencesData>;
    deviceUsage(): APIList<DeviceUsage, DeviceUsageQueryParams, void>;
    statistics(): APIResource<UserStatistics, StatisticQueryParams, void>;
    deviceStatistics(): APIList<DeviceStatistics, DeviceStatisticQueryParam, void>;
    accessGroups(): APIList<AccessGroup, CollectionBasicQueryParams, AccessGroupsData>;
    accessGroup(id: number): APIResourceAccessGroup;
    smartbearTunnel(id: number): APIResource<any, import("./models/HTTP").QueryParams, import("./models/HTTP").QueryParams>;
    smartbearTunnels(): APIListSmartbearTunnels;
    deleteAccount(): APIResource<any, import("./models/HTTP").QueryParams, import("./models/HTTP").QueryParams>;
}
export default APIResourceUser;
