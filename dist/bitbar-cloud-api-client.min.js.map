{"version":3,"file":"bitbar-cloud-api-client.min.js","sources":["../src/Filter.ts","../src/finka.ts","../src/FilterBuilder.ts","../src/api/models/HTTP.ts","../src/api/APIEntity.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListCleanupConfigurations.ts","../src/api/APIResourceCleanupConfiguration.ts","../src/api/APIAdminListDevices.ts","../src/api/APIAdminListNotificationPlans.ts","../src/api/APIAdminListRuns.ts","../src/api/APIAdminListServices.ts","../src/api/decorators/NonRequestable.ts","../src/api/APIAdminListStatistics.ts","../src/api/APIAdminResourceAccount.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceDeviceModel.ts","../src/api/class/InputFileset.ts","../src/api/class/Images.filter.ts","../src/api/class/NonMedia.filter.ts","../src/api/class/OutputFileset.ts","../src/api/APIResourceDeviceSessionCommon.ts","../src/api/APIAdminResourceDeviceSessionStandalone.ts","../src/api/factory/postAdminDeviceSessionChangeBillable.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceFramework.ts","../src/api/APIAdminResourceLicense.ts","../src/api/APIAdminResourceNotificationPlan.ts","../src/api/factory/postDeviceRunIds.ts","../src/api/APIAdminResourceRunStandalone.ts","../src/api/APIAdminResourceService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIResourceDeviceSessionStandalone.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRunCommon.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIAdminResource.ts","../src/api/APIListDevices.ts","../src/api/APIListProperties.ts","../src/api/APIListServices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceAccount.ts","../src/api/APIResourceBroker.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceLabelGroup.ts","../src/api/APIListFiles.ts","../src/api/APIResourceChannel.ts","../src/api/APIListNotifications.ts","../src/api/APIListRuns.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceUserSession.ts","../src/API.ts","../src/CloudAPIClient.ts","../src/api/models/AccessGroup.ts","../src/api/models/AccountService.ts","../src/api/models/AdminDevice.ts","../src/api/models/AdminError.ts","../src/api/models/AdminFrameworkStatistics.ts","../src/api/models/BillingPeriod.ts","../src/api/models/Broker.ts","../src/api/models/Cluster.ts","../src/api/models/Device.ts","../src/api/models/DeviceModelCriterion.ts","../src/api/models/DeviceModelPool.ts","../src/api/models/DeviceProblem.ts","../src/api/models/DeviceSession.ts","../src/api/models/Enum.ts","../src/api/models/License.ts","../src/api/models/Maintenance.ts","../src/api/models/Notification.ts","../src/api/models/Project.ts","../src/api/models/Screenshot.ts","../src/api/models/Service.ts","../src/api/models/SharedResource.ts","../src/api/models/TestCaseRun.ts","../src/api/models/TestRun.ts","../src/api/models/User.ts","../src/api/models/UserFile.ts","../src/api/models/VisualTest.ts"],"sourcesContent":["/**\n * Filter\n */\n\nexport class Filter<T = any> {\n  name: string;\n  value: T;\n  operand: string;\n\n  constructor(name: string, value: T, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import {Filter} from './Filter';\nimport './finka';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\nexport class FilterBuilder {\n\n  private readonly filters: Array<Filter> = [];\n\n  gt(name: string, value: number): this {\n    return this.add(name, value, 'gt');\n  }\n\n\n  lt(name: string, value: number): this {\n    return this.add(name, value, 'lt');\n  }\n\n  after(name: string, value: Date | number): this {\n    return this.add(name, value, 'after', true);\n  }\n\n  afterorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  before(name: string, value: Date | number): this {\n    return this.add(name, value, 'before', true);\n  }\n\n  beforeorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  on(name: string, value: any): this {\n    return this.add(name, value, 'on');\n  }\n\n  eq(name: string, value: any): this {\n    return this.add(name, value, 'eq');\n  }\n\n  contains(name: string, value: string): this {\n    return this.add(name, value, 'contains');\n  }\n\n  like(name: string, value: string): this {\n    return this.add(name, value, 'like');\n  }\n\n  notlike(name: string, value: string): this {\n    return this.add(name, value, 'notlike');\n  }\n\n  isnull(name: string): this {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  isnotnull(name: string): this {\n    return this.add(name, undefined, 'isnotnull');\n  }\n\n  in(name: string, value: Array<any>): this {\n    return this.add(name, value, 'in', true);\n  }\n\n  notin(name: string, value: Array<any>): this {\n    return this.add(name, value, 'notin', true);\n  }\n\n  raw(filter: Filter | string | Filter[] | string[]): void {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(filter)) {\n        this.filters.push(filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n\n  /**\n   * Check if given string is proper filter part\n   */\n  isFilterPart(str: string): boolean {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string>str);\n  }\n\n  toString(): string {\n    const parts: Array<string> = [];\n\n    let part: string,\n      val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add<T = any>(name: string, value: T, operand: string, checkNull = false): this {\n\n    let _value = Array.wrap(value);\n\n    if (_value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < _value.length; i++) {\n      const v = _value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        _value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of _value) {\n        if (v !== null) {\n          continue;\n        }\n        isNull = true;\n      }\n\n      if (isNull) {\n        _value = _value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    if (operand.endsWith('ornull') && _value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter<Array<T>>(name, _value, operand));\n\n    return this;\n  }\n}\n\n\nexport default FilterBuilder;\n","import {Method} from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @constant\n * @type {Array}\n * @default\n */\nexport const ALLOWED_HTTP_METHODS: Array<Method> = ['GET', 'POST', 'DELETE'];\n\nexport type QueryParam = string | number | boolean;\nexport type QueryParams = Record<string, QueryParam | Array<QueryParam>>;\n\nexport enum APIOrder {\n  asc = 'a',\n  desc = 'd'\n}\n\nexport interface CollectionQueryParams extends QueryParams {\n  filter: string;\n  limit: number;\n  offset: number;\n  sort: string;\n  search: string;\n}\n\nexport type CollectionBasicQueryParams = Omit<CollectionQueryParams, 'search'>\n\nexport type NoQueryParams = {\n  [key in any]: never;\n}\n\nexport type CollectionResponse<T> = {\n  data: Array<T>;\n  empty: boolean;\n  id: number;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  search: string;\n  sort: string;\n  total: number;\n}\n\nexport type SimpleCollectionResponse<T> = Pick<CollectionResponse<T>, 'data' | 'id'>;\nexport type NoData = void;\n","import {AxiosRequestConfig, AxiosResponse, Method} from 'axios';\nimport {stringify} from 'qs';\nimport {API} from '../API';\nimport {ALLOWED_HTTP_METHODS, QueryParams} from './models/HTTP';\nimport {AbortController} from 'node-abort-controller';\n\n\n/**\n * @typeParam RESPONSE        HTTP Response return type.\n * @typeParam QUERY_PARAMS    Allowed Query Params\n * @typeParam DATA Allowed    Data Object\n */\nexport class APIEntity<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = any> {\n\n  root: API;\n\n  protected stack: Array<string | number> = [];\n  protected requestConfig: AxiosRequestConfig = {};\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ALLOWED_HTTP_METHODS;\n  protected abortController: AbortController;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor(parent: APIEntity<RESPONSE> | API) {\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) { //???\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n    this.abortController = new AbortController();\n  }\n\n  abortRequest() {\n    this.abortController.abort();\n    this.abortController = new AbortController();\n  }\n\n  push(...items: Array<string | number>): this {\n    this.stack = this.stack.concat(items);\n    return this;\n  }\n\n  shift(): this {\n    this.stack.shift();\n    return this;\n  }\n\n  restack(...items: Array<string | number>): this {\n    this.stack = items;\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  get first(): string | number {\n    return this.stack[0];\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  get last(): string | number {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  set last(val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  toUrl(absolute = false): string {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      url = this.root.baseUrl + url;\n    }\n\n    return url;\n  }\n\n  setRequestConfig(requestConfig: AxiosRequestConfig): this {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  removeRequestConfig(key: keyof AxiosRequestConfig): this {\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  headers(headers: Record<string, string>): this {\n    const _headers: Record<string, string> = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      _headers[newKey] = headers[key];\n    }\n\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   */\n  method(name: Method): this {\n    const NAME: Uppercase<Method> = <Uppercase<Method>>name.toLocaleUpperCase();\n    const isAllowed: boolean = this.ALLOWED_HTTP_METHODS.indexOf(NAME) > -1;\n\n    if (!isAllowed) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${this.ALLOWED_HTTP_METHODS.join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   */\n  get(): this {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   */\n  post(): this {\n    return this.method('POST');\n  }\n\n  /**\n   * Set DELETE as HTTP method\n   */\n  delete(): this {\n    return this.method('DELETE');\n  }\n\n  /**\n   * Set params\n   */\n  params<T extends keyof QUERY_PARAMS = keyof QUERY_PARAMS>(params: Pick<QUERY_PARAMS, T>): this {\n    this.setRequestConfig({params});\n    return this;\n  }\n\n  getParams(): Partial<QUERY_PARAMS> {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  removeParam(key: keyof QUERY_PARAMS): this {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   */\n  data(data: DATA): this {\n    this.setRequestConfig({data});\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   */\n  jsonData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   */\n  formData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Send request\n   */\n  send<T = RESPONSE>(): Promise<AxiosResponse<T>> {\n    const requestConfig = <AxiosRequestConfig>Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`,\n      signal: this.abortController.signal\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n      (<string>requestConfig.headers['Content-Type']).startsWith('application/x-www-form-urlencoded') &&\n      requestConfig.data != null) {\n      requestConfig.data = this.paramsSerializer(requestConfig.data);\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    return this.root.axios.request<T>(requestConfig);\n  }\n\n  protected paramsSerializer(params: DATA | QUERY_PARAMS): string {\n    return stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n}\n\n\nexport default APIEntity;\n","import {AxiosResponse} from 'axios';\nimport {FilterBuilder} from '../FilterBuilder'\nimport {APIEntity} from './APIEntity'\nimport {APIOrder, CollectionBasicQueryParams, CollectionQueryParams, CollectionResponse, NoQueryParams, SimpleCollectionResponse} from './models/HTTP';\n\n\nexport const DEFAULT_LIMIT: number = 20;\nexport const DEFAULT_OFFSET: number = 0;\n\nexport class APIList<RESPONSE = any, QUERY_PARAMS extends CollectionBasicQueryParams | CollectionQueryParams | NoQueryParams = CollectionQueryParams, DATA = any>\n  extends APIEntity<CollectionResponse<RESPONSE> | SimpleCollectionResponse<RESPONSE>, QUERY_PARAMS, DATA> {\n\n  /**\n   * Shortcut for sending data POST\n   */\n  create(data: DATA): Promise<AxiosResponse<RESPONSE>> {\n    return this.post().data(data).send<RESPONSE>();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   */\n  sort(name: string, order: APIOrder = APIOrder.asc): this {\n    return this.params<'sort'>({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  limit(limit = DEFAULT_LIMIT): this {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params<'limit'>({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  getLimit(): number {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : <number>params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  noLimit(): this {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  offset(offset: number = DEFAULT_OFFSET): this {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params<'offset'>({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  between(from: number, to: number): this {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  only(idx: number): this {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  page(page = 1): this {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params<'offset' | 'limit'>({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  search(query: string): this {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params<'search'>({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  filter(filter: FilterBuilder | string): this {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    return this.params<'filter'>({\n      filter: filter.toString()\n    });\n  }\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit = this.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between = this.between;\n}\n\nexport default APIList;\n","import {APIEntity} from './APIEntity'\nimport {QueryParams} from './models/HTTP';\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nexport class APIResource<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = QUERY_PARAMS>\n  extends APIEntity<RESPONSE, QUERY_PARAMS, DATA> {\n}\n\n\nexport default APIResource;\n","import {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {CleanupConfigurationData, SpecificCleanupConfigurationQueryParams} from './models/CleanupConfiguration';\nimport {DeviceCleanupConfiguration} from './models/Device';\nimport {CollectionQueryParams, NoData} from './models/HTTP';\n\n\nexport class APIListCleanupConfigurations extends APIList<DeviceCleanupConfiguration, CollectionQueryParams, CleanupConfigurationData> {\n\n  /**\n   * /cleanup-configurations\n   */\n  constructor(parent: APIAdminListDevices) {\n    super(parent);\n    this.push('cleanup-configurations');\n  }\n\n  // /cleanup-configurations/specific\n  specific() {\n    return new APIResource<DeviceCleanupConfiguration, Partial<SpecificCleanupConfigurationQueryParams>, NoData>(this)\n      .push('specific');\n  }\n\n}\n\nexport default APIListCleanupConfigurations\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIResource} from './APIResource'\nimport {CleanupConfigurationSpecificData, DeviceCleanupConfiguration} from './models/Device';\nimport {NoData} from './models/HTTP';\nimport APIList from './APIList';\n\n\nexport class APIResourceCleanupConfiguration extends APIResource<DeviceCleanupConfiguration> {\n  //shuldn't it be APIAdminResourceCleanupConfiguration\n\n  /**\n   * admin/devices/cleanup-configurations/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('cleanup-configurations', id);\n  }\n\n  // admin/devices/cleanup-configurations/{id}/devices\n  devices() {\n    return new APIList<DeviceCleanupConfiguration, CleanupConfigurationSpecificData, NoData>(this).push('devices');\n  }\n\n}\n\nexport default APIResourceCleanupConfiguration\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIListCleanupConfigurations} from './APIListCleanupConfigurations';\nimport {APIResourceCleanupConfiguration} from './APIResourceCleanupConfiguration';\nimport {AdminDevice, AdminDeviceData, AdminDevicesQueryParams} from './models/AdminDevice';\n\n\nexport class APIAdminListDevices extends APIList<AdminDevice, AdminDevicesQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices\n   */\n  constructor(parent: APIAdminResource | API) {\n    super(parent);\n    this.push('admin', 'devices');\n  }\n\n  // /admin/devices/cleanup-configurations\n  cleanupConfigurations() {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  // /admin/devices/cleanup-configurations/{id}\n  cleanupConfiguration(id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n}\n\nexport default APIAdminListDevices;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {NotificationPlan, NotificationPlanData} from './models/NotificationPlan';\n\n\nexport class APIAdminListNotificationPlans extends APIList<NotificationPlan, CollectionQueryParams, NotificationPlanData> {\n\n  /**\n   * /admin/notification-plans\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'notification-plans');\n  }\n\n  // /notification-plans/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  // /notification-plans/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n}\n\n\nexport default APIAdminListNotificationPlans\n","import {Method} from 'axios';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource';\nimport {AdminTestRun, RunsConfigParams} from './models/AdminTestRun';\nimport {TestRunConfig} from './models/TestRun';\n\nexport class APIAdminListRuns extends APIList<AdminTestRun> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /admin/runs\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'runs');\n  }\n\n  // /runs/config\n  config() {\n    const apiResource = new APIResource<TestRunConfig, RunsConfigParams, {configuration: TestRunConfig}>(this);\n    apiResource.restack('runs', 'config');\n    return apiResource;\n  }\n\n}\n\n\nexport default APIAdminListRuns\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {AdminServicesParams, Service} from './models/Service';\n\n\nexport class APIAdminListServices extends APIList<Service, AdminServicesParams, Service> {\n\n  /**\n   * /admin/services\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'services');\n  }\n\n  active() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'notArchived'>({\n      notArchived: true\n    });\n    return apiList;\n  }\n\n  activated() {\n    const apiList = this.active();\n    apiList.params<'filter' | 'limit' | 'sort'>({\n      filter: 'activated_eq_true',\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  inUse() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'inUse' | 'limit' | 'sort'>({\n      inUse: true,\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  byPrice() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'sort'>({\n      sort: 'centPrice_a'\n    })\n    return apiList;\n  }\n\n}\n\nexport default APIAdminListServices;\n","import {AxiosResponse} from 'axios';\n\nexport function NonRequestable<T extends {new(...args: any[]): object}>(constructor: T) {\n  return class extends constructor {\n    send(): Promise<AxiosResponse> {\n      return Promise.reject();\n    }\n  };\n}\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AdminDeviceSessionStatistics, AdminStatisticsParams} from './models/AdminDeviceSessionStatistics';\nimport {AdminFrameworkStatistics} from './models/AdminFrameworkStatistics';\nimport {NoData} from './models/HTTP';\n\n\n@NonRequestable\nexport class APIAdminListStatistics extends APIList {\n\n  /**\n   * /admin/statistics\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'statistics');\n  }\n\n  // /admin/statistics/device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSessionStatistics, AdminStatisticsParams, NoData>(this).push('device-sessions');\n  }\n\n  // /admin/statistics/frameworks\n  frameworks() {\n    return new APIList<AdminFrameworkStatistics, AdminStatisticsParams, NoData>(this).push('frameworks');\n  }\n\n\n}\n\n\nexport default APIAdminListStatistics\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource'\nimport {Account} from './models/Account';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Role, RoleData, RoleParams} from './models/Role';\nimport {AccountService} from './models/AccountService';\nimport {AccountPreferences, AccountPreferencesData} from './models/AccountPreference';\n\n\nexport class APIAdminResourceAccount extends APIResource<Account, NoQueryParams, NoData> {\n\n  /**\n   * /admin/accounts/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'accounts', id);\n  }\n\n  // /admin/accounts/{id}/roles\n  roles() {\n    return new APIList<Role, RoleParams, RoleData>(this).push('roles');\n  }\n\n  // /admin/accounts/{id}/roles/{id}\n  role(id: number) {\n    return new APIResource<Role, RoleParams, NoData>(this).push('roles', id);\n  }\n\n  // //admin/accounts/{id}/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('account-services');\n  }\n\n  // /accounts/{id}/preferences\n  preferences() {\n    return new APIResource<AccountPreferences, NoQueryParams, AccountPreferencesData>(this).push('preferences');\n  }\n\n}\n\nexport default APIAdminResourceAccount\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {AccountService} from './models/AccountService';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIAdminResourceAccountService extends APIResource<AccountService, NoQueryParams, NoData> {\n\n  /**\n   * /admin/account-services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  activate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  deactivate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice} from './models/AdminDevice';\nimport {Cluster, ClusterData, ClusterParams} from './models/Cluster';\n\n\nexport class APIAdminResourceCluster extends APIResource<Cluster, ClusterParams, ClusterData> {\n\n  /**\n   * /clusters/{id}\n   */\n  constructor(parent: API | APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  devices() {\n    return new APIList<AdminDevice>(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice, AdminDeviceData} from './models/AdminDevice';\nimport {AdminDeviceSession} from './models/AdminDeviceSession';\nimport {\n  DeviceCleanupConfiguration,\n  DeviceCleanupConfigurationData,\n  DeviceLabelData,\n  DeviceProperty\n} from './models/Device';\nimport {NoData, NoQueryParams, QueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDevice extends APIResource<AdminDevice, NoQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/cleanup-configuration\n  cleanupConfiguration() {\n    return new APIResource<DeviceCleanupConfiguration, QueryParams, DeviceCleanupConfigurationData>(this).push('cleanup-configuration');\n  }\n\n  // /admin/devices/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, NoQueryParams, DeviceLabelData>(this).push('labels');\n  }\n\n  // /admin/devices/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, NoData>(this).push('labels', id);\n  }\n\n  // /admin/devices/{id}/queue\n  queue() {\n    return new APIList<AdminDeviceSession>(this).push('queue');\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser, DeviceBrowserData} from './models/Browser';\nimport {DeviceModel, DeviceModelData} from './models/DeviceModel';\nimport {NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDeviceModel extends APIResource<DeviceModel, NoQueryParams, DeviceModelData> {\n\n  /**\n   * /admin/device-models/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'device-models', id);\n  }\n\n  // /admin/device-models/{id}/browsers\n  browsers() {\n    return new APIList<Browser, NoQueryParams, DeviceBrowserData>(this).push('browsers');\n  }\n\n}\n\nexport default APIAdminResourceDeviceModel;\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {NoData} from '../models/HTTP';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\n\n\n@NonRequestable\nexport class InputFileset extends APIResource<NoData> {\n\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  /**\n   * @endpoint /input-file-set/files\n   */\n  files() {\n    return new APIList<UserFile, FilesQueryParams, NoData>(this).push('files');\n  }\n\n  /**\n   * @endpoint /input-file-set/files.zip\n   */\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","// Create image files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const IMAGE_FILES_FILTER = new FilterBuilder();\nIMAGE_FILES_FILTER.eq('state', 'READY');\nIMAGE_FILES_FILTER.in('mimetype', [\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif'\n]);\nIMAGE_FILES_FILTER.notlike('name', 'action-%%');\n","// Create non-media files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {Screenshot} from '../models/Screenshot';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\nimport {IMAGE_FILES_FILTER} from './Images.filter';\nimport {NON_MEDIA_FILES_FILTER} from './NonMedia.filter';\n\n\n@NonRequestable\nexport class OutputFileset extends APIResource<UserFile, FilesQueryParams> {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  files() {\n    return new APIList<UserFile, FilesQueryParams>(this).push('files');\n  }\n\n  // /output-file-set/files/{id}\n  file(id: number) {\n    return new APIResource<UserFile, FilesQueryParams>(this).push('files', id);\n  }\n\n  // /output-file-set/files.zip\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  screenshots() {\n    return new APIList<Screenshot, FilesQueryParams>(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  screenshot(id: number) {\n    return new APIResource<Screenshot, FilesQueryParams>(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  screenshotFile(id: number) {\n    return this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  videos() {\n    return this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  nonMediaFiles() {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n  performance() {\n    return this.files().params({\n      tag: ['performance']\n    })\n  }\n\n  images() {\n    return this.files().filter(IMAGE_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource'\nimport {InputFileset} from './class/InputFileset'\nimport {OutputFileset} from './class/OutputFileset'\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\nimport {\n  DeviceSession,\n  DeviceSessionCommand,\n  DeviceSessionStep,\n  SessionQueryParams,\n  SessionRunStepQueryParams,\n  SessionStepQueryParams\n} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot} from './models/Screenshot';\nimport {TestCaseRun} from './models/TestCaseRun';\n\nexport class APIResourceDeviceSessionCommon extends APIResource<DeviceSession> implements DeviceSessionCommon {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/commands\n  commands() {\n    return new APIList<DeviceSessionCommand>(this).push('commands');\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  release() {\n    return new APIResource<DeviceSession, NoQueryParams, void>(this).push('release').post();\n  }\n\n  // /device-sessions/{id}/screenshots\n  screenshots() {\n    return new APIList<Screenshot, SessionQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  screenshot(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  step(id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceSessionStep, NoQueryParams, NoData>(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  currentStep() {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  testCaseRuns() {\n    return new APIList<TestCaseRun, SessionQueryParams | NoQueryParams, NoData>(this).push('test-case-runs');\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList(this).push('connections');\n  }\n\n  logs() {\n    return new APIResource(this).push('logs').setRequestConfig({\n      responseType: 'text'\n    });\n  }\n\n  clusterLogs() {\n    return new APIResource(this).push('cluster-logs').setRequestConfig({\n      responseType: 'text'\n    });\n  }\n\n}\n\nexport default APIResourceDeviceSessionCommon\n","import {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {postAdminDeviceSessionChangeBillable} from './factory/postAdminDeviceSessionChangeBillable';\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\n\n\n/**\n * APIAdminResourceDevice\n *\n *\n * It will require more work to decouple from regular session\n */\nexport class APIAdminResourceDeviceSessionStandalone extends APIResourceDeviceSessionCommon implements DeviceSessionCommon {\n\n  // /admin/device-sessions/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return postAdminDeviceSessionChangeBillable(this, billable);\n  }\n}\n\nexport default APIAdminResourceDeviceSessionStandalone;\n","import {APIResource} from '../APIResource';\nimport APIResourceDeviceSessionCommon from '../APIResourceDeviceSessionCommon';\nimport {DeviceSession} from '../models/DeviceSession';\n\nexport function postAdminDeviceSessionChangeBillable(parent: APIResourceDeviceSessionCommon, billable: boolean) {\n  const apiResource = new APIResource<DeviceSession>(parent);\n  const deviceSessionId = apiResource.last;\n\n  return apiResource.restack('admin', 'device-sessions', deviceSessionId, 'changebillable').params({\n    billable\n  }).post();\n}\n\nexport default postAdminDeviceSessionChangeBillable;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {DeviceTimeCountSessionReportEntry} from './models/DeviceTimeCountSessionReportEntry';\nimport {DeviceTimeStepTimeReportEntry} from './models/DeviceTimeStepTimeReportEntry';\nimport {NoData} from './models/HTTP';\nimport {DeviceTimeParams, UserDeviceTime} from './models/UserDeviceTime';\n\nexport class APIAdminResourceDeviceTime extends APIList<UserDeviceTime, DeviceTimeParams, NoData> {\n\n  /**\n   * /admin/device-time\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  countSessionReport() {\n    return new APIList<DeviceTimeCountSessionReportEntry>(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  stepTimeReport() {\n    return new APIList<DeviceTimeStepTimeReportEntry>(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Framework, FrameworkConfigData, FrameworkEditData} from './models/Framework';\nimport {NoQueryParams} from './models/HTTP';\nimport {ProjectJobConfig} from './models/ProjectJobConfig';\nimport {Role} from './models/Role';\n\nexport class APIAdminResourceFramework extends APIResource<Framework, NoQueryParams, FrameworkEditData> {\n\n  /**\n   * /admin/frameworks/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'frameworks', id);\n  }\n\n  // /admin/frameworks/{id}/config\n  config() {\n    return new APIResource<ProjectJobConfig, NoQueryParams, FrameworkConfigData>(this).push('config');\n  }\n\n  // /admin/frameworks/{id}/required-roles\n  requiredRoles() {\n    return new APIList<Role>(this).push('required-roles');\n  }\n\n}\n\nexport default APIAdminResourceFramework\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\n\nexport class APIAdminResourceLicense extends APIResource<License, NoQueryParams, NoData> {\n\n  /**\n   * /licenses/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'licenses', id);\n  }\n\n  // /licenses/{id}/activate\n  activate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('activate');\n  }\n\n  // /licenses/{id}/deactivate\n  deactivate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('deactivate');\n  }\n\n  // /licenses/{id}/resend\n  resend() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('resend');\n  }\n\n  // /licenses/{id}/download\n  download() {\n    return new APIResource<Blob, NoQueryParams, NoData>(this).push('download');\n  }\n\n}\n\nexport default APIAdminResourceLicense\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Notification} from './models/Notification';\nimport {NotificationPlan, NotificationPlanEditData} from './models/NotificationPlan';\n\nexport class APIAdminResourceNotificationPlan extends APIResource<NotificationPlan, NoQueryParams, NotificationPlanEditData> {\n\n  /**\n   * /admin/notification-plans/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'notification-plans', id);\n  }\n\n  // /admin/notification-plans/{id}/check\n  check() {\n    return new APIList<Notification>(this).push('check');\n  }\n\n  // /admin/notification-plans/{id}/test\n  test() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('test');\n  }\n\n  // /admin/notification-plans/{id}/execute\n  execute() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('execute');\n  }\n\n}\n\nexport default APIAdminResourceNotificationPlan\n","import {APIEntity} from '../APIEntity';\nimport {APIResource} from '../APIResource';\nimport {BuildLogsData, BuildLogsParams} from '../models/UserFile';\n\nexport function postDeviceRunIds<T>(parent: APIEntity, name: string, ids?: Array<number>) {\n  const a = new APIResource<T, BuildLogsParams, BuildLogsData>(parent).push(name);\n\n  if (ids != null) {\n    a.params<'deviceRunIds'>({\n      deviceRunIds: ids\n    });\n  }\n\n  return a.post();\n}\n\nexport default postDeviceRunIds;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun, RunChangeBillableParams, RunChangePriorityParams} from './models/AdminTestRun';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceRunStandalone extends APIResource<AdminTestRun, NoQueryParams, NoData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun, NoQueryParams, NoData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return new APIResource<AdminTestRun, RunChangeBillableParams>(this).push('changebillable').post().params({\n      billable\n    });\n  }\n\n  // /runs/{id}/changepriority\n  changePriority(priority?: number) {\n    const resource = new APIResource<AdminTestRun, RunChangePriorityParams>(this).push('changepriority');\n    if (priority) {\n      resource.post().data({\n        priority\n      });\n    }\n    return resource;\n  }\n\n  // /admin/runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<AdminTestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n}\n\nexport default APIAdminResourceRunStandalone;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceActivateData} from './models/Service';\n\n\nexport class APIAdminResourceService extends APIResource<Service, NoQueryParams, NoData> {\n\n  /**\n   * /services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'services', id);\n  }\n\n  // /services/{id}/activate\n  activate() {\n    return new APIResource<Service, ServiceActivateData>(this).push('activate').post();\n  }\n\n}\n\nexport default APIAdminResourceService\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccountService, AccountServiceData} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Role, RoleData} from './models/Role';\nimport {User, UserUpdateAccount} from './models/User';\n\n@NonRequestable\nexport class APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /account\n   */\n  constructor(parent: APIAdminResourceUser) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  roles() {\n    return new APIList<Role, NoQueryParams, RoleData>(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  role(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Role, NoQueryParams, NoData>(this).push('roles', id);\n  }\n\n  // /account-services\n  services() {\n    const a = new APIList<AccountService, CollectionQueryParams, AccountServiceData>(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  update() {\n    const a = new APIResource<User, UserUpdateAccount>(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {InputFileset} from './class/InputFileset';\nimport {OutputFileset} from './class/OutputFileset';\nimport {DeviceSessionStandalone} from './interface/DeviceSessionStandalone';\nimport {Connection, ConnectionData} from './models/Connection';\nimport {DeviceSession, DeviceSessionRelease} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {VisualTest} from './models/VisualTest';\n\nexport class APIResourceDeviceSessionStandalone extends APIResource<DeviceSession> implements DeviceSessionStandalone {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIResourceUser | APIAdminResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList<Connection, CollectionBasicQueryParams, ConnectionData>(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  connection(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Connection, NoQueryParams, NoData>(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  release() {\n    return new APIResource<DeviceSession, NoQueryParams, DeviceSessionRelease>(this).push('release').post();\n  }\n\n  // /device-sessions/{id}/visual-tests/images\n  visualTestsImages() {\n    return new APIList<VisualTest, NoQueryParams, NoData>(this).push('visual-tests', 'images');\n  }\n\n}\n\nexport default APIResourceDeviceSessionStandalone\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIAdminResourceUserAccount} from './APIAdminResourceUserAccount';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\nimport {Role, RoleParams} from './models/Role';\nimport {User} from './models/User';\n\n\n@NonRequestable\nexport class APIAdminResourceUser extends APIResource<User> {\n\n  /**\n   * /admin/users/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /admin/users/{id}/disable\n  disable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('disable');\n  }\n\n  // /admin/users/{id}/enable\n  enable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('enable');\n  }\n\n  // /admin/users/{id}/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, NoData>(this).push('licenses');\n  }\n\n  // /admin/users/{id}/resend-activation\n  resendActivation() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('resend-activation').post();\n  }\n\n  // /admin/users/{id}/account\n  account() {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n  // /admin/users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /admin/users/{id}/roles\n  roles() {\n    return new APIList<Role, RoleParams, NoData>(this).push('roles');\n  }\n\n  // /admin/users/{id}/roles/{id}\n  role(id: number) {\n    return new APIResource<Role, RoleParams, NoData>(this).push('roles', id);\n  }\n\n}\n\nexport default APIAdminResourceUser;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccessGroup} from './models/AccessGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {SharedResource} from './models/SharedResource';\nimport {User, UserData} from './models/User';\n\nexport class APIResourceAccessGroup extends APIResource<AccessGroup> {\n\n  /**\n   * /access-groups/{id}\n   *\n   */\n  constructor(parent: APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  users() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  user(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  resources() {\n    return new APIList<SharedResource, CollectionBasicQueryParams, NoData>(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  resource(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<SharedResource, NoQueryParams, NoData>(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport APIResourceUser from './APIResourceUser';\nimport {Device, DeviceProperty} from './models/Device';\nimport {DeviceGroup, DeviceGroupData, DeviceGroupParams, DeviceGroupSelectorData} from './models/DeviceGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {ShareData, SharedResource} from './models/SharedResource';\n\nexport class APIResourceDeviceGroup extends APIResource<DeviceGroup> {\n\n  /**\n   * /device-groups/{id}\n   */\n  constructor(parent: APIAdminResource | APIResourceUser | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  devices() {\n    return new APIList<Device | DeviceGroup, DeviceGroupParams, DeviceGroupData>(this).push('devices');\n  }\n\n  // /device-groups/{id}/devices/{id}\n  device(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<void, NoQueryParams, NoData>(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  selectors() {\n    return new APIList<DeviceProperty | DeviceGroup, CollectionBasicQueryParams, DeviceGroupSelectorData>(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  selector(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n  // /device-groups/{id}/share\n  share() {\n    return new APIList<SharedResource, NoQueryParams, ShareData>(this).push('share');\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {CollectionBasicQueryParams, NoData} from './models/HTTP';\nimport {Property} from './models/Property';\nimport {ShareData, SharedResource} from './models/SharedResource';\nimport {FileSizeData, UserFile, UserFileTag} from './models/UserFile';\n\n\nexport class APIResourceFile extends APIResource<UserFile> {\n\n  /**\n   * /files/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  // /files/{id}/file\n  file() {\n    return new APIResource<UserFile, FileSizeData, NoData>(this).push('file');\n  }\n\n  // /files/{id}/icon\n  icon() {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  tags() {\n    return new APIList<UserFileTag, CollectionBasicQueryParams, NoData>(this).push('tags');\n  }\n\n  share() {\n    return new APIList<SharedResource, ShareData>(this).push('share');\n  }\n\n  property(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<Property>(this).push('properties', id);\n  }\n\n}\n\nexport default APIResourceFile\n","import {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {DeviceSession} from './interface/DeviceSession';\nimport {DeviceSession as DeviceSessionModel} from './models/DeviceSession';\n\nexport class APIResourceDeviceSession extends APIResourceDeviceSessionCommon implements DeviceSession {\n\n  // /device-sessions/{id}/abort\n  abort() {\n    return new APIResource<DeviceSessionModel>(this).push('abort').post();\n  }\n\n  // /device-sessions/{id}/retry\n  retry() {\n    return new APIResource<DeviceSessionModel>(this).push('retry').post();\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun} from './models/AdminTestRun';\nimport {DeviceSession, DeviceSessionStep, TRunDeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot, ScreenshotExtended, ScreenshotQueryParams} from './models/Screenshot';\nimport {Tag, TagsData, TagsQueryParams, TaqQueryParams, TestRunTagsData} from './models/Tag';\nimport {RunData, RunQueryParam, TestRun, TestRunData} from './models/TestRun';\nimport {TestRunDataAvailability, TestRunDataAvailabilityQueryParams} from './models/TestRunDataAvailability';\nimport {UserFile} from './models/UserFile';\n\nexport class APIResourceRunCommon extends APIResource<TestRun, RunQueryParam, TestRunData | RunData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun | TestRun, NoQueryParams, RunData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/build-logs.zip\n  buildLogsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'build-logs.zip', ids);\n  }\n\n  // /runs/{id}/data-availability\n  dataAvailability() {\n    return new APIResource<TestRunDataAvailability, TestRunDataAvailabilityQueryParams, NoData>(this).push('data-availability');\n  }\n\n  // /runs/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, CollectionBasicQueryParams | TRunDeviceSessionQueryParams, NoData>(this).push('device-sessions');\n  }\n\n  // /runs/{id}/files.zip\n  filesZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'files.zip', ids);\n  }\n\n  // /runs/{id}/logs.zip\n  logsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'logs.zip', ids);\n  }\n\n  // /runs/{id}/performance.zip\n  performanceZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'performance.zip', ids);\n  }\n\n  // /runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<TestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/screenshot-names\n  screenshotNames() {\n    return new APIList<Screenshot, NoQueryParams, NoData>(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  screenshots() {\n    return new APIList<ScreenshotExtended, ScreenshotQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /runs/{id}/screenshots.zip\n  screenshotsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'screenshots.zip', ids);\n  }\n\n  // /runs/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams, NoData>(this).push('steps');\n  }\n\n  // /runs/{id}/tags\n  tags() {\n    return new APIList<Tag, CollectionBasicQueryParams | TagsQueryParams, TagsData | TestRunTagsData>(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  tag(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Tag, TaqQueryParams, NoData>(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRunCommon\n","import {APIResourceDeviceSession} from './APIResourceDeviceSession'\nimport {APIResourceRunCommon} from './APIResourceRunCommon'\n\nexport class APIResourceRun extends APIResourceRunCommon {\n\n  // /runs/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n}\n\nexport default APIResourceRun\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceRun} from './APIResourceRun'\nimport {APIResourceUser} from './APIResourceUser';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Project} from './models/Project';\nimport {ShareData, SharedResource} from './models/SharedResource';\nimport {TestRun} from './models/TestRun';\n\nexport class APIResourceProject extends APIResource<Project> {\n\n  /**\n   * /projects/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  runs() {\n    return new APIList<TestRun, CollectionBasicQueryParams, NoData>(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  share() {\n    return new APIList<SharedResource, ShareData>(this).push('share');\n  }\n\n  // /unarchive\n  unarchive() {\n    return new APIResource<void, NoQueryParams, NoData>(this).push('unarchive');\n  }\n\n}\n\nexport default APIResourceProject\n","import {API} from '../API';\nimport {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIAdminListNotificationPlans} from './APIAdminListNotificationPlans';\nimport {APIAdminListRuns} from './APIAdminListRuns';\nimport {APIAdminListServices} from './APIAdminListServices';\nimport {APIAdminListStatistics} from './APIAdminListStatistics';\nimport APIAdminResourceAccount from './APIAdminResourceAccount';\nimport {APIAdminResourceAccountService} from './APIAdminResourceAccountService';\nimport {APIAdminResourceCluster} from './APIAdminResourceCluster';\nimport {APIAdminResourceDevice} from './APIAdminResourceDevice';\nimport {APIAdminResourceDeviceModel} from './APIAdminResourceDeviceModel';\nimport {APIAdminResourceDeviceSessionStandalone} from './APIAdminResourceDeviceSessionStandalone';\nimport {APIAdminResourceDeviceTime} from './APIAdminResourceDeviceTime';\nimport {APIAdminResourceFramework} from './APIAdminResourceFramework';\nimport {APIAdminResourceLicense} from './APIAdminResourceLicense';\nimport {APIAdminResourceNotificationPlan} from './APIAdminResourceNotificationPlan';\nimport {APIAdminResourceRunStandalone} from './APIAdminResourceRunStandalone';\nimport {APIAdminResourceService} from './APIAdminResourceService';\nimport {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup';\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup';\nimport {APIResourceFile} from './APIResourceFile'\nimport {APIResourceProject} from './APIResourceProject';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccessGroup, AccessGroupData} from './models/AccessGroup';\nimport {Account} from './models/Account';\nimport {AccountService} from './models/AccountService';\nimport {Activity} from './models/Activity';\nimport {AdminDeviceSession, AdminInteractiveDeviceSession} from './models/AdminDeviceSession';\nimport {AdminDeviceType, DeviceTypeData} from './models/AdminDeviceType';\nimport {AdminEmail} from './models/AdminEmail';\nimport {AdminError} from './models/AdminError';\nimport {Administrator} from './models/Administrator';\nimport {AdminOverview} from './models/AdminOverview';\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {Browser, BrowserData} from './models/Browser';\nimport {CountryVatRate, CountryVatRateData} from './models/CountryVatRate';\nimport {DeviceModelCriterion, DeviceModelCriterionData} from './models/DeviceModelCriterion';\nimport {DeviceModelPool, DeviceModelPoolData} from './models/DeviceModelPool';\nimport {Framework, FrameworkData} from './models/Framework';\nimport {License, LicenseData} from './models/License';\nimport {Maintenance, MaintenanceData} from './models/Maintenance';\nimport {Project} from './models/Project';\nimport {Role, RoleParams} from './models/Role';\nimport {Settings, SettingsParams} from './models/Settings';\nimport {User, UserData, UserParams} from './models/User';\nimport {DeviceTimeSummaryParams, UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {UserFile, UserFileData, UserFileParams} from './models/UserFile';\nimport {Cluster} from './models/Cluster';\nimport {DeviceProperty} from './models/Device';\nimport {DeviceGroup} from './models/DeviceGroup';\nimport {DeviceModel} from './models/DeviceModel';\nimport {DeviceProblem} from './models/DeviceProblem';\nimport {DeviceStatus} from './models/DeviceStatus';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n@NonRequestable\nexport class APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   */\n  constructor(parent: API) {\n    super(parent);\n  }\n\n  // /access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionQueryParams, AccessGroupData>(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  accounts() {\n    return new APIList<Account>(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  account(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIAdminResourceAccount(this, id);\n  }\n\n  // /admin/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  accountService(id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  activities() {\n    return new APIList<Activity>(this).push('admin', 'activities');\n  }\n\n  // admin/administrators\n  administrators() {\n    return new APIList<Administrator>(this).push('admin', 'administrators');\n  }\n\n  // /admin/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod>(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  billingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<BillingPeriod>(this).push('admin', 'billing-periods', id);\n  }\n\n  // /admin/browsers\n  browsers() {\n    return new APIList<Browser, CollectionQueryParams, BrowserData>(this).push('admin', 'browsers');\n  }\n\n  // /admin/browsers/{id}\n  browser(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Browser, NoQueryParams, BrowserData>(this).push('admin', 'browsers', id);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /admin/country-vat-rates\n  countryVatRates() {\n    return new APIList<CountryVatRate, CollectionQueryParams, CountryVatRateData>(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  countryVatRate(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<CountryVatRate, NoQueryParams, Omit<CountryVatRate, 'country'>>(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  devices() {\n    return new APIAdminListDevices(this);\n  }\n\n  // /admin/devices/{id}\n  device(id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  devicesForModel(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const apiList = this.devices();\n    apiList.params({\n      filter: 'deviceModelId_eq_' + id\n    });\n    return apiList;\n  }\n\n  // /admin/device/statuses\n  deviceStatuses() {\n    return new APIList<DeviceStatus>(this).push('admin', 'device', 'statuses');\n  }\n\n  // /admin/device-models\n  deviceModels() {\n    return new APIList<DeviceModel>(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  deviceModel(id: number) {\n    return new APIAdminResourceDeviceModel(this, id);\n  }\n\n  // /admin/device-problems\n  deviceProblems() {\n    return new APIList<DeviceProblem>(this).push('admin', 'device-problems');\n  }\n\n  // /admin/device-model-criteria\n  deviceModelCriterias() {\n    return new APIList<DeviceModelCriterion, CollectionQueryParams, DeviceModelCriterionData>(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  deviceModelCriteria(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceModelCriterion>(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSession>(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIAdminResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /device-time\n  deviceTime() {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryParams>(this).push('admin', 'device-time-summary');\n  }\n\n  // /device-types\n  deviceTypes() {\n    return new APIList<AdminDeviceType>(this).push('admin', 'device-types');\n  }\n\n  // /device-types/{id}\n  deviceType(id: number) {\n    return new APIResource<AdminDeviceType, NoQueryParams, DeviceTypeData>(this).push('admin', 'device-types', id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup>(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /admin/emails\n  emails() {\n    return new APIList<AdminEmail>(this).push('admin', 'emails');\n  }\n\n  // /admin/emails/{id}/resend\n  resendEmail(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<AdminEmail>(this).push('admin', 'emails', id, 'resend').post();\n  }\n\n  // /admin/errors\n  errors() {\n    return new APIList<AdminError>(this).push('admin', 'errors');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/frameworks\n  frameworks<T = Framework, U extends CollectionQueryParams = CollectionQueryParams, W = FrameworkData>() {\n    return new APIList<T, U, W>(this).push('admin', 'frameworks');\n  }\n\n  // /admin/frameworks/{id}\n  framework(id: number) {\n    return new APIAdminResourceFramework(this, id);\n  }\n\n  // /admin/frameworks/available-labels\n  frameworkAvailableLabels() {\n    const apiList = this.frameworks<DeviceProperty, CollectionQueryParams, NoData>();\n    apiList.push('available-labels');\n    return apiList;\n  }\n\n  // /admin/interactive-queue\n  interactiveQueue() {\n    return new APIList<AdminInteractiveDeviceSession>(this).push('admin', 'interactive-queue');\n  }\n\n  // /admin/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, LicenseData>(this).push('admin', 'licenses');\n  }\n\n  // /admin/licenses/{id}\n  license(id: number) {\n    return new APIAdminResourceLicense(this, id);\n  }\n\n  // /admin/maintenance\n  maintenance() {\n    return new APIResource<Maintenance, NoQueryParams, MaintenanceData>(this).push('admin', 'maintenance');\n  }\n\n  // /admin/notification-plans\n  notificationPlans() {\n    return new APIAdminListNotificationPlans(this);\n  }\n\n  // /admin/notification-plans/{id}\n  notificationPlan(id: number) {\n    return new APIAdminResourceNotificationPlan(this, id);\n  }\n\n  // /admin/overview\n  overview() {\n    return new APIResource<AdminOverview>(this).push('admin', 'overview');\n  }\n\n  pools() {\n    return new APIList<DeviceModelPool>(this).push('admin', 'pools');\n  }\n\n  pool(id: number) {\n    return new APIResource<DeviceModelPool, NoQueryParams, DeviceModelPoolData>(this).push('admin', 'pools', id);\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/roles\n  roles() {\n    return new APIList<Role, RoleParams, NoData>(this).push('admin', 'roles');\n  }\n\n  // /admin/runs\n  runs() {\n    return new APIAdminListRuns(this);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIAdminResourceRunStandalone(this, id);\n  }\n\n  // /admin/samples\n  samples() {\n    return new APIList<UserFile, CollectionQueryParams, Pick<UserFileData, 'file'>>(this).push('admin', 'samples');\n  }\n\n  // /admin/samples/{id}\n  sample(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<UserFile>(this).push('admin', 'samples', id);\n  }\n\n  // /admin/services\n  services() {\n    return new APIAdminListServices(this);\n  }\n\n  // /admin/services/{id}\n  service(id: number) {\n    return new APIAdminResourceService(this, id);\n  }\n\n  // /admin/settings\n  settings() {\n    return new APIResource<Settings, SettingsParams>(this).push('admin', 'settings');\n  }\n\n  // /admin/statistics\n  statistics() {\n    return new APIAdminListStatistics(this);\n  }\n\n  // /users\n  users() {\n    return new APIList<User, UserParams, UserData>(this).push('users');\n  }\n\n  // /admin/users\n  createUser() {\n    return new APIList<User, NoQueryParams, UserData>(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  user(id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n}\n\nexport default APIAdminResource;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {DesktopBrowserCapabilities} from './models/DesktopBrowserCapabilities';\nimport {Device, DevicesQueryParams} from './models/Device';\nimport {DevicePicker} from './models/DeviceFilter';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIListDevices extends APIList<Device, DevicesQueryParams> {\n\n  /**\n   * /devices\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  filters() {\n    return new APIResource<DevicePicker, CollectionQueryParams, Pick<DevicePicker, 'deviceFilterGroups'>>(this).push('filters');\n  }\n\n  // /devices/desktop-browser-capabilities\n  desktopBrowserCapabilities() {\n    return new APIResource<DesktopBrowserCapabilities, NoQueryParams, NoData>(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {CollectionQueryParams} from './models/HTTP';\nimport {Property, PropertyData} from './models/Property';\n\n\nexport class APIListProperties extends APIList<Property, CollectionQueryParams, PropertyData> {\n\n  /**\n   * /properties\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('properties');\n  }\n\n  maintenance() {\n    return new APIList<Property>(this).params({\n      filter: 'name_eq_CLOUD_HEADER_ANNOUNCEMENT',\n      limit: 1,\n      sort: 'updateTime_d'\n    });\n  }\n\n}\n\nexport default APIListProperties\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccountService, ServicePaymentStatus} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceData} from './models/Service';\n\n\nexport class APIListServices extends APIList<ServicePaymentStatus, NoQueryParams, ServiceData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['POST'];\n\n  /**\n   * /services\n   */\n  constructor(parent: API | APIResourceUser) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/available\n  available() {\n    return new APIList<Service, CollectionQueryParams, NoData>(this).push('available');\n  }\n\n  active() {\n    const apiList = new APIList<AccountService, CollectionQueryParams, NoData>(this);\n    if (this.first === 'me') {\n      apiList.push('active');\n    } else {\n      apiList.params({\n        notArchived: true\n      });\n    }\n    return apiList;\n  }\n\n  byPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).sort('centPrice');\n  }\n\n  availableByPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).push('available').sort('centPrice');\n  }\n\n}\n\nexport default APIListServices\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {\n  User,\n  UserActivateData,\n  UserData,\n  UserPasswordData,\n  UserRecoveryQueryParams,\n} from './models/User';\n\n\nexport class APIListUsers extends APIList<User, NoQueryParams, UserData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET', 'POST'];\n\n  /**\n   * /users\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  activate() {\n    return new APIResource<User, NoQueryParams, UserActivateData>(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  recoveries() {\n    return new APIResource<User | Message, UserRecoveryQueryParams, UserData>(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  passwordRecovery() {\n    return new APIResource<User, NoQueryParams, UserPasswordData>(this).push('password-recovery');\n  }\n\n}\n\nexport default APIListUsers;\n","import {APIResource} from './APIResource'\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {APIResourceAccount} from './APIResourceAccount';\n\n\n\n\nexport class APIResourceBillingPeriod extends APIResource<BillingPeriod, NoQueryParams, NoData> {\n\n  /**\n   * /billing-periods/{id}\n   */\n  constructor(parent: APIResourceAccount, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  receipt() {\n    return new APIResource<void, NoQueryParams, NoData>(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceBillingPeriod} from './APIResourceBillingPeriod';\nimport {Account, AccountData} from './models/Account';\nimport {AccountConcurrencyStatusMap} from './models/AccountConcurrencyStatusMap';\nimport {AccountPreferences} from './models/AccountPreference';\nimport {AccountService} from './models/AccountService';\nimport {AccountServicePayment} from './models/AccountServicePayment';\nimport {BillingPeriod, BillingPeriodQueryParams} from './models/BillingPeriod';\nimport {DeviceTimeSummaryQueryParams} from './models/Device';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams, QueryParams, SimpleCollectionResponse} from './models/HTTP';\nimport {User, UserData} from './models/User';\nimport {DeviceTimeQueryParams, UserDeviceTime} from './models/UserDeviceTime';\nimport {UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {VisualTestAccess} from './models/VisualTest';\n\n\nexport class APIResourceAccount extends APIResource<Account, QueryParams, AccountData> {\n\n  /**\n   * /accounts/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  concurrencyStatus() {\n    return new APIResource<AccountConcurrencyStatusMap, NoQueryParams, NoData>(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/device-time\n  deviceTime() {\n    return new APIList<UserDeviceTime, DeviceTimeQueryParams, NoData>(this).push('device-time');\n  }\n\n  // /accounts/{id}/device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryQueryParams, NoData>(this).push('device-time-summary');\n  }\n\n  // /accounts/{id}/preferences\n  preferences() {\n    return new APIResource<AccountPreferences, NoQueryParams, SimpleCollectionResponse<AccountPreferences>>(this).push('preferences');\n  }\n\n  // /accounts/{id}/users\n  users() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('users');\n  }\n\n  // /accounts/{accountId}/users/{userId}\n  removeUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id);\n  }\n\n  // /accounts/{accountId}/users/{userId}/disable\n  disableUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'disable').post();\n  }\n\n  // /accounts/{accountId}/users/{userId}/enable\n  enableUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'enable').post();\n  }\n\n  // /accounts/{accountId}/users/{userId}/resend-activation\n  resendActivation(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'resend-activation').post();\n  }\n\n  // /accounts/{accountId}/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod, CollectionBasicQueryParams, NoData>(this).push('billing-periods');\n  }\n\n  // /accounts/{accountId}/billing-periods/{id}\n  billingPeriod(id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  serviceBillingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<AccountServicePayment, BillingPeriodQueryParams, NoData>(this).push('account-services', id, 'billing-period');\n  }\n\n  // /account/{accountId}/visual-test/access\n  visualTestAccess() {\n    return new APIResource<VisualTestAccess, NoQueryParams, VisualTestAccess>(this).push('visual-tests', 'access');\n  }\n\n  // /account/{accountId}/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('account-services');\n  }\n\n  // /account/{accountId}/account-services/{id}\n  accountService(id: number) {\n    return new APIList<AccountService>(this).push('account-services', id);\n  }\n\n}\n\nexport default APIResourceAccount;\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Broker} from './models/Broker';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIResourceBroker extends APIResource {\n\n  /**\n   * /broker\n   */\n  constructor(parent: API) {\n\n    super(parent);\n    this.push('broker');\n  }\n\n  // /broker/hubs\n  hubs() {\n    return new APIList<Broker, NoQueryParams, NoData>(this).push('hubs');\n  }\n\n}\n\nexport default APIResourceBroker\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser} from './models/Browser';\nimport {Device, DeviceProperiesData, DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams} from './models/HTTP';\n\n\nexport class APIResourceDevice extends APIResource<Device> {\n\n  /**\n   * /devices/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  properties() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, DeviceProperiesData>(this).push('properties');\n  }\n\n  browsers() {\n    return new APIList<Browser>(this).push('browsers');\n  }\n\n}\n\nexport default APIResourceDevice\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams, NoQueryParams} from './models/HTTP';\nimport {LabelData, LabelGroup} from './models/LabelGroup';\n\nexport class APIResourceLabelGroup extends APIResource<LabelGroup> {\n\n  /**\n   * /label-groups/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('label-groups', id);\n  }\n\n  // /label-groups/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, LabelData>(this).push('labels');\n  }\n\n  // /label-groups/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, LabelData>(this).push('labels', id);\n  }\n\n}\n\nexport default APIResourceLabelGroup\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {FilesQueryParams} from './class/FilesQueryParams';\nimport {FileData, UploadObj, UserFile} from './models/UserFile';\n\n\nexport class APIListFiles extends APIList<UserFile, FilesQueryParams, FileData> {\n\n  /**\n   * /files\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('files');\n  }\n\n  /**\n   * Simplifies process of uploading\n   * /files\n   */\n  upload(obj: UploadObj): this {\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      return this.nodeUpload(obj);\n    } else {\n      /**\n       * Browser\n       * @todo\n       */\n      throw new Error('Not supported yet!');\n    }\n  }\n\n  private nodeUpload(file: UploadObj): this {\n    const fs = require('fs');\n    const FormData = require('form-data');\n    const form = new FormData();\n    form.append('file', fs.createReadStream(file.dir + '/' + file.filename), {\n      filename: file.filename\n    });\n    return this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import {APIList} from './APIList'\nimport {APIListNotifications} from './APIListNotifications';\nimport {APIResource} from './APIResource'\n\n\nexport class APIResourceChannel extends APIResource {\n\n  /**\n   * /users/{id}/notifications/channels/{type}\n   */\n  constructor(parent: APIListNotifications, type: string) {\n    if (type == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('channels', type);\n  }\n\n  // /channels/{type}/scopes\n  scopes() {\n    return new APIList(this).push('scopes');\n  }\n\n}\n\nexport default APIResourceChannel;\n","import {APIList} from './APIList';\nimport {APIResourceChannel} from './APIResourceChannel';\nimport {APIResourceUser} from './APIResourceUser';\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Notification, NotificationsData} from './models/Notification';\n\n\nexport class APIListNotifications extends APIList<Notification, CollectionQueryParams, NotificationsData> {\n\n  /**\n   * /notifications\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n  // /notifications/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  channel(type: string) {\n    return new APIResourceChannel(this, type);\n  }\n\n}\n\nexport default APIListNotifications\n","import {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoQueryParams} from './models/HTTP';\nimport {TestRun, TestRunConfig, TestRunsConfigData, TestRunsData, TestRunsQueryParams} from './models/TestRun';\n\n\nexport class APIListRuns extends APIList<TestRun, TestRunsQueryParams, TestRunsData> {\n\n  /**\n   * /runs\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  config() {\n    return new APIResource<TestRunConfig, NoQueryParams, TestRunsConfigData>(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import {Method} from 'axios';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData} from './models/HTTP';\nimport {SmartbearTunnel, TunnelQueryParams} from './models/SmartbearTunnel';\n\n\nexport class APIListSmartbearTunnels extends APIList<SmartbearTunnel, TunnelQueryParams, NoData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /tunnels\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   */\n  active(active: boolean): this {\n    return this.params({active: active});\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {Notification, NotificationData} from './models/Notification';\n\nexport class APIResourceNotification extends APIResource<Notification, NoQueryParams, NotificationData> {\n\n  /**\n   * /notifications/{id}\n   */\n  constructor(parent: APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  test() {\n    return new APIResource<Message, NoQueryParams, NoData>(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIListFiles} from './APIListFiles';\nimport {APIListNotifications} from './APIListNotifications';\nimport {APIListRuns} from './APIListRuns';\nimport {APIListServices} from './APIListServices';\nimport {APIListSmartbearTunnels} from './APIListSmartbearTunnels';\nimport {APIResource} from './APIResource';\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup';\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup';\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone';\nimport {APIResourceFile} from './APIResourceFile';\nimport {APIResourceNotification} from './APIResourceNotification';\nimport {APIResourceProject} from './APIResourceProject';\nimport {AccessGroup, AccessGroupsData} from './models/AccessGroup';\nimport {DeviceGroup, DeviceGroupData, DeviceGroupIdsData, DeviceGroupWithPublicParams} from './models/DeviceGroup';\nimport {DeviceStatistics} from './models/DeviceStatistics';\nimport {DeviceUsage} from './models/DeviceUsage';\nimport {Framework} from './models/Framework';\nimport {Project, UserProjectData, UserProjectQueryParams} from './models/Project';\nimport {User, UserDeleteData} from './models/User';\nimport {UiPreferencesData, UserPreference, UserPreferenceData} from './models/UserPreference';\nimport {StatisticQueryParams, UserStatistics} from './models/UserStatistics';\nimport {DeviceSession, DeviceSessionData, DeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams, QueryParams} from './models/HTTP';\nimport {DeviceStatisticQueryParam, DeviceUsageQueryParams} from './models/Device';\n\nexport class APIResourceUser extends APIResource<User> {\n\n  /**\n   * /users/{id} | /me\n   */\n  constructor(parent: API, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup, DeviceGroupWithPublicParams, DeviceGroupIdsData | Omit<DeviceGroupData, 'displayName'>>(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, DeviceSessionQueryParams, DeviceSessionData>(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /users/{id}/mark-account-owner\n  markAccountOwner() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('mark-account-owner').post();\n  }\n\n  // /users/{id}/projects\n  projects() {\n    return new APIList<Project, UserProjectQueryParams, UserProjectData>(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  files() {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  runs() {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-frameworks\n  availableFrameworks() {\n    return new APIList<Framework, CollectionBasicQueryParams, NoData>(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/reset-api-key\n   */\n  resetApiKey() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  restore() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  feedback() {\n    return new APIResource<void, QueryParams, FormData>(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  notifications() {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  notification(id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/preferences\n  preferences() {\n    return new APIResource<UserPreference, NoQueryParams, UserPreferenceData>(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  uiPreferences() {\n    return new APIResource<string, NoQueryParams, UiPreferencesData>(this).push('ui-preferences');\n  }\n\n  // /users/{id}/device-usage\n  deviceUsage() {\n    return new APIList<DeviceUsage, DeviceUsageQueryParams, NoData>(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  statistics() {\n    return new APIResource<UserStatistics, StatisticQueryParams, NoData>(this).push('statistics');\n  }\n\n  // /users/{id}/device-statistics\n  deviceStatistics() {\n    return new APIList<DeviceStatistics, DeviceStatisticQueryParam, NoData>(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionBasicQueryParams, AccessGroupsData>(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  smartbearTunnel(id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  smartbearTunnels() {\n    return new APIListSmartbearTunnels(this);\n  }\n\n  deleteAccount() {\n    return new APIResource<User, void, UserDeleteData>(this).push('delete');\n  }\n}\n\nexport default APIResourceUser\n","import {API} from '../API';\nimport {APIResource} from './APIResource'\nimport {NoQueryParams} from './models/HTTP';\nimport {LoginData, User} from './models/User';\n\nexport class APIResourceUserSession extends APIResource {\n\n  // /user-sessions\n  constructor(parent: API) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  login(data: LoginData) {\n    return new APIResource<User, NoQueryParams, LoginData>(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  logout() {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/oauth/authorize/{name}-login\n  sso(name: string) {\n    return new APIResource(this).push('oauth', 'authorize', name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  portalLogin() {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n  // /user-sessions/oauth/authorize/sbid-login\n  sbidCallbackUrl() {\n    return new APIResource(this).push('oauth', 'authorize', 'sbid-login').toUrl(true);\n  }\n\n}\n\nexport default APIResourceUserSession\n","import axios, {AxiosInstance} from 'axios';\n// @ts-ignore\nimport {version} from '../package.json';\nimport {APIAdminResource} from './api/APIAdminResource';\nimport {APIAdminResourceCluster} from './api/APIAdminResourceCluster';\nimport {APIList} from './api/APIList';\nimport {APIListDevices} from './api/APIListDevices';\nimport {APIListProperties} from './api/APIListProperties';\nimport {APIListServices} from './api/APIListServices';\nimport {APIListUsers} from './api/APIListUsers';\nimport {APIResource} from './api/APIResource';\nimport {APIResourceAccount} from './api/APIResourceAccount';\nimport {APIResourceBroker} from './api/APIResourceBroker';\nimport {APIResourceDevice} from './api/APIResourceDevice';\nimport {APIResourceDeviceGroup} from './api/APIResourceDeviceGroup';\nimport {APIResourceDeviceSession} from './api/APIResourceDeviceSession';\nimport {APIResourceFile} from './api/APIResourceFile';\nimport {APIResourceLabelGroup} from './api/APIResourceLabelGroup';\nimport {APIResourceProject} from './api/APIResourceProject';\nimport {APIResourceRun} from './api/APIResourceRun';\nimport {APIResourceUser} from './api/APIResourceUser';\nimport {APIResourceUserSession} from './api/APIResourceUserSession';\nimport {Cluster} from './api/models/Cluster';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './api/models/HTTP';\nimport {License} from './api/models/License';\nimport {Project} from './api/models/Project';\nimport {Property} from './api/models/Property';\nimport {UserFile, UserFileData, UserFileParams} from './api/models/UserFile';\nimport {ApiConfig} from './ApiConfig';\nimport './finka';\nimport {LabelGroup} from './api/models/LabelGroup';\n\n// @ts-ignore\nif (globalThis.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nexport class API {\n  axios: AxiosInstance;\n\n  private axiosConfig: ApiConfig = <ApiConfig>{};\n\n  get baseUrl(): string {\n    return this.axiosConfig.baseURL;\n  }\n\n\n  constructor(private config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    } else if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(`cloudUrl doesn't look like a URL`);\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error('apiKey is in the wrong format');\n      }\n\n      this.axiosConfig.auth = {\n        username: <string>this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /account/{id}\n  account(id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /admin\n  admin() {\n    return new APIAdminResource(this);\n  }\n\n  // /broker\n  broker() {\n    return new APIResourceBroker(this);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /devices/{id}\n  device(id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /devices\n  devices() {\n    return new APIListDevices(this);\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /device-statistics\n  deviceStatistics() {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /enums\n  enums() {\n    return new APIResource(this).push('enums');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /label-groups\n  labelGroups() {\n    return new APIList<LabelGroup, CollectionQueryParams, NoData>(this).push('label-groups');\n  }\n\n  // /label-groups/{id}\n  labelGroup(id: number) {\n    return new APIResourceLabelGroup(this, id);\n  }\n\n  // /labels\n  labels() {\n    return new APIList(this).push('labels');\n  }\n\n  // /licenses\n  licenses() {\n    return new APIResource(this).push('licenses');\n  }\n\n  // /license\n  license() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('license');\n  }\n\n  /*\n    /me or /admin\n    Requires prototype extension covering ACL check\n  */\n  ma(): APIAdminResource | APIResourceUser {\n    throw new Error('Requires prototype extension covering ACL check');\n  }\n\n  // /me\n  me() {\n    return this.user('me');\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /properties\n  properties() {\n    return new APIListProperties(this);\n  }\n\n  // /properties/{id}\n  property(id: number) {\n    return new APIResource<Property>(this).push('properties', id);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /user/{id}\n  user(id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  users() {\n    return new APIListUsers(this);\n  }\n\n  // /user-sessions\n  userSession() {\n    return new APIResourceUserSession(this);\n  }\n\n}\n\n\nexport default API;\n","/* istanbul ignore file */\n\nimport {API} from './API';\nimport {FilterBuilder} from './FilterBuilder';\n\nexport {API} from './API';\nexport {FilterBuilder} from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nexport const CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n","export enum AccessGroupScope {\n  USER = 'USER',\n  ACCOUNT = 'ACCOUNT',\n  GLOBAL = 'GLOBAL'\n}\n\nexport type AccessGroup = {\n  id: number;\n  name: string;\n  scope: AccessGroupScope;\n  userEmail: string;\n  userId: number;\n}\n\nexport type AccessGroupData = Pick<AccessGroup, 'name' | 'scope' | 'userId'>;\n\nexport type AccessGroupsData = Omit<AccessGroupData, 'userId'>;\n","import {ServiceUnit} from './Service';\n\nexport enum PaymentStatus {\n  SUCCEEDED = 'SUCCEEDED',\n  FAILED = 'FAILED',\n  REDIRECTED = 'REDIRECTED'\n}\n\nexport enum PaymentMethod {\n  PAYPAL = 'PAYPAL',\n  BRAINTREE = 'BRAINTREE',\n  STRIPE = 'STRIPE',\n  INVOICE = 'INVOICE',\n  PROMOTION = 'PROMOTION',\n  AWS = 'AWS'\n}\n\nexport enum ChargeType {\n  USAGE_MOBILE = 'USAGE_MOBILE',\n  CONCURRENCY_MOBILE = 'CONCURRENCY_MOBILE',\n  CONCURRENCY_DESKTOP = 'CONCURRENCY_DESKTOP'\n}\n\nexport enum DeactivateReason {\n  INITIAL_FAILURE = 'INITIAL_FAILURE',\n  SCA_FAILURE = 'SCA_FAILURE',\n  CHARGE_FAILURE = 'CHARGE_FAILURE',\n  CANCEL = 'CANCEL',\n  SUSPENDED = 'SUSPENDED',\n  ANOTHER_PURCHASE = 'ANOTHER_PURCHASE'\n}\n\nexport type ServicePaymentStatus = {\n  accountService: AccountService;\n  message: string;\n  redirectUrl: string;\n  status: PaymentStatus;\n}\n\nexport type AccountService = {\n  accountId: number;\n  accountName: string;\n  activatedById: number;\n  activatedByName: string;\n  active: boolean;\n  braintreeId: string;\n  chargeType: ChargeType;\n  createTime: number;\n  deactivateReason: DeactivateReason;\n  deactivatedById: number;\n  deactivatedByName: string;\n  endTime: number;\n  finished: boolean;\n  id: number;\n  lastPaymentTime: number;\n  paymentMethod: PaymentMethod;\n  price: number;\n  serviceCount: number;\n  serviceId: number;\n  serviceName: string;\n  slmLicenseId: string;\n  startTime: number;\n  subscriptionManagementURL: string;\n  total: number;\n  unit: ServiceUnit;\n  unitCount: number;\n  userId: number;\n  vatRate: number;\n}\n\nexport type AccountServiceData = Pick<AccountService, 'endTime' | 'serviceId' | 'slmLicenseId'> & {count: number};\n","import {DevicesQueryParams, Platform, SoftwareVersion} from './Device';\nimport {OsType} from './Enum';\nimport {CollectionQueryParams} from './HTTP';\n\n\nexport enum InitStep {\n  SKIP = 'SKIP',\n  REBOOT = 'REBOOT',\n  REBOOT_WITH_UNLOCK = 'REBOOT_WITH_UNLOCK',\n  UNLOCK_ONLY = 'UNLOCK_ONLY'\n}\n\nexport enum DeviceState {\n  OFFLINE_CLEANING = 'OFFLINE_CLEANING',\n  OFFLINE_DIRTY = 'OFFLINE_DIRTY',\n  OFFLINE_FREE = 'OFFLINE_FREE',\n  OFFLINE_TESTING = 'OFFLINE_TESTING',\n  ONLINE_CLEANING = 'ONLINE_CLEANING',\n  ONLINE_DIRTY = 'ONLINE_DIRTY',\n  ONLINE_FREE = 'ONLINE_FREE',\n  ONLINE_TESTING = 'ONLINE_TESTING'\n}\n\nexport type AdminDevice = {\n  accountId: number;\n  accountName: string;\n  cluster: unknown;\n  comment: string;\n  dedicationEndTime: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  enabled: boolean;\n  fingerprint: string;\n  forceRestore: boolean;\n  id: number;\n  initStep: InitStep;\n  ipAddress: string;\n  lastOnlineTime: number;\n  location: string;\n  locked: boolean;\n  manufacturer: string;\n  name: string;\n  osType: OsType;\n  ownerHasAccountService: boolean;\n  platform: Platform;\n  serialId: string;\n  softwareVersion: SoftwareVersion;\n  state: DeviceState;\n  stateChangeTime: number;\n  stateTime: number;\n  testTimeLimit: number;\n  unlockGesture: string;\n}\n\nexport type AdminDevicesQueryParams = Pick<DevicesQueryParams, 'withDisabled'> & CollectionQueryParams;\n\nexport type AdminDeviceData = Pick<AdminDevice, 'accountId' | 'enabled' | 'initStep' | 'ipAddress' | 'name' |\n  'serialId' | 'testTimeLimit' | 'unlockGesture'> & {apiLevel: number; releaseVersion: string};\n","export enum AdminErrorType {\n  ABORT_REQUEST = 'ABORT_REQUEST',\n  ADB_COMMAND_REJECTED = 'ADB_COMMAND_REJECTED',\n  ADB_SHELL_COMMAND_FAILED = 'ADB_SHELL_COMMAND_FAILED',\n  APP_LOCK_NOT_INSTALLED = 'APP_LOCK_NOT_INSTALLED',\n  DEVICE_OFFLINE = 'DEVICE_OFFLINE',\n  DEVICE_OUTPUT_NULL = 'DEVICE_OUTPUT_NULL',\n  GAMEBENCH_ERROR = 'GAMEBENCH_ERROR',\n  GAMEBENCH_NOT_SUPPORTED = 'GAMEBENCH_NOT_SUPPORTED',\n  GRANT_FAILED = 'GRANT_FAILED',\n  INSTALL_FAILED = 'INSTALL_FAILED',\n  INTERACTIVE_SETUP_FAILED = 'INTERACTIVE_SETUP_FAILED',\n  INTERNAL_INSTALL_FAILED = 'INTERNAL_INSTALL_FAILED',\n  INVALID_TEST_SESSION_FILE = 'INVALID_TEST_SESSION_FILE',\n  LOCK_EXPIRED = 'LOCK_EXPIRED',\n  LOCK_TIMEOUT = 'LOCK_TIMEOUT',\n  NO_NETWORK_CONNECTION = 'NO_NETWORK_CONNECTION',\n  OTHER = 'OTHER',\n  REBOOTING_TIMEOUT = 'REBOOTING_TIMEOUT',\n  REPACKAGING = 'REPACKAGING',\n  RESULTS_PREPARING = 'RESULTS_PREPARING',\n  RESULTS_PROCESSING = 'RESULTS_PROCESSING',\n  RESULTS_SENDING = 'RESULTS_SENDING',\n  STEP_TIMEOUT = 'STEP_TIMEOUT',\n  SYSTEM_FAILURE = 'SYSTEM_FAILURE',\n  TEST_RUN_FAILED = 'TEST_RUN_FAILED',\n  TEST_RUN_INTERRUPTED = 'TEST_RUN_INTERRUPTED',\n  TEST_RUN_TIMEOUT = 'TEST_RUN_TIMEOUT',\n  TEST_RUN_WARNED = 'TEST_RUN_WARNED',\n  TEST_TIMEOUT = 'TEST_TIMEOUT',\n  VNC_CONNECTION_SETUP_FAILED = 'VNC_CONNECTION_SETUP_FAILED',\n  XCRUN_INSTRUMENTS_COMMAND_FAILED = 'XCRUN_INSTRUMENTS_COMMAND_FAILED',\n  XCRUN_INSTRUMENTS_JS_ERROR = 'XCRUN_INSTRUMENTS_JS_ERROR'\n}\n\nexport type AdminError = {\n  id: number;\n  quantity: number;\n  type: AdminErrorType;\n}\n","import {DeviceSessionState} from './DeviceSession';\nimport {OsType} from './Enum';\n\nexport enum FrameworkType {\n  AUTOMATIC = 'AUTOMATIC',\n  MANUAL_APP = 'MANUAL_APP',\n  MANUAL_WEB = 'MANUAL_WEB',\n  REMOTE = 'REMOTE'\n}\n\nexport type AdminFrameworkStatistics = {\n  cloudName: string;\n  count: number;\n  day: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  frameworkId: number;\n  frameworkName: string;\n  id: number;\n  osType: OsType;\n  releaseVersion: string;\n  state: DeviceSessionState;\n  type: FrameworkType;\n  userEmail: string;\n  userId: number;\n}\n","import {PaymentMethod} from './AccountService';\nimport {DeviceSessionType} from './DeviceSession';\nimport {OsType} from './Enum';\nimport {QueryParams} from './HTTP';\n\nexport enum BillingType {\n  BUY = 'BUY',\n  CHARGE = 'CHARGE',\n  CANCEL = 'CANCEL'\n}\n\nexport type BillingPeriod = {\n  accountServiceId: number;\n  additionalHours: number;\n  additionalHoursPrice: number;\n  apiBillingPeriodType: BillingType;\n  createTime: number;\n  endBillingPeriod: number;\n  id: number;\n  lastPaymentDate: number;\n  paid: boolean;\n  paymentMethod: PaymentMethod;\n  plan: string;\n  servicePrice: number;\n  startBillingPeriod: number;\n  subscriptionEnd: number;\n  subscriptionStart: number;\n  totalPrice: number;\n  usages: Array<BillingPeriodUsage>;\n}\n\nexport type BillingPeriodUsage = {\n  billableSeconds: number;\n  id: number;\n  nonBillableSeconds: number;\n  osType: OsType;\n  type: DeviceSessionType;\n}\n\nexport interface BillingPeriodQueryParams extends QueryParams {\n  onDate: number;\n}\n","export enum BrokerType {\n  MOBILE = 'MOBILE',\n  DESKTOP = 'DESKTOP'\n}\n\nexport type Broker = {\n  id: number;\n  location: string;\n  type: BrokerType;\n  url: string;\n}\n","\nimport {AdminDevice} from './AdminDevice';\nimport {CollectionResponse, QueryParams} from './HTTP';\n\nexport type Cluster = {\n  devices: CollectionResponse<AdminDevice>;\n  enabled: boolean;\n  id: number;\n  ipAddress: string;\n  jenkinsUrl: string;\n  location: string;\n  name: string;\n  pluginVersion: string;\n  region: string;\n  state: ClusterState;\n  stateChangeTime: number;\n  stateTime: number;\n  url: string;\n}\n\nexport enum ClusterState {\n  'OFFLINE',\n  ONLINE = 'ONLINE',\n  RESTARTING = 'RESTARTING',\n  QUIET_DOWN = 'QUIET_DOWN',\n  MAINTENANCE = 'MAINTENANCE'\n}\n\nexport interface ClusterParams extends QueryParams {\n  withDevices: boolean;\n}\n\nexport type ClusterData = Pick<Cluster, 'enabled' | 'url'> & {\n  quietDown: boolean;\n  restart: boolean;\n  turnMaintenance: boolean;\n}\n","import {Browser} from './Browser';\nimport {OsType} from './Enum';\nimport {CollectionBasicQueryParams, CollectionQueryParams, CollectionResponse, QueryParams} from './HTTP';\nimport {TestRunsQueryParams} from './TestRun';\n\n\nexport enum DeviceGroupOrigin {\n  STATIC = 'STATIC',\n  DYNAMIC = 'DYNAMIC',\n  HYBRID = 'HYBRID'\n}\n\nexport enum Platform {\n  IOS = 'IOS',\n  ANDROID = 'ANDROID',\n  WINDOWS = 'WINDOWS',\n  MAC = 'MAC',\n  LINUX = 'LINUX',\n  UNDEFINED = 'UNDEFINED'\n}\n\nexport enum SupportedCreators {\n  MANUAL = 'MANUAL',\n  ROBOT = 'ROBOT',\n  AUTOMATIC = 'AUTOMATIC'\n}\n\nexport type DeviceProperty = {\n  displayName: string;\n  id: number;\n  labelGroupName: string;\n  name: string;\n  propertyGroupId: number;\n  propertyGroupName: string;\n}\n\nexport type SoftwareVersion = {\n  apiLevel: number;\n  id: number;\n  releaseVersion: string;\n}\n\nexport enum LockReason {\n  TESTING = 'TESTING',\n  CLEANING = 'CLEANING',\n  NOT_OPERATIONAL = 'NOT_OPERATIONAL'\n}\n\nexport type Device = {\n  accountId: number;\n  accountName: string;\n  available: boolean;\n  browsers: CollectionResponse<Browser>;\n  creditsPrice: number;\n  deviceGroupOrigin: DeviceGroupOrigin;\n  displayName: string;\n  enabled: boolean;\n  frame100Url: string;\n  frame160Url: string;\n  frame400Url: string;\n  frame80Url: string;\n  frameExtraWidth: number;\n  id: number;\n  imageHeight: number;\n  imageLeft: number;\n  imagePrefix: string;\n  imageTop: number;\n  imageWidth: number;\n  locked: boolean;\n  lockReason: LockReason;\n  manufacturer: string;\n  online: boolean;\n  osType: OsType;\n  platform: Platform;\n  properties: CollectionResponse<DeviceProperty>;\n  softwareVersion: SoftwareVersion;\n  supportedCreators: Array<SupportedCreators>;\n}\n\nexport type DeviceCleanupConfiguration = {\n  content: string;\n  createTime: number;\n  createdByEmail: string;\n  createdById: number;\n  discriminator: string;\n  enabled: boolean;\n  global: boolean;\n  example: true;\n  id: number;\n  lastModificationTime: number;\n  osType: OsType;\n}\n\nexport type DeviceCleanupConfigurationData = {\n  deviceCleanupConfigurationId: number;\n}\n\nexport type DeviceLabelData = {\n  labelId: number;\n}\n\nexport interface DeviceProperiesData extends QueryParams {\n  labelId: number;\n}\n\nexport interface CleanupConfigurationSpecificData extends QueryParams {\n  serialId: string;\n}\n\nexport interface DeviceTimeSummaryQueryParams extends CollectionBasicQueryParams {\n  forWholeAccount: boolean;\n}\nexport interface DeviceUsageQueryParams extends TestRunsQueryParams {\n  startTime: number;\n}\n\nexport interface DeviceStatisticQueryParam extends TestRunsQueryParams {\n  mode: string;\n}\n\nexport interface DevicesQueryParams extends CollectionQueryParams {\n  labelIds: Array<string>;\n  liveTestingOnly: boolean;\n  withBrowsers: boolean;\n  withDedicated: boolean;\n  withDisabled: boolean;\n  withProperties: boolean;\n  withSupportedCreators: boolean;\n}\n","export enum CriterionField {\n  NAME = 'NAME',\n  FINGERPRINT = 'FINGERPRINT',\n  SERIAL_ID = 'SERIAL_ID',\n  UNLOCK_GESTURE = 'UNLOCK_GESTURE',\n  SOFTWARE_VERSION = 'SOFTWARE_VERSION',\n  INIT_STEP = 'INIT_STEP',\n  ACCOUNT = 'ACCOUNT',\n  BROWSERS = 'BROWSERS'\n}\n\nexport type DeviceModelCriterion = {\n  createTime: number;\n  field: CriterionField;\n  id: number;\n  labelGroupDisplayName: string;\n  labelGroupId: number;\n  labelGroupName: string;\n}\n\nexport type DeviceModelCriterionData = Pick<DeviceModelCriterion, 'field' | 'labelGroupId'>;\n","export enum RetentionStrategy {\n  CLUSTER_ON_OFF = 'CLUSTER_ON_OFF',\n  MIN_FREE_MAX_TOTAL = 'MIN_FREE_MAX_TOTAL',\n  POOL_MANAGER_AWARE = 'POOL_MANAGER_AWARE'\n}\n\nexport type DeviceModelPool = {\n  createTime: number;\n  enabled: boolean;\n  id: number;\n  location: string;\n  maxTotal: number;\n  minAvailable: number;\n  name: string;\n  numberOfBrowsers: number;\n  osVersion: string;\n  retentionStrategy: RetentionStrategy;\n  running: number;\n}\n\nexport type DeviceModelPoolData = Pick<DeviceModelPool, 'maxTotal' | 'minAvailable'>;\n","export enum ProblemType {\n  CLEANING = 'CLEANING',\n  DIRTY = 'DIRTY',\n  OFFLINE = 'OFFLINE',\n  LOW_BATTERY = 'LOW_BATTERY',\n  HIGH_FAIL_RATE = 'HIGH_FAIL_RATE',\n  NO_INTERNET_CONNECTION = 'NO_INTERNET_CONNECTION'\n}\n\nexport type DeviceProblem = {\n  clusterId: number;\n  clusterName: string;\n  deviceId: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  deviceName: string;\n  id: number;\n  problems: Array<DeviceProblemPair>;\n}\n\nexport type DeviceProblemPair = {\n  id: number;\n  type: ProblemType;\n  value: any;\n}\n","import {Device} from './Device';\nimport {CollectionBasicQueryParams} from './HTTP';\n\nexport type TunnelSettings = {\n  domain: string;\n  email: string;\n}\n\nexport enum DeviceSessionType {\n  AUTOMATIC = 'AUTOMATIC',\n  MANUAL = 'MANUAL',\n  MANUAL_APP = 'MANUAL_APP',\n  MANUAL_WEB = 'MANUAL_WEB',\n  REMOTE = 'REMOTE'\n}\n\nexport enum RetryState {\n  NONE = 'NONE',\n  MANUAL = 'MANUAL',\n  AUTO = 'AUTO'\n}\n\nexport enum DeviceSessionState {\n  ABORTED = 'ABORTED',\n  EXCLUDED = 'EXCLUDED',\n  FAILED = 'FAILED',\n  RUNNING = 'RUNNING',\n  SUCCEEDED = 'SUCCEEDED',\n  TIMEOUT = 'TIMEOUT',\n  WAITING = 'WAITING',\n  WARNING = 'WARNING'\n}\n\nexport enum DeviceSessionStepType {\n  WAITING = 'WAITING',\n  PREPARING = 'PREPARING',\n  UNINSTALL = 'UNINSTALL',\n  INSTALL = 'INSTALL',\n  RUNNING = 'RUNNING',\n  SENDING_RESULTS = 'SENDING_RESULTS',\n  PROCESSING_RESULTS = 'PROCESSING_RESULTS'\n}\n\nexport type DeviceSessionConfig = {\n  adbVersion: string;\n  browserName: string;\n  browserVersion: string;\n  deviceModelId: number;\n  id: number;\n  screenResolution: string;\n  tunnelSettings: TunnelSettings;\n  type: DeviceSessionConfig;\n  url: string;\n}\n\nexport type DeviceSession = {\n  accountId: number;\n  autoRetriesLeftCount: number;\n  billable: boolean;\n  config: DeviceSessionConfig;\n  createTime: number;\n  clientSideId: string;\n  device: Device;\n  deviceInstanceId: number;\n  deviceLogFirstTimestamp: number;\n  deviceRunId: number;\n  deviceTime: number;\n  duration: number;\n  endTime: number;\n  excludeReason: string;\n  externalId: string;\n  id: number;\n  installTime: number;\n  name: string;\n  projectId: number;\n  projectName: string;\n  retryState: RetryState;\n  rowIndex: number;\n  startTime: number;\n  state: DeviceSessionState;\n  successRatio: number;\n  testCaseAllCount: number;\n  testCaseFailedCount: number;\n  testCasePassedCount: number;\n  testCaseSkippedCount: number;\n  testCaseSuccessCount: number;\n  testRunId: number;\n  testRunName: string;\n  timeLimit: number;\n  type: DeviceSessionType;\n  userEmail: string;\n  userId: number;\n}\n\nexport type DeviceSessionCommand = {\n  duration: number;\n  httpMethod: string;\n  id: number;\n  requestBody: string;\n  responseBody: string;\n  responseCode: number;\n  timestamp: number;\n  uri: string;\n}\n\nexport type DeviceSessionStep = {\n  deviceSessionId: number;\n  excludeReason: string;\n  failReason: string;\n  finishTimeMS: number;\n  id: number;\n  startTimeMS: number;\n  type: DeviceSessionStepType;\n}\n\nexport type DeviceSessionConnection = {\n  createTime: number;\n  deviceSessionId: number;\n  endTime: number;\n  externalId: string;\n  host: string;\n  id: number;\n  password: string;\n  path: string;\n  port: number;\n  type: string;\n  url: string;\n  urlSchema: string;\n}\n\nexport type DeviceSessionData = Omit<DeviceSessionConfig, 'adbVersion' | 'id' | 'tunnelSettings' | 'type'> & {configuration: DeviceSessionConfig};\n\nexport interface DeviceSessionQueryParams extends CollectionBasicQueryParams {\n  withProperties: boolean;\n}\n\nexport interface SessionQueryParams extends CollectionBasicQueryParams {\n  projectId: number;\n  testRunId: number;\n}\n\nexport interface SessionRunStepQueryParams extends CollectionBasicQueryParams {\n  runId: number;\n}\n\nexport interface SessionStepQueryParams extends SessionRunStepQueryParams {\n  projectId: number;\n}\n\nexport interface TRunDeviceSessionQueryParams extends CollectionBasicQueryParams {\n  projectId: number;\n}\n\nexport enum SessionReleaseReason {\n  INACTIVITY = 'INACTIVITY',\n  TIMEOUT = 'TIMEOUT',\n  USER_ACTION = 'USER_ACTION',\n  CHANGE_DEVICE = 'CHANGE_DEVICE',\n  WEBSOCKET_CLOSED = 'WEBSOCKET_CLOSED'\n}\n\nexport type DeviceSessionRelease = {\n  reason: SessionReleaseReason;\n}\n","export enum OsType {\n  IOS = 'IOS',\n  ANDROID = 'ANDROID',\n  DESKTOP = 'DESKTOP',\n  UNDEFINED = 'UNDEFINED'\n}\n\nexport type Enum = {\n  id: number;\n  value: string;\n}\n","export enum LicenseStatus {\n  ACTIVE = 'ACTIVE',\n  EXPIRED = 'EXPIRED',\n  INACTIVE = 'INACTIVE',\n  CLOSED = 'CLOSED'\n}\n\nexport type BaseLicense = {\n  enabled: boolean;\n};\n\nexport type FeatureLicense = {\n  deviceLimit: number;\n  deviceLimited: boolean;\n  projectLimit: number;\n  projectLimited: boolean;\n};\n\nexport type AndroidLicense = BaseLicense & FeatureLicense & {\n  cts: CTSLicense;\n  uiAutomator: UIAutomatorLicense;\n};\n\nexport type BuildLicense = BaseLicense & {\n  limit: number;\n  limited: boolean;\n};\n\nexport type DesktopLicense = BaseLicense & FeatureLicense;\n\nexport type GlobalLicense = FeatureLicense;\n\nexport type InspectorLicense = BaseLicense;\n\nexport type IOSLicense = BaseLicense & FeatureLicense;\n\nexport type RecorderLicense = BaseLicense & {\n  limit: number;\n  limited: boolean;\n};\n\nexport type ServerLicense = BaseLicense & {\n  androidEnabled: boolean;\n  iosEnabled: boolean;\n};\n\nexport type CTSLicense = BaseLicense;\n\nexport type UIAutomatorLicense = BaseLicense;\n\nexport type License = {\n  activateTime: number;\n  android: AndroidLicense;\n  build: BuildLicense;\n  closeTime: number;\n  desktop: DesktopLicense;\n  expireTime: number;\n  global: GlobalLicense;\n  id: number;\n  inspector: InspectorLicense;\n  ios: IOSLicense;\n  privateInstance: boolean;\n  recorder: RecorderLicense;\n  server: ServerLicense;\n  status: LicenseStatus;\n  userEmail: string;\n  userId: number;\n}\n\nexport type LicenseData = Pick<License, 'privateInstance' | 'userId'> & {\n  androidDeviceLimit: number;\n  androidEnabled: boolean;\n  androidProjectLimit: number;\n  buildEnabled: boolean;\n  buildLimit: number;\n  desktopDeviceLimit: number;\n  desktopEnabled: boolean;\n  desktopProjectLimit: number;\n  globalDeviceLimit: number;\n  globalProjectLimit: number;\n  inspectorEnabled: boolean;\n  iosDeviceLimit: number;\n  iosEnabled: boolean;\n  iosProjectLimit: number;\n  privateInstance: boolean;\n  unit: string;\n  unitCount: number;\n}\n","export type Maintenance = {\n  enabled: boolean;\n  id: number;\n}\n\nexport enum MaintenanceType {\n  BARE_METAL = 'BARE_METAL',\n  EC2 = 'EC2',\n  VM = 'VM'\n}\n\nexport type MaintenanceData = {\n  enabled: boolean;\n  type: MaintenanceType;\n}\n","import {QueryParams} from './HTTP';\n\n\nexport enum NotificationChannel {\n  SLACK = 'SLACK',\n  EMAIL = 'EMAIL',\n  WEBHOOK = 'WEBHOOK'\n}\n\nexport enum NotificationScope {\n  ALL = 'ALL',\n  TEST_RUN = 'TEST_RUN',\n  TEST_RUN_FAILURE = 'TEST_RUN_FAILURE',\n  TEST_RUN_SUCCEEDED = 'TEST_RUN_SUCCEEDED',\n  MAINTENANCE = 'MAINTENANCE',\n  MAINTENANCE_RELEASE = 'MAINTENANCE_RELEASE',\n  CUSTOM = 'CUSTOM',\n  NEWS = 'NEWS',\n  SYSTEM = 'SYSTEM',\n  CHECK = 'CHECK',\n  PLAN_LIMIT_REACHED = 'PLAN_LIMIT_REACHED',\n  PLAN_INVOICE = 'PLAN_INVOICE'\n}\n\nexport type Notification = {\n  channel: NotificationChannel;\n  destination: string;\n  id: number;\n  projectId?: number;\n  projectName?: string;\n  scope: NotificationScope;\n  userEmail: string;\n  userId: number;\n}\n\nexport interface NotificationData extends QueryParams {\n  scope: NotificationScope;\n}\n\nexport type NotificationsData = Pick<Notification, 'channel' | 'destination' | 'projectId' | 'scope'>;\n","import {OsType} from './Enum';\nimport {TestRunsQueryParams} from './TestRun';\n\nexport enum ArchivingStrategy {\n  NEVER = 'NEVER',\n  DAYS = 'DAYS',\n  RUNS = 'RUNS'\n}\n\nexport type Project = {\n  archiveTime: number;\n  archivingItemCount: number;\n  archivingStrategy: ArchivingStrategy;\n  common: boolean;\n  createTime: number;\n  description: string;\n  id: number;\n  name: string;\n  osType: OsType;\n  readOnly: boolean;\n  rowIndex: number;\n  shared: boolean;\n  sharedByEmail: string;\n  sharedById: number;\n  sharedWithCaller: boolean;\n  successRatio: number;\n  userEmail: string;\n  userId: number;\n}\n\nexport type UserProjectData = Pick<Project, 'name'>;\n\nexport interface UserProjectQueryParams extends TestRunsQueryParams {\n  showStatistics: boolean;\n}\n","import {Device} from './Device';\nimport {CollectionBasicQueryParams} from './HTTP';\n\nexport enum ScreenshotType {\n  LANDSCAPE = 'LANDSCAPE',\n  PORTRAIT = 'PORTRAIT'\n}\n\nexport type Screenshot = {\n  fail: boolean;\n  id: number;\n  originalName: string;\n  takeTimestamp: number;\n  type: ScreenshotType;\n}\n\nexport type ScreenshotExtended = Screenshot & {\n  device: Device;\n  deviceRunId: number;\n  projectId: number;\n  testRunId: number;\n}\n\nexport interface ScreenshotQueryParams extends CollectionBasicQueryParams {\n  name: string;\n}\n","import {ChargeType, PaymentMethod} from './AccountService';\nimport {CollectionQueryParams} from './HTTP';\nimport {Role} from './Role';\n\n\nexport type Service = {\n  activateTime: number;\n  activated: boolean;\n  archiveTime: number;\n  centPrice: number;\n  chargeType: ChargeType;\n  commonId: string;\n  customPlan: boolean;\n  defaultConcurrences: Array<number>;\n  description: string;\n  externalId: string;\n  features: string;\n  id: number;\n  includedHours: number;\n  name: string;\n  pricePerHour: number;\n  priceString: string;\n  roles: Array<Role>;\n  unit: ServiceUnit;\n}\n\nexport enum ServiceUnit {\n  DAY = 'DAY',\n  HOUR = 'HOUR',\n  MONTH = 'MONTH',\n  PROJECT = 'PROJECT',\n  RUN = 'RUN',\n  YEAR = 'YEAR'\n}\n\nexport interface AdminServicesParams extends CollectionQueryParams {\n  activeOnly: boolean;\n  inUse: boolean;\n  notArchive: boolean;\n}\n\nexport type ServiceActivateData = {\n  activateTime: number;\n}\n\nexport interface ServiceData {\n    address?: string;\n    braintreeNonce?: string;\n    cardNumber?: string;\n    city?: string;\n    count?: number;\n    country?: string;\n    cvv?: string;\n    email?: string;\n    expirationDate?: string;\n    firstName?: string;\n    lastName?: string;\n    organization?: string;\n    paymentMethod: PaymentMethod;\n    phone?: string;\n    serviceId: number;\n    state?: string;\n    stripeToken?: string;\n    vatId?: string;\n    zip?: string;\n}\n","import {QueryParams} from './HTTP';\n\n\nexport enum SharedResourceType {\n  DEVICE_GROUP = 'DEVICE_GROUP',\n  FILE = 'FILE',\n  PROJECT = 'PROJECT',\n}\n\nexport type SharedResource = {\n  id: number;\n  name: string;\n  resourceId: number;\n  type: SharedResourceType;\n}\n\nexport interface ShareData extends QueryParams {\n  accessGroupId: number;\n  email: string;\n}\n","import {Method} from 'axios';\nimport {CollectionResponse} from './HTTP';\n\n\nexport enum TestResult {\n  PASSED = 'PASSED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n  NOT_AVAILABLE = 'NOT_AVAILABLE'\n}\n\nexport type TestCaseRun = {\n  className: string;\n  createTime: number;\n  duration: number;\n  errorMessage: string;\n  id: number;\n  methodName: string;\n  result: TestResult;\n  stacktrace: string;\n  steps: CollectionResponse<TestCaseRunStep>;\n  suiteName: string;\n}\n\nexport type TestCaseRunStep = {\n  duration: number;\n  httpMethod: Uppercase<Method>;\n  id: number;\n  requestBody: string;\n  responseBody: string;\n  responseCode: number;\n  timestamp: number;\n  uri: string;\n}\n","import {Device} from './Device';\nimport {TunnelSettings} from './DeviceSession';\nimport {OsType} from './Enum';\nimport {CollectionBasicQueryParams, QueryParams} from './HTTP';\nimport {Tag} from './Tag';\nimport {UserFile} from './UserFile';\n\n\nexport enum LimitationType {\n  PACKAGE = 'PACKAGE',\n  CLASS = 'CLASS'\n}\n\nexport enum TestScheduler {\n  PARALLEL = 'PARALLEL',\n  SERIAL = 'SERIAL',\n  SINGLE = 'SINGLE',\n  ALL_INSTANCES = 'ALL_INSTANCES'\n}\n\nexport enum TestState {\n  WAITING = 'WAITING',\n  RUNNING = 'RUNNING',\n  FINISHED = 'FINISHED'\n}\n\n\nexport type TestRun = {\n  abortedDeviceCount: number;\n  billable: boolean;\n  config: TestRunConfig;\n  createTime: number;\n  deviceCount: number;\n  displayName: string;\n  errorsDeviceCount: number;\n  excludedDeviceCount: number;\n  executedTestCaseCount: number;\n  executionRatio: number;\n  failedTestCaseCount: number;\n  finishedDeviceCount: number;\n  frameworkId: number;\n  frameworkName: string;\n  id: number;\n  logsFileId: number;\n  message: string;\n  'number': number;\n  projectId: number;\n  projectName: string;\n  rowIndex: number;\n  runningDeviceCount: number;\n  screenshotsFileId: number;\n  startTime: number;\n  startedByDisplayName: string;\n  startedById: number;\n  state: TestState;\n  succeededDeviceCount: number;\n  successRatio: number;\n  successfulTestCaseCount: number;\n  tags: Array<Tag>;\n  testCaseCount: number;\n  timeoutedDeviceCount: number;\n  totalDeviceCount: number;\n  uiLink: string;\n  userId: number;\n  waitingDeviceCount: number;\n  warningDeviceCount: number;\n}\n\nexport enum TestRunConfigFileAction {\n  COPY_TO_DEVICE = 'COPY_TO_DEVICE',\n  INSTALL = 'INSTALL',\n  RUN_TEST = 'RUN_TEST',\n}\n\nexport type TestRunConfig = {\n  appCrawlerRun: boolean;\n  appiumBrokerAddress: string;\n  applicationPassword: string;\n  applicationUsername: string;\n  availableDeviceGroups: any;\n  availableDevices: Array<Device>;\n  availableFrameworks: any;\n  availableOsTypes: Array<OsType>;\n  clientSideTestConfig: any;\n  computedDevices: Array<number>;\n  creditsPrice: number;\n  deviceGroupId: number;\n  deviceIds: any;\n  deviceLanguageCode: string;\n  deviceNamePattern: string;\n  disableResigning: boolean;\n  files: Array<{\n    action: TestRunConfigFileAction;\n    availableActions: Array<TestRunConfigFileAction>;\n    file: UserFile;\n  }>;\n  frameworkId: number;\n  hookURL: string;\n  id: number;\n  instrumentationRunner: string;\n  limitationType: LimitationType;\n  limitationValue: string;\n  loadedPrevious: boolean;\n  example: true;\n  maxAutoRetriesCount: number;\n  maxTestTimeout: any;\n  osType: OsType;\n  projectId: number;\n  projectName: string;\n  resignFiles: boolean;\n  runAvailable: boolean;\n  scheduler: TestScheduler;\n  screenshotDir: string;\n  status: string;\n  statusCode: number;\n  testRunId: number;\n  testRunName: string;\n  testRunNameGrouping: string;\n  testRunParameters: any;\n  timeout: number;\n  tunnelSettings: TunnelSettings;\n  useSamples: boolean;\n  usedDeviceGroupId: number;\n  usedDeviceGroupName: string;\n  videoRecordingEnabled: boolean;\n  withAnnotation: string;\n  withoutAnnotation: string;\n}\n\nexport interface TestRunData extends QueryParams {\n  displayName: string;\n}\n\nexport interface RunData extends TestRunData {\n  projectId: number;\n}\n\nexport interface RunQueryParam extends QueryParams {\n  projectId: number;\n}\n\nexport interface TestRunsData {\n  configuration: TestRunConfig;\n}\n\nexport interface TestRunsConfigData extends TestRunsData {\n  includeDeviceGroups: boolean;\n  includeDevices: boolean;\n  includeFrameworks: boolean;\n}\n\n// for users/{userid}/runs\nexport interface TestRunsQueryParams extends CollectionBasicQueryParams {\n  forWholeAccount: boolean;\n  skipCommonProject: boolean;\n  skipShared: boolean;\n}\n","import {CollectionQueryParams, QueryParams} from './HTTP';\nimport {Role} from './Role';\n\n\nexport enum MfaStatus {\n  VERIFICATION_NEED = 'VERIFICATION_NEED',\n  DISABLED = 'DISABLED',\n  ENABLED = 'ENABLED'\n}\n\nexport enum UserStatus {\n  INACTIVE = 'INACTIVE',\n  DISABLED = 'DISABLED',\n  ENABLED = 'ENABLED'\n}\n\nexport type User = {\n  accountId: number;\n  accountName: string;\n  userAccountName: string;\n  accountOwners: Array<User>;\n  accountServiceIds: Array<number>;\n  address: string;\n  apiKey: string;\n  city: string;\n  code: string;\n  country: string;\n  createTime: number;\n  createdByEmail: string;\n  createdById: number;\n  deleteTime: number;\n  email: string;\n  enabled: boolean;\n  firstName: string;\n  id: number;\n  isAccountOwner: boolean;\n  lastLaunchedTestTime: number;\n  lastLoginTime: number;\n  lastName: string;\n  mfaQRCodeUrl: string;\n  mfaStatus: MfaStatus;\n  organization: string;\n  phone: string;\n  registrationIP: string;\n  roles: Array<Role>;\n  serviceIds: Array<number>;\n  state: string;\n  status: UserStatus;\n  timeZone: string;\n  vatId: string;\n}\n\nexport type UserData = Pick<User, 'email'>;\n\nexport interface UserParams extends CollectionQueryParams {\n  WITH_ADDRESS: boolean;\n  WITH_USER_INFO: boolean;\n  onlyMainUsers: boolean;\n  onlyWithDisabledServices: boolean;\n  withRole: string;\n  withRoles: boolean;\n}\n\nexport type UserUpdateAccount = Pick<User, 'accountId'>;\n\nexport type UserDeleteData = {\n  password: string;\n}\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\n\nexport type UserPasswordData = {\n  key: string;\n  password: string;\n};\nexport type UserActivateData = {\n  zip: string;\n} & UserPasswordData\n  & Pick<User, 'address' | 'city' | 'country' | 'email' | 'firstName' | 'lastName' | 'organization' | 'phone' | 'state' | 'vatId'>;\n\nexport interface UserRecoveryQueryParams extends QueryParams {\n  recoveryKey: string;\n}\n\nexport interface ValidateVatQueryParams extends QueryParams {\n  countryCode: string;\n  vatId: string;\n}\n","import {CollectionQueryParams, QueryParams} from './HTTP';\n\n\nexport enum FileDirection {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport enum FileInputType {\n  APPLICATION = 'APPLICATION',\n  TEST = 'TEST',\n  DATA = 'DATA'\n}\n\nexport enum FileState {\n  PREPARING = 'PREPARING',\n  READY = 'READY'\n}\n\nexport type FileProperty = {\n  id: number;\n  key: string;\n  value: string;\n};\n\nexport type UserFileTag = {\n  id: number;\n  name: string;\n}\n\nexport type UserFile = {\n  createTime: number;\n  directUrl: string;\n  direction: FileDirection;\n  duplicate: boolean;\n  fileProperties: Array<FileProperty>;\n  iconDirectUrl: string;\n  id: number;\n  inputType: FileInputType;\n  mimetype: string;\n  name: string;\n  shared: boolean;\n  size: number;\n  state: FileState;\n  userEmail: string;\n  userId: number;\n};\n\nexport interface UserFileParams extends CollectionQueryParams {\n  tag: Array<string>;\n}\n\nexport type UserFileData = {\n  file: FormData;\n  global: boolean;\n}\n\nexport type BuildLogsData = {\n  deviceRunIds: Array<number>;\n  projectId: number;\n  userId: number;\n}\n\nexport type BuildLogsParams = BuildLogsData;\n\nexport interface FileSizeData extends QueryParams {\n  height: number;\n  width: number;\n}\n\nexport type UploadObj = {\n  dir: string;\n  filename: string;\n}\n\nexport interface FileData {\n  file: Blob;\n  global: boolean;\n}\n","export enum VisualTestImageType {\n  FULL_PAGE = 'FULL_PAGE',\n  VIEWPORT = 'VIEWPORT',\n  ELEMENT_SCREENSHOT = 'ELEMENT_SCREENSHOT'\n}\n\nexport type VisualTestAccess = {\n  enabled: boolean;\n  apiKey: string | null;\n}\n\nexport type VisualTest = {\n  comparisonStatus:\tstring;\n  appUrl:\tstring;\n  createdAt:\tstring;\n  id: number;\n  imageName:\tstring;\n  imageThumbnailUrl:\tstring;\n  imageType:\tVisualTestImageType;\n  imageUrl:\tstring;\n  sessionId:\tstring;\n  testUrl:\tstring;\n}\n"],"names":["Filter","constructor","name","value","operand","this","finka","FilterBuilder","filters","gt","add","lt","after","afterorequal","before","beforeorequal","on","eq","contains","like","notlike","isnull","undefined","isnotnull","in","notin","raw","filter","Array","wrap","isFilterPart","SyntaxError","push","str","test","toString","parts","part","val","length","join","checkNull","_value","i","v","Date","getTime","isNull","item","endsWith","ALLOWED_HTTP_METHODS","APIOrder","exports","APIEntity","parent","stack","requestConfig","root","isArray","setRequestConfig","abortController","AbortController","abortRequest","abort","items","concat","shift","restack","first","last","toUrl","absolute","url","baseUrl","Object","deepAssign","removeRequestConfig","key","headers","_headers","replace","letter","toUpperCase","method","NAME","toLocaleUpperCase","indexOf","Error","get","post","delete","params","getParams","removeParam","data","jsonData","formData","send","signal","startsWith","paramsSerializer","axios","request","stringify","arrayFormat","APIList","all","noLimit","cut","between","create","sort","order","asc","limit","Number","isNatural","getLimit","offset","from","to","only","idx","page","search","query","APIResource","APIListCleanupConfigurations","super","specific","APIResourceCleanupConfiguration","id","devices","APIAdminListDevices","cleanupConfigurations","cleanupConfiguration","APIAdminListNotificationPlans","channels","scopes","APIAdminListRuns","config","apiResource","APIAdminListServices","active","apiList","notArchived","activated","inUse","byPrice","NonRequestable","Promise","reject","APIAdminListStatistics","deviceSessions","frameworks","__decorate","APIAdminResourceAccount","roles","role","accountServices","preferences","APIAdminResourceAccountService","activate","deactivate","APIAdminResourceCluster","APIAdminResourceDevice","labels","label","queue","APIAdminResourceDeviceModel","browsers","InputFileset","files","filesZip","IMAGE_FILES_FILTER","NON_MEDIA_FILES_FILTER","OutputFileset","file","screenshots","screenshot","screenshotFile","videos","tag","nonMediaFiles","performance","images","APIResourceDeviceSessionCommon","commands","input","output","release","steps","step","currentStep","testCaseRuns","connections","logs","responseType","clusterLogs","APIAdminResourceDeviceSessionStandalone","changeBillable","billable","deviceSessionId","postAdminDeviceSessionChangeBillable","APIAdminResourceDeviceTime","countSessionReport","stepTimeReport","APIAdminResourceFramework","requiredRoles","APIAdminResourceLicense","resend","download","APIAdminResourceNotificationPlan","check","execute","postDeviceRunIds","ids","a","deviceRunIds","APIAdminResourceRunStandalone","changePriority","priority","resource","retry","timeout","APIAdminResourceService","APIAdminResourceUserAccount","services","update","APIResourceDeviceSessionStandalone","connection","visualTestsImages","APIAdminResourceUser","disable","enable","licenses","resendActivation","account","deviceSession","APIResourceAccessGroup","users","user","resources","APIResourceDeviceGroup","device","selectors","selector","share","APIResourceFile","icon","tags","property","APIResourceDeviceSession","APIResourceRunCommon","buildLogsZip","dataAvailability","logsZip","performanceZip","screenshotNames","screenshotsZip","APIResourceRun","APIResourceProject","runs","run","unarchive","APIAdminResource","accessGroups","accessGroup","accounts","accountService","activities","administrators","billingPeriods","billingPeriod","browser","clusters","cluster","countryVatRates","countryVatRate","devicesForModel","deviceStatuses","deviceModels","deviceModel","deviceProblems","deviceModelCriterias","deviceModelCriteria","deviceTime","deviceTimeSummary","deviceTypes","deviceType","deviceGroups","deviceGroup","emails","resendEmail","errors","framework","frameworkAvailableLabels","interactiveQueue","license","maintenance","notificationPlans","notificationPlan","overview","pools","pool","projects","project","samples","sample","service","settings","statistics","createUser","APIListDevices","desktopBrowserCapabilities","APIListProperties","APIListServices","available","availableByPrice","APIListUsers","recoveries","passwordRecovery","APIResourceBillingPeriod","receipt","APIResourceAccount","concurrencyStatus","removeUser","disableUser","enableUser","serviceBillingPeriod","visualTestAccess","APIResourceBroker","hubs","APIResourceDevice","properties","APIResourceLabelGroup","APIListFiles","upload","obj","global","isNodeJs","nodeUpload","fs","require","form","append","createReadStream","dir","filename","getHeaders","APIResourceChannel","type","APIListNotifications","channel","APIListRuns","APIListSmartbearTunnels","APIResourceNotification","APIResourceUser","TypeError","markAccountOwner","availableFrameworks","resetApiKey","restore","feedback","notifications","notification","uiPreferences","deviceUsage","deviceStatistics","smartbearTunnel","smartbearTunnels","deleteAccount","APIResourceUserSession","login","logout","sso","portalLogin","sbidCallbackUrl","globalThis","defaults","common","maxContentLength","API","axiosConfig","cloudUrl","baseURL","v2","apiKey","auth","username","password","withCredentials","admin","broker","enums","labelGroups","labelGroup","ma","me","userSession","CloudAPIClient","AccessGroupScope","PaymentStatus","PaymentMethod","ChargeType","DeactivateReason","InitStep","DeviceState","AdminErrorType","FrameworkType","BillingType","BrokerType","ClusterState","DeviceGroupOrigin","Platform","SupportedCreators","LockReason","CriterionField","RetentionStrategy","ProblemType","DeviceSessionType","RetryState","DeviceSessionState","DeviceSessionStepType","SessionReleaseReason","OsType","LicenseStatus","MaintenanceType","NotificationChannel","NotificationScope","ArchivingStrategy","ScreenshotType","ServiceUnit","SharedResourceType","TestResult","LimitationType","TestScheduler","TestState","TestRunConfigFileAction","MfaStatus","UserStatus","FileDirection","FileInputType","FileState","VisualTestImageType"],"mappings":"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"}