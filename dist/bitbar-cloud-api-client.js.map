{"version":3,"file":"bitbar-cloud-api-client.js","sources":["../src/Filter.ts","../src/finka.ts","../src/FilterBuilder.ts","../src/api/models/HTTP.ts","../src/api/APIEntity.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListCleanupConfigurations.ts","../src/api/APIResourceCleanupConfiguration.ts","../src/api/APIAdminListDevices.ts","../src/api/APIAdminListNotificationPlans.ts","../src/api/APIAdminListRuns.ts","../src/api/APIAdminListServices.ts","../src/api/decorators/NonRequestable.ts","../src/api/APIAdminListStatistics.ts","../src/api/APIAdminResourceAccount.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceDeviceModel.ts","../src/api/class/InputFileset.ts","../src/api/class/Images.filter.ts","../src/api/class/NonMedia.filter.ts","../src/api/class/OutputFileset.ts","../src/api/APIResourceDeviceSessionCommon.ts","../src/api/factory/postAdminDeviceSessionChangeBillable.ts","../src/api/APIAdminResourceDeviceSessionStandalone.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceFramework.ts","../src/api/APIAdminResourceLicense.ts","../src/api/APIAdminResourceNotificationPlan.ts","../src/api/factory/postDeviceRunIds.ts","../src/api/APIAdminResourceRunStandalone.ts","../src/api/APIAdminResourceService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIResourceDeviceSessionStandalone.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRunCommon.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIAdminResource.ts","../src/api/APIListDevices.ts","../src/api/APIListProperties.ts","../src/api/APIListServices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceAccount.ts","../src/api/APIResourceBroker.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceLabelGroup.ts","../src/api/APIListFiles.ts","../src/api/APIResourceChannel.ts","../src/api/APIListNotifications.ts","../src/api/APIListRuns.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceUserSession.ts","../src/API.ts","../src/CloudAPIClient.ts","../src/api/models/AccessGroup.ts","../src/api/models/AccountService.ts","../src/api/models/AdminDevice.ts","../src/api/models/AdminError.ts","../src/api/models/AdminFrameworkStatistics.ts","../src/api/models/BillingPeriod.ts","../src/api/models/Broker.ts","../src/api/models/Cluster.ts","../src/api/models/Device.ts","../src/api/models/DeviceModelCriterion.ts","../src/api/models/DeviceModelPool.ts","../src/api/models/DeviceProblem.ts","../src/api/models/DeviceSession.ts","../src/api/models/Enum.ts","../src/api/models/License.ts","../src/api/models/Maintenance.ts","../src/api/models/Notification.ts","../src/api/models/Project.ts","../src/api/models/Screenshot.ts","../src/api/models/Service.ts","../src/api/models/SharedResource.ts","../src/api/models/TestCaseRun.ts","../src/api/models/TestRun.ts","../src/api/models/User.ts","../src/api/models/UserFile.ts","../src/api/models/VisualTest.ts"],"sourcesContent":["/**\n * Filter\n */\n\nexport class Filter<T = any> {\n  name: string;\n  value: T;\n  operand: string;\n\n  constructor(name: string, value: T, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import {Filter} from './Filter';\nimport './finka';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\nexport class FilterBuilder {\n\n  private readonly filters: Array<Filter> = [];\n\n  gt(name: string, value: number): this {\n    return this.add(name, value, 'gt');\n  }\n\n\n  lt(name: string, value: number): this {\n    return this.add(name, value, 'lt');\n  }\n\n  after(name: string, value: Date | number): this {\n    return this.add(name, value, 'after', true);\n  }\n\n  afterorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  before(name: string, value: Date | number): this {\n    return this.add(name, value, 'before', true);\n  }\n\n  beforeorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  on(name: string, value: any): this {\n    return this.add(name, value, 'on');\n  }\n\n  eq(name: string, value: any): this {\n    return this.add(name, value, 'eq');\n  }\n\n  contains(name: string, value: string): this {\n    return this.add(name, value, 'contains');\n  }\n\n  like(name: string, value: string): this {\n    return this.add(name, value, 'like');\n  }\n\n  notlike(name: string, value: string): this {\n    return this.add(name, value, 'notlike');\n  }\n\n  isnull(name: string): this {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  isnotnull(name: string): this {\n    return this.add(name, undefined, 'isnotnull');\n  }\n\n  in(name: string, value: Array<any>): this {\n    return this.add(name, value, 'in', true);\n  }\n\n  notin(name: string, value: Array<any>): this {\n    return this.add(name, value, 'notin', true);\n  }\n\n  raw(filter: Filter | string | Filter[] | string[]): void {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(<string>filter)) {\n        this.filters.push(<Filter>filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n\n  /**\n   * Check if given string is proper filter part\n   */\n  isFilterPart(str: string): boolean {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string>str);\n  }\n\n  toString(): string {\n    const parts: Array<string> = [];\n\n    let part: string,\n      val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add<T = any>(name: string, value: T, operand: string, checkNull = false): this {\n\n    let _value = Array.wrap(value);\n\n    if (_value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < _value.length; i++) {\n      const v = _value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        _value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of _value) {\n        if (v !== null) {\n          continue;\n        }\n        isNull = true;\n      }\n\n      if (isNull) {\n        _value = _value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    if (operand.endsWith('ornull') && _value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter<Array<T>>(name, _value, operand));\n\n    return this;\n  }\n}\n\n\nexport default FilterBuilder;\n","import {Method} from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @type {Array}\n * @default\n */\nexport const ALLOWED_HTTP_METHODS: Array<Method> = ['GET', 'POST', 'DELETE'];\n\nexport type QueryParam = string | number | boolean;\nexport type QueryParams = Record<string, QueryParam | Array<QueryParam>>;\n\nexport enum APIOrder {\n  asc = 'a',\n  desc = 'd'\n}\n\nexport interface CollectionQueryParams extends QueryParams {\n  filter: string;\n  limit: number;\n  offset: number;\n  sort: string;\n  search: string;\n}\n\nexport type CollectionBasicQueryParams = Omit<CollectionQueryParams, 'search'>\n\nexport type NoQueryParams = {\n  [key in any]: never;\n}\n\nexport type CollectionResponse<T> = {\n  data: Array<T>;\n  empty: boolean;\n  id: number;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  search: string;\n  sort: string;\n  total: number;\n}\n\nexport type SimpleCollectionResponse<T> = Pick<CollectionResponse<T>, 'data' | 'id'>;\nexport type NoData = void;\n","import {AxiosRequestConfig, AxiosResponse, Method} from 'axios';\nimport {stringify} from 'qs';\nimport {API} from '../API';\nimport {ALLOWED_HTTP_METHODS, QueryParams} from './models/HTTP';\nimport {AbortController} from 'node-abort-controller';\n\n\n/**\n * @typeParam RESPONSE        HTTP Response return type.\n * @typeParam QUERY_PARAMS    Allowed Query Params\n * @typeParam DATA Allowed    Data Object\n */\nexport class APIEntity<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = any> {\n\n  root: API;\n\n  protected stack: Array<string | number> = [];\n  protected requestConfig: AxiosRequestConfig = {};\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ALLOWED_HTTP_METHODS;\n  protected abortController: AbortController;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor(parent: APIEntity<RESPONSE> | API) {\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) { //???\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n    this.abortController = new AbortController();\n  }\n\n  abortRequest() {\n    this.abortController.abort();\n    this.abortController = new AbortController();\n  }\n\n  push(...items: Array<string | number>): this {\n    this.stack = this.stack.concat(items);\n    return this;\n  }\n\n  shift(): this {\n    this.stack.shift();\n    return this;\n  }\n\n  restack(...items: Array<string | number>): this {\n    this.stack = items;\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  get first(): string | number {\n    return this.stack[0];\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  get last(): string | number {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  set last(val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  toUrl(absolute = false): string {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      url = this.root.baseUrl + url;\n    }\n\n    return url;\n  }\n\n  setRequestConfig(requestConfig: AxiosRequestConfig): this {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  removeRequestConfig(key: keyof AxiosRequestConfig): this {\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  headers(headers: Record<string, string>): this {\n    const _headers: Record<string, string> = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      _headers[newKey] = headers[key];\n    }\n\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   */\n  method(name: Method): this {\n    const NAME: Uppercase<Method> = <Uppercase<Method>>name.toLocaleUpperCase();\n    const isAllowed: boolean = this.ALLOWED_HTTP_METHODS.indexOf(NAME) > -1;\n\n    if (!isAllowed) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${this.ALLOWED_HTTP_METHODS.join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   */\n  get(): this {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   */\n  post(): this {\n    return this.method('POST');\n  }\n\n  /**\n   * Set DELETE as HTTP method\n   */\n  delete(): this {\n    return this.method('DELETE');\n  }\n\n  /**\n   * Set params\n   */\n  params<T extends keyof QUERY_PARAMS = keyof QUERY_PARAMS>(params: Pick<QUERY_PARAMS, T>): this {\n    this.setRequestConfig({params});\n    return this;\n  }\n\n  getParams(): Partial<QUERY_PARAMS> {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  removeParam(key: keyof QUERY_PARAMS): this {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   */\n  data(data: DATA): this {\n    this.setRequestConfig({data});\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   */\n  jsonData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   */\n  formData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Send request\n   */\n  send<T = RESPONSE>(): Promise<AxiosResponse<T>> {\n    const requestConfig = <AxiosRequestConfig>Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`,\n      signal: this.abortController.signal\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n      (<string>requestConfig.headers['Content-Type']).startsWith('application/x-www-form-urlencoded') &&\n      requestConfig.data != null) {\n      requestConfig.data = this.paramsSerializer(requestConfig.data);\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    return this.root.axios.request<T>(requestConfig);\n  }\n\n  protected paramsSerializer(params: DATA | QUERY_PARAMS): string {\n    return stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n}\n\n\nexport default APIEntity;\n","import {AxiosResponse} from 'axios';\nimport {FilterBuilder} from '../FilterBuilder'\nimport {APIEntity} from './APIEntity'\nimport {APIOrder, CollectionBasicQueryParams, CollectionQueryParams, CollectionResponse, NoQueryParams, SimpleCollectionResponse} from './models/HTTP';\n\n\nexport const DEFAULT_LIMIT: number = 20;\nexport const DEFAULT_OFFSET: number = 0;\n\nexport class APIList<RESPONSE = any, QUERY_PARAMS extends CollectionBasicQueryParams | CollectionQueryParams | NoQueryParams = CollectionQueryParams, DATA = any>\n  extends APIEntity<CollectionResponse<RESPONSE> | SimpleCollectionResponse<RESPONSE>, QUERY_PARAMS, DATA> {\n\n  /**\n   * Shortcut for sending data POST\n   */\n  create(data: DATA): Promise<AxiosResponse<RESPONSE>> {\n    return this.post().data(data).send<RESPONSE>();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   */\n  sort(name: string, order: APIOrder = APIOrder.asc): this {\n    return this.params<'sort'>({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  limit(limit = DEFAULT_LIMIT): this {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params<'limit'>({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  getLimit(): number {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : <number>params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  noLimit(): this {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  offset(offset: number = DEFAULT_OFFSET): this {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params<'offset'>({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  between(from: number, to: number): this {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  only(idx: number): this {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  page(page = 1): this {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params<'offset' | 'limit'>({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  search(query: string): this {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params<'search'>({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  filter(filter: FilterBuilder | string): this {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    return this.params<'filter'>({\n      filter: filter.toString()\n    });\n  }\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit = this.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between = this.between;\n}\n\nexport default APIList;\n","import {APIEntity} from './APIEntity'\nimport {QueryParams} from './models/HTTP';\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nexport class APIResource<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = QUERY_PARAMS>\n  extends APIEntity<RESPONSE, QUERY_PARAMS, DATA> {\n}\n\n\nexport default APIResource;\n","import {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {CleanupConfigurationData, SpecificCleanupConfigurationQueryParams} from './models/CleanupConfiguration';\nimport {DeviceCleanupConfiguration} from './models/Device';\nimport {CollectionQueryParams, NoData} from './models/HTTP';\n\n\nexport class APIListCleanupConfigurations extends APIList<DeviceCleanupConfiguration, CollectionQueryParams, CleanupConfigurationData> {\n\n  /**\n   * /cleanup-configurations\n   */\n  constructor(parent: APIAdminListDevices) {\n    super(parent);\n    this.push('cleanup-configurations');\n  }\n\n  // /cleanup-configurations/specific\n  specific() {\n    return new APIResource<DeviceCleanupConfiguration, Partial<SpecificCleanupConfigurationQueryParams>, NoData>(this)\n      .push('specific');\n  }\n\n}\n\nexport default APIListCleanupConfigurations\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIResource} from './APIResource'\nimport {CleanupConfigurationSpecificData, DeviceCleanupConfiguration} from './models/Device';\nimport {NoData} from './models/HTTP';\nimport APIList from './APIList';\n\n\nexport class APIResourceCleanupConfiguration extends APIResource<DeviceCleanupConfiguration> {\n  //shuldn't it be APIAdminResourceCleanupConfiguration\n\n  /**\n   * admin/devices/cleanup-configurations/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('cleanup-configurations', id);\n  }\n\n  // admin/devices/cleanup-configurations/{id}/devices\n  devices() {\n    return new APIList<DeviceCleanupConfiguration, CleanupConfigurationSpecificData, NoData>(this).push('devices');\n  }\n\n}\n\nexport default APIResourceCleanupConfiguration\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIListCleanupConfigurations} from './APIListCleanupConfigurations';\nimport {APIResourceCleanupConfiguration} from './APIResourceCleanupConfiguration';\nimport {AdminDevice, AdminDeviceData, AdminDevicesQueryParams} from './models/AdminDevice';\n\n\nexport class APIAdminListDevices extends APIList<AdminDevice, AdminDevicesQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices\n   */\n  constructor(parent: APIAdminResource | API) {\n    super(parent);\n    this.push('admin', 'devices');\n  }\n\n  // /admin/devices/cleanup-configurations\n  cleanupConfigurations() {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  // /admin/devices/cleanup-configurations/{id}\n  cleanupConfiguration(id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n}\n\nexport default APIAdminListDevices;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {NotificationPlan, NotificationPlanData} from './models/NotificationPlan';\n\n\nexport class APIAdminListNotificationPlans extends APIList<NotificationPlan, CollectionQueryParams, NotificationPlanData> {\n\n  /**\n   * /admin/notification-plans\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'notification-plans');\n  }\n\n  // /notification-plans/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  // /notification-plans/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n}\n\n\nexport default APIAdminListNotificationPlans\n","import {Method} from 'axios';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource';\nimport {AdminTestRun, RunsConfigParams} from './models/AdminTestRun';\nimport {TestRunConfig} from './models/TestRun';\n\nexport class APIAdminListRuns extends APIList<AdminTestRun> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /admin/runs\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'runs');\n  }\n\n  // /runs/config\n  config() {\n    const apiResource = new APIResource<TestRunConfig, RunsConfigParams, {configuration: TestRunConfig}>(this);\n    apiResource.restack('runs', 'config');\n    return apiResource;\n  }\n\n}\n\n\nexport default APIAdminListRuns\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {AdminServicesParams, Service} from './models/Service';\n\n\nexport class APIAdminListServices extends APIList<Service, AdminServicesParams, Service> {\n\n  /**\n   * /admin/services\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'services');\n  }\n\n  active() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'notArchived'>({\n      notArchived: true\n    });\n    return apiList;\n  }\n\n  activated() {\n    const apiList = this.active();\n    apiList.params<'filter' | 'limit' | 'sort'>({\n      filter: 'activated_eq_true',\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  inUse() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'inUse' | 'limit' | 'sort'>({\n      inUse: true,\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  byPrice() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'sort'>({\n      sort: 'centPrice_a'\n    })\n    return apiList;\n  }\n\n}\n\nexport default APIAdminListServices;\n","import {AxiosResponse} from 'axios';\n\nexport function NonRequestable<T extends {new(...args: any[]): object}>(constructor: T) {\n  return class extends constructor {\n    send(): Promise<AxiosResponse> {\n      return Promise.reject();\n    }\n  };\n}\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AdminDeviceSessionStatistics, AdminStatisticsParams} from './models/AdminDeviceSessionStatistics';\nimport {AdminFrameworkStatistics} from './models/AdminFrameworkStatistics';\nimport {NoData} from './models/HTTP';\n\n\n@NonRequestable\nexport class APIAdminListStatistics extends APIList {\n\n  /**\n   * /admin/statistics\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'statistics');\n  }\n\n  // /admin/statistics/device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSessionStatistics, AdminStatisticsParams, NoData>(this).push('device-sessions');\n  }\n\n  // /admin/statistics/frameworks\n  frameworks() {\n    return new APIList<AdminFrameworkStatistics, AdminStatisticsParams, NoData>(this).push('frameworks');\n  }\n\n\n}\n\n\nexport default APIAdminListStatistics\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource'\nimport {Account} from './models/Account';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Role, RoleData, RoleParams} from './models/Role';\nimport {AccountService} from './models/AccountService';\nimport {AccountPreferences, AccountPreferencesData} from './models/AccountPreference';\n\n\nexport class APIAdminResourceAccount extends APIResource<Account, NoQueryParams, NoData> {\n\n  /**\n   * /admin/accounts/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'accounts', id);\n  }\n\n  // /admin/accounts/{id}/roles\n  roles() {\n    return new APIList<Role, RoleParams, RoleData>(this).push('roles');\n  }\n\n  // /admin/accounts/{id}/roles/{id}\n  role(id: number) {\n    return new APIResource<Role, RoleParams, NoData>(this).push('roles', id);\n  }\n\n  // //admin/accounts/{id}/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('account-services');\n  }\n\n  // /accounts/{id}/preferences\n  preferences() {\n    return new APIResource<AccountPreferences, NoQueryParams, AccountPreferencesData>(this).push('preferences');\n  }\n\n}\n\nexport default APIAdminResourceAccount\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {AccountService} from './models/AccountService';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIAdminResourceAccountService extends APIResource<AccountService, NoQueryParams, NoData> {\n\n  /**\n   * /admin/account-services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  activate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  deactivate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice} from './models/AdminDevice';\nimport {Cluster, ClusterData, ClusterParams} from './models/Cluster';\n\n\nexport class APIAdminResourceCluster extends APIResource<Cluster, ClusterParams, ClusterData> {\n\n  /**\n   * /clusters/{id}\n   */\n  constructor(parent: API | APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  devices() {\n    return new APIList<AdminDevice>(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice, AdminDeviceData} from './models/AdminDevice';\nimport {AdminDeviceSession} from './models/AdminDeviceSession';\nimport {\n  DeviceCleanupConfiguration,\n  DeviceCleanupConfigurationData,\n  DeviceLabelData,\n  DeviceProperty\n} from './models/Device';\nimport {NoData, NoQueryParams, QueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDevice extends APIResource<AdminDevice, NoQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/cleanup-configuration\n  cleanupConfiguration() {\n    return new APIResource<DeviceCleanupConfiguration, QueryParams, DeviceCleanupConfigurationData>(this).push('cleanup-configuration');\n  }\n\n  // /admin/devices/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, NoQueryParams, DeviceLabelData>(this).push('labels');\n  }\n\n  // /admin/devices/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, NoData>(this).push('labels', id);\n  }\n\n  // /admin/devices/{id}/queue\n  queue() {\n    return new APIList<AdminDeviceSession>(this).push('queue');\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser, DeviceBrowserData} from './models/Browser';\nimport {DeviceModel, DeviceModelData} from './models/DeviceModel';\nimport {NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDeviceModel extends APIResource<DeviceModel, NoQueryParams, DeviceModelData> {\n\n  /**\n   * /admin/device-models/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'device-models', id);\n  }\n\n  // /admin/device-models/{id}/browsers\n  browsers() {\n    return new APIList<Browser, NoQueryParams, DeviceBrowserData>(this).push('browsers');\n  }\n\n}\n\nexport default APIAdminResourceDeviceModel;\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {NoData} from '../models/HTTP';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\n\n\n@NonRequestable\nexport class InputFileset extends APIResource<NoData> {\n\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  /**\n   * @remarks Endpoint /input-file-set/files\n   */\n  files() {\n    return new APIList<UserFile, FilesQueryParams, NoData>(this).push('files');\n  }\n\n  /**\n   * @remarks Endpoint /input-file-set/files.zip\n   */\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","// Create image files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const IMAGE_FILES_FILTER = new FilterBuilder();\nIMAGE_FILES_FILTER.eq('state', 'READY');\nIMAGE_FILES_FILTER.in('mimetype', [\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif'\n]);\nIMAGE_FILES_FILTER.notlike('name', 'action-%%');\n","// Create non-media files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {Screenshot} from '../models/Screenshot';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\nimport {IMAGE_FILES_FILTER} from './Images.filter';\nimport {NON_MEDIA_FILES_FILTER} from './NonMedia.filter';\n\n\n@NonRequestable\nexport class OutputFileset extends APIResource<UserFile, FilesQueryParams> {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  files() {\n    return new APIList<UserFile, FilesQueryParams>(this).push('files');\n  }\n\n  // /output-file-set/files/{id}\n  file(id: number) {\n    return new APIResource<UserFile, FilesQueryParams>(this).push('files', id);\n  }\n\n  // /output-file-set/files.zip\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  screenshots() {\n    return new APIList<Screenshot, FilesQueryParams>(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  screenshot(id: number) {\n    return new APIResource<Screenshot, FilesQueryParams>(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  screenshotFile(id: number) {\n    return this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  videos() {\n    return this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  nonMediaFiles() {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n  performance() {\n    return this.files().params({\n      tag: ['performance']\n    })\n  }\n\n  images() {\n    return this.files().filter(IMAGE_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource'\nimport {InputFileset} from './class/InputFileset'\nimport {OutputFileset} from './class/OutputFileset'\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\nimport {\n  DeviceSession,\n  DeviceSessionCommand,\n  DeviceSessionStep,\n  SessionQueryParams,\n  SessionRunStepQueryParams,\n  SessionStepQueryParams\n} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot} from './models/Screenshot';\nimport {TestCaseRun} from './models/TestCaseRun';\n\nexport class APIResourceDeviceSessionCommon extends APIResource<DeviceSession> implements DeviceSessionCommon {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/commands\n  commands() {\n    return new APIList<DeviceSessionCommand>(this).push('commands');\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  release() {\n    return new APIResource<DeviceSession, NoQueryParams, void>(this).push('release').post();\n  }\n\n  // /device-sessions/{id}/screenshots\n  screenshots() {\n    return new APIList<Screenshot, SessionQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  screenshot(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  step(id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceSessionStep, NoQueryParams, NoData>(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  currentStep() {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  testCaseRuns() {\n    return new APIList<TestCaseRun, SessionQueryParams | NoQueryParams, NoData>(this).push('test-case-runs');\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList(this).push('connections');\n  }\n\n  logs() {\n    return new APIResource(this).push('logs').setRequestConfig({\n      responseType: 'text'\n    });\n  }\n\n  clusterLogs() {\n    return new APIResource(this).push('cluster-logs').setRequestConfig({\n      responseType: 'text'\n    });\n  }\n\n}\n\nexport default APIResourceDeviceSessionCommon\n","import {APIResource} from '../APIResource';\nimport APIResourceDeviceSessionCommon from '../APIResourceDeviceSessionCommon';\nimport {DeviceSession} from '../models/DeviceSession';\n\nexport function postAdminDeviceSessionChangeBillable(parent: APIResourceDeviceSessionCommon, billable: boolean) {\n  const apiResource = new APIResource<DeviceSession>(parent);\n  const deviceSessionId = apiResource.last;\n\n  return apiResource.restack('admin', 'device-sessions', deviceSessionId, 'changebillable').params({\n    billable\n  }).post();\n}\n\nexport default postAdminDeviceSessionChangeBillable;\n","import {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {postAdminDeviceSessionChangeBillable} from './factory/postAdminDeviceSessionChangeBillable';\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\n\n\n/**\n * APIAdminResourceDevice\n *\n *\n * It will require more work to decouple from regular session\n */\nexport class APIAdminResourceDeviceSessionStandalone extends APIResourceDeviceSessionCommon implements DeviceSessionCommon {\n\n  // /admin/device-sessions/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return postAdminDeviceSessionChangeBillable(this, billable);\n  }\n}\n\nexport default APIAdminResourceDeviceSessionStandalone;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {DeviceTimeCountSessionReportEntry} from './models/DeviceTimeCountSessionReportEntry';\nimport {DeviceTimeStepTimeReportEntry} from './models/DeviceTimeStepTimeReportEntry';\nimport {NoData} from './models/HTTP';\nimport {DeviceTimeParams, UserDeviceTime} from './models/UserDeviceTime';\n\nexport class APIAdminResourceDeviceTime extends APIList<UserDeviceTime, DeviceTimeParams, NoData> {\n\n  /**\n   * /admin/device-time\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  countSessionReport() {\n    return new APIList<DeviceTimeCountSessionReportEntry>(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  stepTimeReport() {\n    return new APIList<DeviceTimeStepTimeReportEntry>(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Framework, FrameworkConfigData, FrameworkEditData} from './models/Framework';\nimport {NoQueryParams} from './models/HTTP';\nimport {ProjectJobConfig} from './models/ProjectJobConfig';\nimport {Role} from './models/Role';\n\nexport class APIAdminResourceFramework extends APIResource<Framework, NoQueryParams, FrameworkEditData> {\n\n  /**\n   * /admin/frameworks/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'frameworks', id);\n  }\n\n  // /admin/frameworks/{id}/config\n  config() {\n    return new APIResource<ProjectJobConfig, NoQueryParams, FrameworkConfigData>(this).push('config');\n  }\n\n  // /admin/frameworks/{id}/required-roles\n  requiredRoles() {\n    return new APIList<Role>(this).push('required-roles');\n  }\n\n}\n\nexport default APIAdminResourceFramework\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\n\nexport class APIAdminResourceLicense extends APIResource<License, NoQueryParams, NoData> {\n\n  /**\n   * /licenses/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'licenses', id);\n  }\n\n  // /licenses/{id}/activate\n  activate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('activate');\n  }\n\n  // /licenses/{id}/deactivate\n  deactivate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('deactivate');\n  }\n\n  // /licenses/{id}/resend\n  resend() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('resend');\n  }\n\n  // /licenses/{id}/download\n  download() {\n    return new APIResource<Blob, NoQueryParams, NoData>(this).push('download');\n  }\n\n}\n\nexport default APIAdminResourceLicense\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Notification} from './models/Notification';\nimport {NotificationPlan, NotificationPlanEditData} from './models/NotificationPlan';\n\nexport class APIAdminResourceNotificationPlan extends APIResource<NotificationPlan, NoQueryParams, NotificationPlanEditData> {\n\n  /**\n   * /admin/notification-plans/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'notification-plans', id);\n  }\n\n  // /admin/notification-plans/{id}/check\n  check() {\n    return new APIList<Notification>(this).push('check');\n  }\n\n  // /admin/notification-plans/{id}/test\n  test() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('test');\n  }\n\n  // /admin/notification-plans/{id}/execute\n  execute() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('execute');\n  }\n\n}\n\nexport default APIAdminResourceNotificationPlan\n","import {APIEntity} from '../APIEntity';\nimport {APIResource} from '../APIResource';\nimport {BuildLogsData, BuildLogsParams} from '../models/UserFile';\n\nexport function postDeviceRunIds<T>(parent: APIEntity, name: string, ids?: Array<number>) {\n  const a = new APIResource<T, BuildLogsParams, BuildLogsData>(parent).push(name);\n\n  if (ids != null) {\n    a.params<'deviceRunIds'>({\n      deviceRunIds: ids\n    });\n  }\n\n  return a.post();\n}\n\nexport default postDeviceRunIds;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun, RunChangeBillableParams, RunChangePriorityParams} from './models/AdminTestRun';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceRunStandalone extends APIResource<AdminTestRun, NoQueryParams, NoData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun, NoQueryParams, NoData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return new APIResource<AdminTestRun, RunChangeBillableParams>(this).push('changebillable').post().params({\n      billable\n    });\n  }\n\n  // /runs/{id}/changepriority\n  changePriority(priority?: number) {\n    const resource = new APIResource<AdminTestRun, RunChangePriorityParams>(this).push('changepriority');\n    if (priority) {\n      resource.post().data({\n        priority\n      });\n    }\n    return resource;\n  }\n\n  // /admin/runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<AdminTestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n}\n\nexport default APIAdminResourceRunStandalone;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceActivateData} from './models/Service';\n\n\nexport class APIAdminResourceService extends APIResource<Service, NoQueryParams, NoData> {\n\n  /**\n   * /services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'services', id);\n  }\n\n  // /services/{id}/activate\n  activate() {\n    return new APIResource<Service, ServiceActivateData>(this).push('activate').post();\n  }\n\n}\n\nexport default APIAdminResourceService\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccountService, AccountServiceData} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Role, RoleData} from './models/Role';\nimport {User, UserUpdateAccount} from './models/User';\n\n@NonRequestable\nexport class APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /account\n   */\n  constructor(parent: APIAdminResourceUser) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  roles() {\n    return new APIList<Role, NoQueryParams, RoleData>(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  role(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Role, NoQueryParams, NoData>(this).push('roles', id);\n  }\n\n  // /account-services\n  services() {\n    const a = new APIList<AccountService, CollectionQueryParams, AccountServiceData>(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  update() {\n    const a = new APIResource<User, UserUpdateAccount>(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {InputFileset} from './class/InputFileset';\nimport {OutputFileset} from './class/OutputFileset';\nimport {DeviceSessionStandalone} from './interface/DeviceSessionStandalone';\nimport {Connection, ConnectionData} from './models/Connection';\nimport {DeviceSession, DeviceSessionRelease} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {VisualTest} from './models/VisualTest';\n\nexport class APIResourceDeviceSessionStandalone extends APIResource<DeviceSession> implements DeviceSessionStandalone {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIResourceUser | APIAdminResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList<Connection, CollectionBasicQueryParams, ConnectionData>(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  connection(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Connection, NoQueryParams, NoData>(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  release() {\n    return new APIResource<DeviceSession, NoQueryParams, DeviceSessionRelease>(this).push('release').post();\n  }\n\n  // /device-sessions/{id}/visual-tests/images\n  visualTestsImages() {\n    return new APIList<VisualTest, NoQueryParams, NoData>(this).push('visual-tests', 'images');\n  }\n\n}\n\nexport default APIResourceDeviceSessionStandalone\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIAdminResourceUserAccount} from './APIAdminResourceUserAccount';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\nimport {Role, RoleParams} from './models/Role';\nimport {User} from './models/User';\n\n\n@NonRequestable\nexport class APIAdminResourceUser extends APIResource<User> {\n\n  /**\n   * /admin/users/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /admin/users/{id}/disable\n  disable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('disable');\n  }\n\n  // /admin/users/{id}/enable\n  enable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('enable');\n  }\n\n  // /admin/users/{id}/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, NoData>(this).push('licenses');\n  }\n\n  // /admin/users/{id}/resend-activation\n  resendActivation() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('resend-activation').post();\n  }\n\n  // /admin/users/{id}/account\n  account() {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n  // /admin/users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /admin/users/{id}/roles\n  roles() {\n    return new APIList<Role, RoleParams, NoData>(this).push('roles');\n  }\n\n  // /admin/users/{id}/roles/{id}\n  role(id: number) {\n    return new APIResource<Role, RoleParams, NoData>(this).push('roles', id);\n  }\n\n}\n\nexport default APIAdminResourceUser;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccessGroup} from './models/AccessGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {SharedResource} from './models/SharedResource';\nimport {User, UserData} from './models/User';\n\nexport class APIResourceAccessGroup extends APIResource<AccessGroup> {\n\n  /**\n   * /access-groups/{id}\n   *\n   */\n  constructor(parent: APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  users() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  user(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  resources() {\n    return new APIList<SharedResource, CollectionBasicQueryParams, NoData>(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  resource(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<SharedResource, NoQueryParams, NoData>(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport APIResourceUser from './APIResourceUser';\nimport {Device, DeviceProperty} from './models/Device';\nimport {DeviceGroup, DeviceGroupData, DeviceGroupParams, DeviceGroupSelectorData} from './models/DeviceGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {ShareData, SharedResource} from './models/SharedResource';\n\nexport class APIResourceDeviceGroup extends APIResource<DeviceGroup> {\n\n  /**\n   * /device-groups/{id}\n   */\n  constructor(parent: APIAdminResource | APIResourceUser | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  devices() {\n    return new APIList<Device | DeviceGroup, DeviceGroupParams, DeviceGroupData>(this).push('devices');\n  }\n\n  // /device-groups/{id}/devices/{id}\n  device(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<void, NoQueryParams, NoData>(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  selectors() {\n    return new APIList<DeviceProperty | DeviceGroup, CollectionBasicQueryParams, DeviceGroupSelectorData>(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  selector(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n  // /device-groups/{id}/share\n  share() {\n    return new APIList<SharedResource, NoQueryParams, ShareData>(this).push('share');\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {CollectionBasicQueryParams, NoData} from './models/HTTP';\nimport {Property} from './models/Property';\nimport {ShareData, SharedResource} from './models/SharedResource';\nimport {FileSizeData, UserFile, UserFileTag} from './models/UserFile';\n\n\nexport class APIResourceFile extends APIResource<UserFile> {\n\n  /**\n   * /files/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  // /files/{id}/file\n  file() {\n    return new APIResource<UserFile, FileSizeData, NoData>(this).push('file');\n  }\n\n  // /files/{id}/icon\n  icon() {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  tags() {\n    return new APIList<UserFileTag, CollectionBasicQueryParams, NoData>(this).push('tags');\n  }\n\n  share() {\n    return new APIList<SharedResource, ShareData>(this).push('share');\n  }\n\n  property(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<Property>(this).push('properties', id);\n  }\n\n}\n\nexport default APIResourceFile\n","import {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {DeviceSession} from './interface/DeviceSession';\nimport {DeviceSession as DeviceSessionModel} from './models/DeviceSession';\n\nexport class APIResourceDeviceSession extends APIResourceDeviceSessionCommon implements DeviceSession {\n\n  // /device-sessions/{id}/abort\n  abort() {\n    return new APIResource<DeviceSessionModel>(this).push('abort').post();\n  }\n\n  // /device-sessions/{id}/retry\n  retry() {\n    return new APIResource<DeviceSessionModel>(this).push('retry').post();\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun} from './models/AdminTestRun';\nimport {DeviceSession, DeviceSessionStep, TRunDeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot, ScreenshotExtended, ScreenshotQueryParams} from './models/Screenshot';\nimport {Tag, TagsData, TagsQueryParams, TaqQueryParams, TestRunTagsData} from './models/Tag';\nimport {RunData, RunQueryParam, TestRun, TestRunData} from './models/TestRun';\nimport {TestRunDataAvailability, TestRunDataAvailabilityQueryParams} from './models/TestRunDataAvailability';\nimport {UserFile} from './models/UserFile';\n\nexport class APIResourceRunCommon extends APIResource<TestRun, RunQueryParam, TestRunData | RunData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun | TestRun, NoQueryParams, RunData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/build-logs.zip\n  buildLogsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'build-logs.zip', ids);\n  }\n\n  // /runs/{id}/data-availability\n  dataAvailability() {\n    return new APIResource<TestRunDataAvailability, TestRunDataAvailabilityQueryParams, NoData>(this).push('data-availability');\n  }\n\n  // /runs/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, CollectionBasicQueryParams | TRunDeviceSessionQueryParams, NoData>(this).push('device-sessions');\n  }\n\n  // /runs/{id}/files.zip\n  filesZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'files.zip', ids);\n  }\n\n  // /runs/{id}/logs.zip\n  logsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'logs.zip', ids);\n  }\n\n  // /runs/{id}/performance.zip\n  performanceZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'performance.zip', ids);\n  }\n\n  // /runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<TestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/screenshot-names\n  screenshotNames() {\n    return new APIList<Screenshot, NoQueryParams, NoData>(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  screenshots() {\n    return new APIList<ScreenshotExtended, ScreenshotQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /runs/{id}/screenshots.zip\n  screenshotsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'screenshots.zip', ids);\n  }\n\n  // /runs/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams, NoData>(this).push('steps');\n  }\n\n  // /runs/{id}/tags\n  tags() {\n    return new APIList<Tag, CollectionBasicQueryParams | TagsQueryParams, TagsData | TestRunTagsData>(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  tag(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Tag, TaqQueryParams, NoData>(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRunCommon\n","import {APIResourceDeviceSession} from './APIResourceDeviceSession'\nimport {APIResourceRunCommon} from './APIResourceRunCommon'\n\nexport class APIResourceRun extends APIResourceRunCommon {\n\n  // /runs/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n}\n\nexport default APIResourceRun\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceRun} from './APIResourceRun'\nimport {APIResourceUser} from './APIResourceUser';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Project} from './models/Project';\nimport {ShareData, SharedResource} from './models/SharedResource';\nimport {TestRun} from './models/TestRun';\n\nexport class APIResourceProject extends APIResource<Project> {\n\n  /**\n   * /projects/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  runs() {\n    return new APIList<TestRun, CollectionBasicQueryParams, NoData>(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  share() {\n    return new APIList<SharedResource, ShareData>(this).push('share');\n  }\n\n  // /unarchive\n  unarchive() {\n    return new APIResource<void, NoQueryParams, NoData>(this).push('unarchive');\n  }\n\n}\n\nexport default APIResourceProject\n","import {API} from '../API';\nimport {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIAdminListNotificationPlans} from './APIAdminListNotificationPlans';\nimport {APIAdminListRuns} from './APIAdminListRuns';\nimport {APIAdminListServices} from './APIAdminListServices';\nimport {APIAdminListStatistics} from './APIAdminListStatistics';\nimport APIAdminResourceAccount from './APIAdminResourceAccount';\nimport {APIAdminResourceAccountService} from './APIAdminResourceAccountService';\nimport {APIAdminResourceCluster} from './APIAdminResourceCluster';\nimport {APIAdminResourceDevice} from './APIAdminResourceDevice';\nimport {APIAdminResourceDeviceModel} from './APIAdminResourceDeviceModel';\nimport {APIAdminResourceDeviceSessionStandalone} from './APIAdminResourceDeviceSessionStandalone';\nimport {APIAdminResourceDeviceTime} from './APIAdminResourceDeviceTime';\nimport {APIAdminResourceFramework} from './APIAdminResourceFramework';\nimport {APIAdminResourceLicense} from './APIAdminResourceLicense';\nimport {APIAdminResourceNotificationPlan} from './APIAdminResourceNotificationPlan';\nimport {APIAdminResourceRunStandalone} from './APIAdminResourceRunStandalone';\nimport {APIAdminResourceService} from './APIAdminResourceService';\nimport {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup';\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup';\nimport {APIResourceFile} from './APIResourceFile'\nimport {APIResourceProject} from './APIResourceProject';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccessGroup, AccessGroupData} from './models/AccessGroup';\nimport {Account} from './models/Account';\nimport {AccountService} from './models/AccountService';\nimport {Activity} from './models/Activity';\nimport {AdminDeviceSession, AdminInteractiveDeviceSession} from './models/AdminDeviceSession';\nimport {AdminDeviceType, DeviceTypeData} from './models/AdminDeviceType';\nimport {AdminEmail} from './models/AdminEmail';\nimport {AdminError} from './models/AdminError';\nimport {Administrator} from './models/Administrator';\nimport {AdminOverview} from './models/AdminOverview';\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {Browser, BrowserData} from './models/Browser';\nimport {CountryVatRate, CountryVatRateData} from './models/CountryVatRate';\nimport {DeviceModelCriterion, DeviceModelCriterionData} from './models/DeviceModelCriterion';\nimport {DeviceModelPool, DeviceModelPoolData} from './models/DeviceModelPool';\nimport {Framework, FrameworkData} from './models/Framework';\nimport {License, LicenseData} from './models/License';\nimport {Maintenance, MaintenanceData} from './models/Maintenance';\nimport {Project} from './models/Project';\nimport {Role, RoleParams} from './models/Role';\nimport {Settings, SettingsParams} from './models/Settings';\nimport {User, UserData, UserParams} from './models/User';\nimport {DeviceTimeSummaryParams, UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {UserFile, UserFileData, UserFileParams} from './models/UserFile';\nimport {Cluster} from './models/Cluster';\nimport {DeviceProperty} from './models/Device';\nimport {DeviceGroup} from './models/DeviceGroup';\nimport {DeviceModel} from './models/DeviceModel';\nimport {DeviceProblem} from './models/DeviceProblem';\nimport {DeviceStatus} from './models/DeviceStatus';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n@NonRequestable\nexport class APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   */\n  constructor(parent: API) {\n    super(parent);\n  }\n\n  // /access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionQueryParams, AccessGroupData>(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  accounts() {\n    return new APIList<Account>(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  account(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIAdminResourceAccount(this, id);\n  }\n\n  // /admin/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  accountService(id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  activities() {\n    return new APIList<Activity>(this).push('admin', 'activities');\n  }\n\n  // admin/administrators\n  administrators() {\n    return new APIList<Administrator>(this).push('admin', 'administrators');\n  }\n\n  // /admin/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod>(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  billingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<BillingPeriod>(this).push('admin', 'billing-periods', id);\n  }\n\n  // /admin/browsers\n  browsers() {\n    return new APIList<Browser, CollectionQueryParams, BrowserData>(this).push('admin', 'browsers');\n  }\n\n  // /admin/browsers/{id}\n  browser(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Browser, NoQueryParams, BrowserData>(this).push('admin', 'browsers', id);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /admin/country-vat-rates\n  countryVatRates() {\n    return new APIList<CountryVatRate, CollectionQueryParams, CountryVatRateData>(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  countryVatRate(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<CountryVatRate, NoQueryParams, Omit<CountryVatRate, 'country'>>(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  devices() {\n    return new APIAdminListDevices(this);\n  }\n\n  // /admin/devices/{id}\n  device(id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  devicesForModel(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const apiList = this.devices();\n    apiList.params({\n      filter: 'deviceModelId_eq_' + id\n    });\n    return apiList;\n  }\n\n  // /admin/device/statuses\n  deviceStatuses() {\n    return new APIList<DeviceStatus>(this).push('admin', 'device', 'statuses');\n  }\n\n  // /admin/device-models\n  deviceModels() {\n    return new APIList<DeviceModel>(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  deviceModel(id: number) {\n    return new APIAdminResourceDeviceModel(this, id);\n  }\n\n  // /admin/device-problems\n  deviceProblems() {\n    return new APIList<DeviceProblem>(this).push('admin', 'device-problems');\n  }\n\n  // /admin/device-model-criteria\n  deviceModelCriterias() {\n    return new APIList<DeviceModelCriterion, CollectionQueryParams, DeviceModelCriterionData>(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  deviceModelCriteria(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceModelCriterion>(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSession>(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIAdminResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /device-time\n  deviceTime() {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryParams>(this).push('admin', 'device-time-summary');\n  }\n\n  // /device-types\n  deviceTypes() {\n    return new APIList<AdminDeviceType>(this).push('admin', 'device-types');\n  }\n\n  // /device-types/{id}\n  deviceType(id: number) {\n    return new APIResource<AdminDeviceType, NoQueryParams, DeviceTypeData>(this).push('admin', 'device-types', id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup>(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /admin/emails\n  emails() {\n    return new APIList<AdminEmail>(this).push('admin', 'emails');\n  }\n\n  // /admin/emails/{id}/resend\n  resendEmail(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<AdminEmail>(this).push('admin', 'emails', id, 'resend').post();\n  }\n\n  // /admin/errors\n  errors() {\n    return new APIList<AdminError>(this).push('admin', 'errors');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/frameworks\n  frameworks<T = Framework, U extends CollectionQueryParams = CollectionQueryParams, W = FrameworkData>() {\n    return new APIList<T, U, W>(this).push('admin', 'frameworks');\n  }\n\n  // /admin/frameworks/{id}\n  framework(id: number) {\n    return new APIAdminResourceFramework(this, id);\n  }\n\n  // /admin/frameworks/available-labels\n  frameworkAvailableLabels() {\n    const apiList = this.frameworks<DeviceProperty, CollectionQueryParams, NoData>();\n    apiList.push('available-labels');\n    return apiList;\n  }\n\n  // /admin/interactive-queue\n  interactiveQueue() {\n    return new APIList<AdminInteractiveDeviceSession>(this).push('admin', 'interactive-queue');\n  }\n\n  // /admin/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, LicenseData>(this).push('admin', 'licenses');\n  }\n\n  // /admin/licenses/{id}\n  license(id: number) {\n    return new APIAdminResourceLicense(this, id);\n  }\n\n  // /admin/maintenance\n  maintenance() {\n    return new APIResource<Maintenance, NoQueryParams, MaintenanceData>(this).push('admin', 'maintenance');\n  }\n\n  // /admin/notification-plans\n  notificationPlans() {\n    return new APIAdminListNotificationPlans(this);\n  }\n\n  // /admin/notification-plans/{id}\n  notificationPlan(id: number) {\n    return new APIAdminResourceNotificationPlan(this, id);\n  }\n\n  // /admin/overview\n  overview() {\n    return new APIResource<AdminOverview>(this).push('admin', 'overview');\n  }\n\n  pools() {\n    return new APIList<DeviceModelPool>(this).push('admin', 'pools');\n  }\n\n  pool(id: number) {\n    return new APIResource<DeviceModelPool, NoQueryParams, DeviceModelPoolData>(this).push('admin', 'pools', id);\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/roles\n  roles() {\n    return new APIList<Role, RoleParams, NoData>(this).push('admin', 'roles');\n  }\n\n  // /admin/runs\n  runs() {\n    return new APIAdminListRuns(this);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIAdminResourceRunStandalone(this, id);\n  }\n\n  // /admin/samples\n  samples() {\n    return new APIList<UserFile, CollectionQueryParams, Pick<UserFileData, 'file'>>(this).push('admin', 'samples');\n  }\n\n  // /admin/samples/{id}\n  sample(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<UserFile>(this).push('admin', 'samples', id);\n  }\n\n  // /admin/services\n  services() {\n    return new APIAdminListServices(this);\n  }\n\n  // /admin/services/{id}\n  service(id: number) {\n    return new APIAdminResourceService(this, id);\n  }\n\n  // /admin/settings\n  settings() {\n    return new APIResource<Settings, SettingsParams>(this).push('admin', 'settings');\n  }\n\n  // /admin/statistics\n  statistics() {\n    return new APIAdminListStatistics(this);\n  }\n\n  // /users\n  users() {\n    return new APIList<User, UserParams, UserData>(this).push('users');\n  }\n\n  // /admin/users\n  createUser() {\n    return new APIList<User, NoQueryParams, UserData>(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  user(id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n}\n\nexport default APIAdminResource;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {DesktopBrowserCapabilities} from './models/DesktopBrowserCapabilities';\nimport {Device, DevicesQueryParams} from './models/Device';\nimport {DevicePicker} from './models/DeviceFilter';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIListDevices extends APIList<Device, DevicesQueryParams> {\n\n  /**\n   * /devices\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  filters() {\n    return new APIResource<DevicePicker, CollectionQueryParams, Pick<DevicePicker, 'deviceFilterGroups'>>(this).push('filters');\n  }\n\n  // /devices/desktop-browser-capabilities\n  desktopBrowserCapabilities() {\n    return new APIResource<DesktopBrowserCapabilities, NoQueryParams, NoData>(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {CollectionQueryParams} from './models/HTTP';\nimport {Property, PropertyData} from './models/Property';\n\n\nexport class APIListProperties extends APIList<Property, CollectionQueryParams, PropertyData> {\n\n  /**\n   * /properties\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('properties');\n  }\n\n  maintenance() {\n    return new APIList<Property>(this).params({\n      filter: 'name_eq_CLOUD_HEADER_ANNOUNCEMENT',\n      limit: 1,\n      sort: 'updateTime_d'\n    });\n  }\n\n}\n\nexport default APIListProperties\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccountService, ServicePaymentStatus} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceData} from './models/Service';\n\n\nexport class APIListServices extends APIList<ServicePaymentStatus, NoQueryParams, ServiceData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['POST'];\n\n  /**\n   * /services\n   */\n  constructor(parent: API | APIResourceUser) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/available\n  available() {\n    return new APIList<Service, CollectionQueryParams, NoData>(this).push('available');\n  }\n\n  active() {\n    const apiList = new APIList<AccountService, CollectionQueryParams, NoData>(this);\n    if (this.first === 'me') {\n      apiList.push('active');\n    } else {\n      apiList.params({\n        notArchived: true\n      });\n    }\n    return apiList;\n  }\n\n  byPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).sort('centPrice');\n  }\n\n  availableByPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).push('available').sort('centPrice');\n  }\n\n}\n\nexport default APIListServices\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {\n  User,\n  UserActivateData,\n  UserData,\n  UserPasswordData,\n  UserRecoveryQueryParams,\n} from './models/User';\n\n\nexport class APIListUsers extends APIList<User, NoQueryParams, UserData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET', 'POST'];\n\n  /**\n   * /users\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  activate() {\n    return new APIResource<User, NoQueryParams, UserActivateData>(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  recoveries() {\n    return new APIResource<User | Message, UserRecoveryQueryParams, UserData>(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  passwordRecovery() {\n    return new APIResource<User, NoQueryParams, UserPasswordData>(this).push('password-recovery');\n  }\n\n}\n\nexport default APIListUsers;\n","import {APIResource} from './APIResource'\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {APIResourceAccount} from './APIResourceAccount';\n\n\n\n\nexport class APIResourceBillingPeriod extends APIResource<BillingPeriod, NoQueryParams, NoData> {\n\n  /**\n   * /billing-periods/{id}\n   */\n  constructor(parent: APIResourceAccount, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  receipt() {\n    return new APIResource<void, NoQueryParams, NoData>(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceBillingPeriod} from './APIResourceBillingPeriod';\nimport {Account, AccountData} from './models/Account';\nimport {AccountConcurrencyStatusMap} from './models/AccountConcurrencyStatusMap';\nimport {AccountPreferences} from './models/AccountPreference';\nimport {AccountService} from './models/AccountService';\nimport {AccountServicePayment} from './models/AccountServicePayment';\nimport {BillingPeriod, BillingPeriodQueryParams} from './models/BillingPeriod';\nimport {DeviceTimeSummaryQueryParams} from './models/Device';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams, QueryParams, SimpleCollectionResponse} from './models/HTTP';\nimport {User, UserData} from './models/User';\nimport {DeviceTimeQueryParams, UserDeviceTime} from './models/UserDeviceTime';\nimport {UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {VisualTestAccess} from './models/VisualTest';\n\n\nexport class APIResourceAccount extends APIResource<Account, QueryParams, AccountData> {\n\n  /**\n   * /accounts/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  concurrencyStatus() {\n    return new APIResource<AccountConcurrencyStatusMap, NoQueryParams, NoData>(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/device-time\n  deviceTime() {\n    return new APIList<UserDeviceTime, DeviceTimeQueryParams, NoData>(this).push('device-time');\n  }\n\n  // /accounts/{id}/device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryQueryParams, NoData>(this).push('device-time-summary');\n  }\n\n  // /accounts/{id}/preferences\n  preferences() {\n    return new APIResource<AccountPreferences, NoQueryParams, SimpleCollectionResponse<AccountPreferences>>(this).push('preferences');\n  }\n\n  // /accounts/{id}/users\n  users() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('users');\n  }\n\n  // /accounts/{accountId}/users/{userId}\n  removeUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id);\n  }\n\n  // /accounts/{accountId}/users/{userId}/disable\n  disableUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'disable').post();\n  }\n\n  // /accounts/{accountId}/users/{userId}/enable\n  enableUser(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'enable').post();\n  }\n\n  // /accounts/{accountId}/users/{userId}/resend-activation\n  resendActivation(id: number) {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id, 'resend-activation').post();\n  }\n\n  // /accounts/{accountId}/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod, CollectionBasicQueryParams, NoData>(this).push('billing-periods');\n  }\n\n  // /accounts/{accountId}/billing-periods/{id}\n  billingPeriod(id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  serviceBillingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<AccountServicePayment, BillingPeriodQueryParams, NoData>(this).push('account-services', id, 'billing-period');\n  }\n\n  // /account/{accountId}/visual-test/access\n  visualTestAccess() {\n    return new APIResource<VisualTestAccess, NoQueryParams, VisualTestAccess>(this).push('visual-tests', 'access');\n  }\n\n  // /account/{accountId}/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('account-services');\n  }\n\n  // /account/{accountId}/account-services/{id}\n  accountService(id: number) {\n    return new APIList<AccountService>(this).push('account-services', id);\n  }\n\n}\n\nexport default APIResourceAccount;\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Broker} from './models/Broker';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIResourceBroker extends APIResource {\n\n  /**\n   * /broker\n   */\n  constructor(parent: API) {\n\n    super(parent);\n    this.push('broker');\n  }\n\n  // /broker/hubs\n  hubs() {\n    return new APIList<Broker, NoQueryParams, NoData>(this).push('hubs');\n  }\n\n}\n\nexport default APIResourceBroker\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser} from './models/Browser';\nimport {Device, DeviceProperiesData, DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams} from './models/HTTP';\n\n\nexport class APIResourceDevice extends APIResource<Device> {\n\n  /**\n   * /devices/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  properties() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, DeviceProperiesData>(this).push('properties');\n  }\n\n  browsers() {\n    return new APIList<Browser>(this).push('browsers');\n  }\n\n}\n\nexport default APIResourceDevice\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams, NoQueryParams} from './models/HTTP';\nimport {LabelData, LabelGroup} from './models/LabelGroup';\n\nexport class APIResourceLabelGroup extends APIResource<LabelGroup> {\n\n  /**\n   * /label-groups/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('label-groups', id);\n  }\n\n  // /label-groups/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, LabelData>(this).push('labels');\n  }\n\n  // /label-groups/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, LabelData>(this).push('labels', id);\n  }\n\n}\n\nexport default APIResourceLabelGroup\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {FilesQueryParams} from './class/FilesQueryParams';\nimport {FileData, UploadObj, UserFile} from './models/UserFile';\nimport FormData from 'form-data';\n\n\nexport class APIListFiles extends APIList<UserFile, FilesQueryParams, FileData | FormData> {\n\n  /**\n   * /files\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('files');\n  }\n\n  /**\n   * Simplifies process of uploading\n   * /files\n   */\n  upload(obj: UploadObj): this {\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      return this.nodeUpload(obj);\n    } else {\n      /**\n       * Browser\n       * @todo\n       */\n      throw new Error('Not supported yet!');\n    }\n  }\n\n  private nodeUpload(file: UploadObj): this {\n    const fs = require('fs');\n    const form = new FormData();\n    form.append('file', fs.createReadStream(file.dir + '/' + file.filename), {\n      filename: file.filename\n    });\n    return this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import {APIList} from './APIList'\nimport {APIListNotifications} from './APIListNotifications';\nimport {APIResource} from './APIResource'\n\n\nexport class APIResourceChannel extends APIResource {\n\n  /**\n   * /users/{id}/notifications/channels/{type}\n   */\n  constructor(parent: APIListNotifications, type: string) {\n    if (type == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('channels', type);\n  }\n\n  // /channels/{type}/scopes\n  scopes() {\n    return new APIList(this).push('scopes');\n  }\n\n}\n\nexport default APIResourceChannel;\n","import {APIList} from './APIList';\nimport {APIResourceChannel} from './APIResourceChannel';\nimport {APIResourceUser} from './APIResourceUser';\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Notification, NotificationsData} from './models/Notification';\n\n\nexport class APIListNotifications extends APIList<Notification, CollectionQueryParams, NotificationsData> {\n\n  /**\n   * /notifications\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n  // /notifications/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  channel(type: string) {\n    return new APIResourceChannel(this, type);\n  }\n\n}\n\nexport default APIListNotifications\n","import {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoQueryParams} from './models/HTTP';\nimport {TestRun, TestRunConfig, TestRunsConfigData, TestRunsData, TestRunsQueryParams} from './models/TestRun';\n\n\nexport class APIListRuns extends APIList<TestRun, TestRunsQueryParams, TestRunsData> {\n\n  /**\n   * /runs\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  config() {\n    return new APIResource<TestRunConfig, NoQueryParams, TestRunsConfigData>(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import {Method} from 'axios';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData} from './models/HTTP';\nimport {SmartbearTunnel, TunnelQueryParams} from './models/SmartbearTunnel';\n\n\nexport class APIListSmartbearTunnels extends APIList<SmartbearTunnel, TunnelQueryParams, NoData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /tunnels\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   */\n  active(active: boolean): this {\n    return this.params({active: active});\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {Notification, NotificationData} from './models/Notification';\n\nexport class APIResourceNotification extends APIResource<Notification, NoQueryParams, NotificationData> {\n\n  /**\n   * /notifications/{id}\n   */\n  constructor(parent: APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  test() {\n    return new APIResource<Message, NoQueryParams, NoData>(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIListFiles} from './APIListFiles';\nimport {APIListNotifications} from './APIListNotifications';\nimport {APIListRuns} from './APIListRuns';\nimport {APIListServices} from './APIListServices';\nimport {APIListSmartbearTunnels} from './APIListSmartbearTunnels';\nimport {APIResource} from './APIResource';\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup';\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup';\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone';\nimport {APIResourceFile} from './APIResourceFile';\nimport {APIResourceNotification} from './APIResourceNotification';\nimport {APIResourceProject} from './APIResourceProject';\nimport {AccessGroup, AccessGroupsData} from './models/AccessGroup';\nimport {DeviceGroup, DeviceGroupData, DeviceGroupIdsData, DeviceGroupWithPublicParams} from './models/DeviceGroup';\nimport {DeviceStatistics} from './models/DeviceStatistics';\nimport {DeviceUsage} from './models/DeviceUsage';\nimport {Framework} from './models/Framework';\nimport {Project, UserProjectData, UserProjectQueryParams} from './models/Project';\nimport {User, UserDeleteData} from './models/User';\nimport {UiPreferencesData, UserPreference, UserPreferenceData} from './models/UserPreference';\nimport {StatisticQueryParams, UserStatistics} from './models/UserStatistics';\nimport {DeviceSession, DeviceSessionData, DeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams, QueryParams} from './models/HTTP';\nimport {DeviceStatisticQueryParam, DeviceUsageQueryParams} from './models/Device';\n\nexport class APIResourceUser extends APIResource<User> {\n\n  /**\n   * /users/{id} | /me\n   */\n  constructor(parent: API, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup, DeviceGroupWithPublicParams, DeviceGroupIdsData | Omit<DeviceGroupData, 'displayName'>>(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, DeviceSessionQueryParams, DeviceSessionData>(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /users/{id}/mark-account-owner\n  markAccountOwner() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('mark-account-owner').post();\n  }\n\n  // /users/{id}/projects\n  projects() {\n    return new APIList<Project, UserProjectQueryParams, UserProjectData>(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  files() {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  runs() {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-frameworks\n  availableFrameworks() {\n    return new APIList<Framework, CollectionBasicQueryParams, NoData>(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/reset-api-key\n   */\n  resetApiKey() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  restore() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  feedback() {\n    return new APIResource<void, QueryParams, FormData>(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  notifications() {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  notification(id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/preferences\n  preferences() {\n    return new APIResource<UserPreference, NoQueryParams, UserPreferenceData>(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  uiPreferences() {\n    return new APIResource<string, NoQueryParams, UiPreferencesData>(this).push('ui-preferences');\n  }\n\n  // /users/{id}/device-usage\n  deviceUsage() {\n    return new APIList<DeviceUsage, DeviceUsageQueryParams, NoData>(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  statistics() {\n    return new APIResource<UserStatistics, StatisticQueryParams, NoData>(this).push('statistics');\n  }\n\n  // /users/{id}/device-statistics\n  deviceStatistics() {\n    return new APIList<DeviceStatistics, DeviceStatisticQueryParam, NoData>(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionBasicQueryParams, AccessGroupsData>(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  smartbearTunnel(id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  smartbearTunnels() {\n    return new APIListSmartbearTunnels(this);\n  }\n\n  deleteAccount() {\n    return new APIResource<User, void, UserDeleteData>(this).push('delete');\n  }\n}\n\nexport default APIResourceUser\n","import {API} from '../API';\nimport {APIResource} from './APIResource'\nimport {NoQueryParams} from './models/HTTP';\nimport {LoginData, User} from './models/User';\n\nexport class APIResourceUserSession extends APIResource {\n\n  // /user-sessions\n  constructor(parent: API) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  login(data: LoginData) {\n    return new APIResource<User, NoQueryParams, LoginData>(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  logout() {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/oauth/authorize/{name}-login\n  sso(name: string) {\n    return new APIResource(this).push('oauth', 'authorize', name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  portalLogin() {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n  // /user-sessions/oauth/authorize/sbid-login\n  sbidCallbackUrl() {\n    return new APIResource(this).push('oauth', 'authorize', 'sbid-login').toUrl(true);\n  }\n\n}\n\nexport default APIResourceUserSession\n","import axios, {AxiosInstance} from 'axios';\n// @ts-ignore\nimport {version} from '../package.json';\nimport {APIAdminResource} from './api/APIAdminResource';\nimport {APIAdminResourceCluster} from './api/APIAdminResourceCluster';\nimport {APIList} from './api/APIList';\nimport {APIListDevices} from './api/APIListDevices';\nimport {APIListProperties} from './api/APIListProperties';\nimport {APIListServices} from './api/APIListServices';\nimport {APIListUsers} from './api/APIListUsers';\nimport {APIResource} from './api/APIResource';\nimport {APIResourceAccount} from './api/APIResourceAccount';\nimport {APIResourceBroker} from './api/APIResourceBroker';\nimport {APIResourceDevice} from './api/APIResourceDevice';\nimport {APIResourceDeviceGroup} from './api/APIResourceDeviceGroup';\nimport {APIResourceDeviceSession} from './api/APIResourceDeviceSession';\nimport {APIResourceFile} from './api/APIResourceFile';\nimport {APIResourceLabelGroup} from './api/APIResourceLabelGroup';\nimport {APIResourceProject} from './api/APIResourceProject';\nimport {APIResourceRun} from './api/APIResourceRun';\nimport {APIResourceUser} from './api/APIResourceUser';\nimport {APIResourceUserSession} from './api/APIResourceUserSession';\nimport {Cluster} from './api/models/Cluster';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './api/models/HTTP';\nimport {License} from './api/models/License';\nimport {Project} from './api/models/Project';\nimport {Property} from './api/models/Property';\nimport {UserFile, UserFileData, UserFileParams} from './api/models/UserFile';\nimport {ApiConfig} from './ApiConfig';\nimport './finka';\nimport {LabelGroup} from './api/models/LabelGroup';\n\n// @ts-ignore\nif (globalThis.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nexport class API {\n  axios: AxiosInstance;\n\n  private axiosConfig: ApiConfig = <ApiConfig>{};\n\n  get baseUrl(): string {\n    return this.axiosConfig.baseURL;\n  }\n\n\n  constructor(private config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    } else if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(`cloudUrl doesn't look like a URL`);\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error('apiKey is in the wrong format');\n      }\n\n      this.axiosConfig.auth = {\n        username: <string>this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /account/{id}\n  account(id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /admin\n  admin() {\n    return new APIAdminResource(this);\n  }\n\n  // /broker\n  broker() {\n    return new APIResourceBroker(this);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /devices/{id}\n  device(id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /devices\n  devices() {\n    return new APIListDevices(this);\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /device-statistics\n  deviceStatistics() {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /enums\n  enums() {\n    return new APIResource(this).push('enums');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /label-groups\n  labelGroups() {\n    return new APIList<LabelGroup, CollectionQueryParams, NoData>(this).push('label-groups');\n  }\n\n  // /label-groups/{id}\n  labelGroup(id: number) {\n    return new APIResourceLabelGroup(this, id);\n  }\n\n  // /labels\n  labels() {\n    return new APIList(this).push('labels');\n  }\n\n  // /licenses\n  licenses() {\n    return new APIResource(this).push('licenses');\n  }\n\n  // /license\n  license() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('license');\n  }\n\n  /*\n    /me or /admin\n    Requires prototype extension covering ACL check\n  */\n  ma(): APIAdminResource | APIResourceUser {\n    throw new Error('Requires prototype extension covering ACL check');\n  }\n\n  // /me\n  me() {\n    return this.user('me');\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /properties\n  properties() {\n    return new APIListProperties(this);\n  }\n\n  // /properties/{id}\n  property(id: number) {\n    return new APIResource<Property>(this).push('properties', id);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /user/{id}\n  user(id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  users() {\n    return new APIListUsers(this);\n  }\n\n  // /user-sessions\n  userSession() {\n    return new APIResourceUserSession(this);\n  }\n\n}\n\n\nexport default API;\n","/* istanbul ignore file */\n\nimport {API} from './API';\nimport {FilterBuilder} from './FilterBuilder';\n\nexport {API} from './API';\nexport {FilterBuilder} from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nexport const CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n","export enum AccessGroupScope {\n  USER = 'USER',\n  ACCOUNT = 'ACCOUNT',\n  GLOBAL = 'GLOBAL'\n}\n\nexport type AccessGroup = {\n  id: number;\n  name: string;\n  scope: AccessGroupScope;\n  userEmail: string;\n  userId: number;\n}\n\nexport type AccessGroupData = Pick<AccessGroup, 'name' | 'scope' | 'userId'>;\n\nexport type AccessGroupsData = Omit<AccessGroupData, 'userId'>;\n","import {ServiceUnit} from './Service';\n\nexport enum PaymentStatus {\n  SUCCEEDED = 'SUCCEEDED',\n  FAILED = 'FAILED',\n  REDIRECTED = 'REDIRECTED'\n}\n\nexport enum PaymentMethod {\n  PAYPAL = 'PAYPAL',\n  BRAINTREE = 'BRAINTREE',\n  STRIPE = 'STRIPE',\n  INVOICE = 'INVOICE',\n  PROMOTION = 'PROMOTION',\n  AWS = 'AWS'\n}\n\nexport enum ChargeType {\n  USAGE_MOBILE = 'USAGE_MOBILE',\n  CONCURRENCY_MOBILE = 'CONCURRENCY_MOBILE',\n  CONCURRENCY_DESKTOP = 'CONCURRENCY_DESKTOP'\n}\n\nexport enum DeactivateReason {\n  INITIAL_FAILURE = 'INITIAL_FAILURE',\n  SCA_FAILURE = 'SCA_FAILURE',\n  CHARGE_FAILURE = 'CHARGE_FAILURE',\n  CANCEL = 'CANCEL',\n  SUSPENDED = 'SUSPENDED',\n  ANOTHER_PURCHASE = 'ANOTHER_PURCHASE'\n}\n\nexport type ServicePaymentStatus = {\n  accountService: AccountService;\n  message: string;\n  redirectUrl: string;\n  status: PaymentStatus;\n}\n\nexport type AccountService = {\n  accountId: number;\n  accountName: string;\n  activatedById: number;\n  activatedByName: string;\n  active: boolean;\n  braintreeId: string;\n  chargeType: ChargeType;\n  createTime: number;\n  deactivateReason: DeactivateReason;\n  deactivatedById: number;\n  deactivatedByName: string;\n  endTime: number;\n  finished: boolean;\n  id: number;\n  lastPaymentTime: number;\n  paymentMethod: PaymentMethod;\n  price: number;\n  serviceCount: number;\n  serviceId: number;\n  serviceName: string;\n  slmLicenseId: string;\n  startTime: number;\n  subscriptionManagementURL: string;\n  total: number;\n  unit: ServiceUnit;\n  unitCount: number;\n  userId: number;\n  vatRate: number;\n}\n\nexport type AccountServiceData = Pick<AccountService, 'endTime' | 'serviceId' | 'slmLicenseId'> & {count: number};\n","import {DevicesQueryParams, Platform, SoftwareVersion} from './Device';\nimport {OsType} from './Enum';\nimport {CollectionQueryParams} from './HTTP';\n\n\nexport enum InitStep {\n  SKIP = 'SKIP',\n  REBOOT = 'REBOOT',\n  REBOOT_WITH_UNLOCK = 'REBOOT_WITH_UNLOCK',\n  UNLOCK_ONLY = 'UNLOCK_ONLY'\n}\n\nexport enum DeviceState {\n  OFFLINE_CLEANING = 'OFFLINE_CLEANING',\n  OFFLINE_DIRTY = 'OFFLINE_DIRTY',\n  OFFLINE_FREE = 'OFFLINE_FREE',\n  OFFLINE_TESTING = 'OFFLINE_TESTING',\n  ONLINE_CLEANING = 'ONLINE_CLEANING',\n  ONLINE_DIRTY = 'ONLINE_DIRTY',\n  ONLINE_FREE = 'ONLINE_FREE',\n  ONLINE_TESTING = 'ONLINE_TESTING'\n}\n\nexport type AdminDevice = {\n  accountId: number;\n  accountName: string;\n  cluster: unknown;\n  comment: string;\n  dedicationEndTime: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  enabled: boolean;\n  fingerprint: string;\n  forceRestore: boolean;\n  id: number;\n  initStep: InitStep;\n  ipAddress: string;\n  lastOnlineTime: number;\n  location: string;\n  locked: boolean;\n  manufacturer: string;\n  name: string;\n  osType: OsType;\n  ownerHasAccountService: boolean;\n  platform: Platform;\n  serialId: string;\n  softwareVersion: SoftwareVersion;\n  state: DeviceState;\n  stateChangeTime: number;\n  stateTime: number;\n  testTimeLimit: number;\n  unlockGesture: string;\n}\n\nexport type AdminDevicesQueryParams = Pick<DevicesQueryParams, 'withDisabled'> & CollectionQueryParams;\n\nexport type AdminDeviceData = Pick<AdminDevice, 'accountId' | 'enabled' | 'initStep' | 'ipAddress' | 'name' |\n  'serialId' | 'testTimeLimit' | 'unlockGesture'> & {apiLevel: number; releaseVersion: string};\n","export enum AdminErrorType {\n  ABORT_REQUEST = 'ABORT_REQUEST',\n  ADB_COMMAND_REJECTED = 'ADB_COMMAND_REJECTED',\n  ADB_SHELL_COMMAND_FAILED = 'ADB_SHELL_COMMAND_FAILED',\n  APP_LOCK_NOT_INSTALLED = 'APP_LOCK_NOT_INSTALLED',\n  DEVICE_OFFLINE = 'DEVICE_OFFLINE',\n  DEVICE_OUTPUT_NULL = 'DEVICE_OUTPUT_NULL',\n  GAMEBENCH_ERROR = 'GAMEBENCH_ERROR',\n  GAMEBENCH_NOT_SUPPORTED = 'GAMEBENCH_NOT_SUPPORTED',\n  GRANT_FAILED = 'GRANT_FAILED',\n  INSTALL_FAILED = 'INSTALL_FAILED',\n  INTERACTIVE_SETUP_FAILED = 'INTERACTIVE_SETUP_FAILED',\n  INTERNAL_INSTALL_FAILED = 'INTERNAL_INSTALL_FAILED',\n  INVALID_TEST_SESSION_FILE = 'INVALID_TEST_SESSION_FILE',\n  LOCK_EXPIRED = 'LOCK_EXPIRED',\n  LOCK_TIMEOUT = 'LOCK_TIMEOUT',\n  NO_NETWORK_CONNECTION = 'NO_NETWORK_CONNECTION',\n  OTHER = 'OTHER',\n  REBOOTING_TIMEOUT = 'REBOOTING_TIMEOUT',\n  REPACKAGING = 'REPACKAGING',\n  RESULTS_PREPARING = 'RESULTS_PREPARING',\n  RESULTS_PROCESSING = 'RESULTS_PROCESSING',\n  RESULTS_SENDING = 'RESULTS_SENDING',\n  STEP_TIMEOUT = 'STEP_TIMEOUT',\n  SYSTEM_FAILURE = 'SYSTEM_FAILURE',\n  TEST_RUN_FAILED = 'TEST_RUN_FAILED',\n  TEST_RUN_INTERRUPTED = 'TEST_RUN_INTERRUPTED',\n  TEST_RUN_TIMEOUT = 'TEST_RUN_TIMEOUT',\n  TEST_RUN_WARNED = 'TEST_RUN_WARNED',\n  TEST_TIMEOUT = 'TEST_TIMEOUT',\n  VNC_CONNECTION_SETUP_FAILED = 'VNC_CONNECTION_SETUP_FAILED',\n  XCRUN_INSTRUMENTS_COMMAND_FAILED = 'XCRUN_INSTRUMENTS_COMMAND_FAILED',\n  XCRUN_INSTRUMENTS_JS_ERROR = 'XCRUN_INSTRUMENTS_JS_ERROR'\n}\n\nexport type AdminError = {\n  id: number;\n  quantity: number;\n  type: AdminErrorType;\n}\n","import {DeviceSessionState} from './DeviceSession';\nimport {OsType} from './Enum';\n\nexport enum FrameworkType {\n  AUTOMATIC = 'AUTOMATIC',\n  MANUAL_APP = 'MANUAL_APP',\n  MANUAL_WEB = 'MANUAL_WEB',\n  REMOTE = 'REMOTE'\n}\n\nexport type AdminFrameworkStatistics = {\n  cloudName: string;\n  count: number;\n  day: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  frameworkId: number;\n  frameworkName: string;\n  id: number;\n  osType: OsType;\n  releaseVersion: string;\n  state: DeviceSessionState;\n  type: FrameworkType;\n  userEmail: string;\n  userId: number;\n}\n","import {PaymentMethod} from './AccountService';\nimport {DeviceSessionType} from './DeviceSession';\nimport {OsType} from './Enum';\nimport {QueryParams} from './HTTP';\n\nexport enum BillingType {\n  BUY = 'BUY',\n  CHARGE = 'CHARGE',\n  CANCEL = 'CANCEL'\n}\n\nexport type BillingPeriod = {\n  accountServiceId: number;\n  additionalHours: number;\n  additionalHoursPrice: number;\n  apiBillingPeriodType: BillingType;\n  createTime: number;\n  endBillingPeriod: number;\n  id: number;\n  lastPaymentDate: number;\n  paid: boolean;\n  paymentMethod: PaymentMethod;\n  plan: string;\n  servicePrice: number;\n  startBillingPeriod: number;\n  subscriptionEnd: number;\n  subscriptionStart: number;\n  totalPrice: number;\n  usages: Array<BillingPeriodUsage>;\n}\n\nexport type BillingPeriodUsage = {\n  billableSeconds: number;\n  id: number;\n  nonBillableSeconds: number;\n  osType: OsType;\n  type: DeviceSessionType;\n}\n\nexport interface BillingPeriodQueryParams extends QueryParams {\n  onDate: number;\n}\n","export enum BrokerType {\n  MOBILE = 'MOBILE',\n  DESKTOP = 'DESKTOP'\n}\n\nexport type Broker = {\n  id: number;\n  location: string;\n  type: BrokerType;\n  url: string;\n}\n","\nimport {AdminDevice} from './AdminDevice';\nimport {CollectionResponse, QueryParams} from './HTTP';\n\nexport type Cluster = {\n  devices: CollectionResponse<AdminDevice>;\n  enabled: boolean;\n  id: number;\n  ipAddress: string;\n  jenkinsUrl: string;\n  location: string;\n  name: string;\n  pluginVersion: string;\n  region: string;\n  state: ClusterState;\n  stateChangeTime: number;\n  stateTime: number;\n  url: string;\n}\n\nexport enum ClusterState {\n  'OFFLINE',\n  ONLINE = 'ONLINE',\n  RESTARTING = 'RESTARTING',\n  QUIET_DOWN = 'QUIET_DOWN',\n  MAINTENANCE = 'MAINTENANCE'\n}\n\nexport interface ClusterParams extends QueryParams {\n  withDevices: boolean;\n}\n\nexport type ClusterData = Pick<Cluster, 'enabled' | 'url'> & {\n  quietDown: boolean;\n  restart: boolean;\n  turnMaintenance: boolean;\n}\n","import {Browser} from './Browser';\nimport {OsType} from './Enum';\nimport {CollectionBasicQueryParams, CollectionQueryParams, CollectionResponse, QueryParams} from './HTTP';\nimport {TestRunsQueryParams} from './TestRun';\n\n\nexport enum DeviceGroupOrigin {\n  STATIC = 'STATIC',\n  DYNAMIC = 'DYNAMIC',\n  HYBRID = 'HYBRID'\n}\n\nexport enum Platform {\n  IOS = 'IOS',\n  ANDROID = 'ANDROID',\n  WINDOWS = 'WINDOWS',\n  MAC = 'MAC',\n  LINUX = 'LINUX',\n  UNDEFINED = 'UNDEFINED'\n}\n\nexport enum SupportedCreators {\n  MANUAL = 'MANUAL',\n  ROBOT = 'ROBOT',\n  AUTOMATIC = 'AUTOMATIC'\n}\n\nexport type DeviceProperty = {\n  displayName: string;\n  id: number;\n  labelGroupName: string;\n  name: string;\n  propertyGroupId: number;\n  propertyGroupName: string;\n}\n\nexport type SoftwareVersion = {\n  apiLevel: number;\n  id: number;\n  releaseVersion: string;\n}\n\nexport enum LockReason {\n  TESTING = 'TESTING',\n  CLEANING = 'CLEANING',\n  NOT_OPERATIONAL = 'NOT_OPERATIONAL'\n}\n\nexport type Device = {\n  accountId: number;\n  accountName: string;\n  available: boolean;\n  browsers: CollectionResponse<Browser>;\n  creditsPrice: number;\n  deviceGroupOrigin: DeviceGroupOrigin;\n  displayName: string;\n  enabled: boolean;\n  frame100Url: string;\n  frame160Url: string;\n  frame400Url: string;\n  frame80Url: string;\n  frameExtraWidth: number;\n  id: number;\n  imageHeight: number;\n  imageLeft: number;\n  imagePrefix: string;\n  imageTop: number;\n  imageWidth: number;\n  locked: boolean;\n  lockReason: LockReason;\n  manufacturer: string;\n  online: boolean;\n  osType: OsType;\n  platform: Platform;\n  properties: CollectionResponse<DeviceProperty>;\n  softwareVersion: SoftwareVersion;\n  supportedCreators: Array<SupportedCreators>;\n}\n\nexport type DeviceCleanupConfiguration = {\n  content: string;\n  createTime: number;\n  createdByEmail: string;\n  createdById: number;\n  discriminator: string;\n  enabled: boolean;\n  global: boolean;\n  example: true;\n  id: number;\n  lastModificationTime: number;\n  osType: OsType;\n}\n\nexport type DeviceCleanupConfigurationData = {\n  deviceCleanupConfigurationId: number;\n}\n\nexport type DeviceLabelData = {\n  labelId: number;\n}\n\nexport interface DeviceProperiesData extends QueryParams {\n  labelId: number;\n}\n\nexport interface CleanupConfigurationSpecificData extends QueryParams {\n  serialId: string;\n}\n\nexport interface DeviceTimeSummaryQueryParams extends CollectionBasicQueryParams {\n  forWholeAccount: boolean;\n}\nexport interface DeviceUsageQueryParams extends TestRunsQueryParams {\n  startTime: number;\n}\n\nexport interface DeviceStatisticQueryParam extends TestRunsQueryParams {\n  mode: string;\n}\n\nexport interface DevicesQueryParams extends CollectionQueryParams {\n  labelIds: Array<string>;\n  liveTestingOnly: boolean;\n  withBrowsers: boolean;\n  withDedicated: boolean;\n  withDisabled: boolean;\n  withProperties: boolean;\n  withSupportedCreators: boolean;\n}\n","export enum CriterionField {\n  NAME = 'NAME',\n  FINGERPRINT = 'FINGERPRINT',\n  SERIAL_ID = 'SERIAL_ID',\n  UNLOCK_GESTURE = 'UNLOCK_GESTURE',\n  SOFTWARE_VERSION = 'SOFTWARE_VERSION',\n  INIT_STEP = 'INIT_STEP',\n  ACCOUNT = 'ACCOUNT',\n  BROWSERS = 'BROWSERS'\n}\n\nexport type DeviceModelCriterion = {\n  createTime: number;\n  field: CriterionField;\n  id: number;\n  labelGroupDisplayName: string;\n  labelGroupId: number;\n  labelGroupName: string;\n}\n\nexport type DeviceModelCriterionData = Pick<DeviceModelCriterion, 'field' | 'labelGroupId'>;\n","export enum RetentionStrategy {\n  CLUSTER_ON_OFF = 'CLUSTER_ON_OFF',\n  MIN_FREE_MAX_TOTAL = 'MIN_FREE_MAX_TOTAL',\n  POOL_MANAGER_AWARE = 'POOL_MANAGER_AWARE'\n}\n\nexport type DeviceModelPool = {\n  createTime: number;\n  enabled: boolean;\n  id: number;\n  location: string;\n  maxTotal: number;\n  minAvailable: number;\n  name: string;\n  numberOfBrowsers: number;\n  osVersion: string;\n  retentionStrategy: RetentionStrategy;\n  running: number;\n}\n\nexport type DeviceModelPoolData = Pick<DeviceModelPool, 'maxTotal' | 'minAvailable'>;\n","export enum ProblemType {\n  CLEANING = 'CLEANING',\n  DIRTY = 'DIRTY',\n  OFFLINE = 'OFFLINE',\n  LOW_BATTERY = 'LOW_BATTERY',\n  HIGH_FAIL_RATE = 'HIGH_FAIL_RATE',\n  NO_INTERNET_CONNECTION = 'NO_INTERNET_CONNECTION'\n}\n\nexport type DeviceProblem = {\n  clusterId: number;\n  clusterName: string;\n  deviceId: number;\n  deviceModelId: number;\n  deviceModelName: string;\n  deviceName: string;\n  id: number;\n  problems: Array<DeviceProblemPair>;\n}\n\nexport type DeviceProblemPair = {\n  id: number;\n  type: ProblemType;\n  value: any;\n}\n","import {Device} from './Device';\nimport {CollectionBasicQueryParams} from './HTTP';\n\nexport type TunnelSettings = {\n  domain: string;\n  email: string;\n}\n\nexport enum DeviceSessionType {\n  AUTOMATIC = 'AUTOMATIC',\n  MANUAL = 'MANUAL',\n  MANUAL_APP = 'MANUAL_APP',\n  MANUAL_WEB = 'MANUAL_WEB',\n  REMOTE = 'REMOTE'\n}\n\nexport enum RetryState {\n  NONE = 'NONE',\n  MANUAL = 'MANUAL',\n  AUTO = 'AUTO'\n}\n\nexport enum DeviceSessionState {\n  ABORTED = 'ABORTED',\n  EXCLUDED = 'EXCLUDED',\n  FAILED = 'FAILED',\n  RUNNING = 'RUNNING',\n  SUCCEEDED = 'SUCCEEDED',\n  TIMEOUT = 'TIMEOUT',\n  WAITING = 'WAITING',\n  WARNING = 'WARNING'\n}\n\nexport enum DeviceSessionStepType {\n  WAITING = 'WAITING',\n  PREPARING = 'PREPARING',\n  UNINSTALL = 'UNINSTALL',\n  INSTALL = 'INSTALL',\n  RUNNING = 'RUNNING',\n  SENDING_RESULTS = 'SENDING_RESULTS',\n  PROCESSING_RESULTS = 'PROCESSING_RESULTS'\n}\n\nexport type DeviceSessionConfig = {\n  adbVersion: string;\n  browserName: string;\n  browserVersion: string;\n  deviceModelId: number;\n  id: number;\n  screenResolution: string;\n  tunnelSettings: TunnelSettings;\n  type: DeviceSessionConfig;\n  url: string;\n}\n\nexport type DeviceSession = {\n  accountId: number;\n  autoRetriesLeftCount: number;\n  billable: boolean;\n  config: DeviceSessionConfig;\n  createTime: number;\n  clientSideId: string;\n  device: Device;\n  deviceInstanceId: number;\n  deviceLogFirstTimestamp: number;\n  deviceRunId: number;\n  deviceTime: number;\n  duration: number;\n  endTime: number;\n  excludeReason: string;\n  externalId: string;\n  id: number;\n  installTime: number;\n  name: string;\n  projectId: number;\n  projectName: string;\n  retryState: RetryState;\n  rowIndex: number;\n  startTime: number;\n  state: DeviceSessionState;\n  successRatio: number;\n  testCaseAllCount: number;\n  testCaseFailedCount: number;\n  testCasePassedCount: number;\n  testCaseSkippedCount: number;\n  testCaseSuccessCount: number;\n  testRunId: number;\n  testRunName: string;\n  timeLimit: number;\n  type: DeviceSessionType;\n  userEmail: string;\n  userId: number;\n}\n\nexport type DeviceSessionCommand = {\n  duration: number;\n  httpMethod: string;\n  id: number;\n  requestBody: string;\n  responseBody: string;\n  responseCode: number;\n  timestamp: number;\n  uri: string;\n}\n\nexport type DeviceSessionStep = {\n  deviceSessionId: number;\n  excludeReason: string;\n  failReason: string;\n  finishTimeMS: number;\n  id: number;\n  startTimeMS: number;\n  type: DeviceSessionStepType;\n}\n\nexport type DeviceSessionConnection = {\n  createTime: number;\n  deviceSessionId: number;\n  endTime: number;\n  externalId: string;\n  host: string;\n  id: number;\n  password: string;\n  path: string;\n  port: number;\n  type: string;\n  url: string;\n  urlSchema: string;\n}\n\nexport type DeviceSessionData = Omit<DeviceSessionConfig, 'adbVersion' | 'id' | 'tunnelSettings' | 'type'> & {configuration: DeviceSessionConfig};\n\nexport interface DeviceSessionQueryParams extends CollectionBasicQueryParams {\n  withProperties: boolean;\n}\n\nexport interface SessionQueryParams extends CollectionBasicQueryParams {\n  projectId: number;\n  testRunId: number;\n}\n\nexport interface SessionRunStepQueryParams extends CollectionBasicQueryParams {\n  runId: number;\n}\n\nexport interface SessionStepQueryParams extends SessionRunStepQueryParams {\n  projectId: number;\n}\n\nexport interface TRunDeviceSessionQueryParams extends CollectionBasicQueryParams {\n  projectId: number;\n}\n\nexport enum SessionReleaseReason {\n  INACTIVITY = 'INACTIVITY',\n  TIMEOUT = 'TIMEOUT',\n  USER_ACTION = 'USER_ACTION',\n  CHANGE_DEVICE = 'CHANGE_DEVICE',\n  WEBSOCKET_CLOSED = 'WEBSOCKET_CLOSED'\n}\n\nexport type DeviceSessionRelease = {\n  reason: SessionReleaseReason;\n}\n","export enum OsType {\n  IOS = 'IOS',\n  ANDROID = 'ANDROID',\n  DESKTOP = 'DESKTOP',\n  UNDEFINED = 'UNDEFINED'\n}\n\nexport type Enum = {\n  id: number;\n  value: string;\n}\n","export enum LicenseStatus {\n  ACTIVE = 'ACTIVE',\n  EXPIRED = 'EXPIRED',\n  INACTIVE = 'INACTIVE',\n  CLOSED = 'CLOSED'\n}\n\nexport type BaseLicense = {\n  enabled: boolean;\n};\n\nexport type FeatureLicense = {\n  deviceLimit: number;\n  deviceLimited: boolean;\n  projectLimit: number;\n  projectLimited: boolean;\n};\n\nexport type AndroidLicense = BaseLicense & FeatureLicense & {\n  cts: CTSLicense;\n  uiAutomator: UIAutomatorLicense;\n};\n\nexport type BuildLicense = BaseLicense & {\n  limit: number;\n  limited: boolean;\n};\n\nexport type DesktopLicense = BaseLicense & FeatureLicense;\n\nexport type GlobalLicense = FeatureLicense;\n\nexport type InspectorLicense = BaseLicense;\n\nexport type IOSLicense = BaseLicense & FeatureLicense;\n\nexport type RecorderLicense = BaseLicense & {\n  limit: number;\n  limited: boolean;\n};\n\nexport type ServerLicense = BaseLicense & {\n  androidEnabled: boolean;\n  iosEnabled: boolean;\n};\n\nexport type CTSLicense = BaseLicense;\n\nexport type UIAutomatorLicense = BaseLicense;\n\nexport type License = {\n  activateTime: number;\n  android: AndroidLicense;\n  build: BuildLicense;\n  closeTime: number;\n  desktop: DesktopLicense;\n  expireTime: number;\n  global: GlobalLicense;\n  id: number;\n  inspector: InspectorLicense;\n  ios: IOSLicense;\n  privateInstance: boolean;\n  recorder: RecorderLicense;\n  server: ServerLicense;\n  status: LicenseStatus;\n  userEmail: string;\n  userId: number;\n}\n\nexport type LicenseData = Pick<License, 'privateInstance' | 'userId'> & {\n  androidDeviceLimit: number;\n  androidEnabled: boolean;\n  androidProjectLimit: number;\n  buildEnabled: boolean;\n  buildLimit: number;\n  desktopDeviceLimit: number;\n  desktopEnabled: boolean;\n  desktopProjectLimit: number;\n  globalDeviceLimit: number;\n  globalProjectLimit: number;\n  inspectorEnabled: boolean;\n  iosDeviceLimit: number;\n  iosEnabled: boolean;\n  iosProjectLimit: number;\n  privateInstance: boolean;\n  unit: string;\n  unitCount: number;\n}\n","export type Maintenance = {\n  enabled: boolean;\n  id: number;\n}\n\nexport enum MaintenanceType {\n  BARE_METAL = 'BARE_METAL',\n  EC2 = 'EC2',\n  VM = 'VM'\n}\n\nexport type MaintenanceData = {\n  enabled: boolean;\n  type: MaintenanceType;\n}\n","import {QueryParams} from './HTTP';\n\n\nexport enum NotificationChannel {\n  SLACK = 'SLACK',\n  EMAIL = 'EMAIL',\n  WEBHOOK = 'WEBHOOK'\n}\n\nexport enum NotificationScope {\n  ALL = 'ALL',\n  TEST_RUN = 'TEST_RUN',\n  TEST_RUN_FAILURE = 'TEST_RUN_FAILURE',\n  TEST_RUN_SUCCEEDED = 'TEST_RUN_SUCCEEDED',\n  MAINTENANCE = 'MAINTENANCE',\n  MAINTENANCE_RELEASE = 'MAINTENANCE_RELEASE',\n  CUSTOM = 'CUSTOM',\n  NEWS = 'NEWS',\n  SYSTEM = 'SYSTEM',\n  CHECK = 'CHECK',\n  PLAN_LIMIT_REACHED = 'PLAN_LIMIT_REACHED',\n  PLAN_INVOICE = 'PLAN_INVOICE'\n}\n\nexport type Notification = {\n  channel: NotificationChannel;\n  destination: string;\n  id: number;\n  projectId?: number;\n  projectName?: string;\n  scope: NotificationScope;\n  userEmail: string;\n  userId: number;\n}\n\nexport interface NotificationData extends QueryParams {\n  scope: NotificationScope;\n}\n\nexport type NotificationsData = Pick<Notification, 'channel' | 'destination' | 'projectId' | 'scope'>;\n","import {OsType} from './Enum';\nimport {TestRunsQueryParams} from './TestRun';\n\nexport enum ArchivingStrategy {\n  NEVER = 'NEVER',\n  DAYS = 'DAYS',\n  RUNS = 'RUNS'\n}\n\nexport type Project = {\n  archiveTime: number;\n  archivingItemCount: number;\n  archivingStrategy: ArchivingStrategy;\n  common: boolean;\n  createTime: number;\n  description: string;\n  id: number;\n  name: string;\n  osType: OsType;\n  readOnly: boolean;\n  rowIndex: number;\n  shared: boolean;\n  sharedByEmail: string;\n  sharedById: number;\n  sharedWithCaller: boolean;\n  successRatio: number;\n  userEmail: string;\n  userId: number;\n}\n\nexport type UserProjectData = Pick<Project, 'name'>;\n\nexport interface UserProjectQueryParams extends TestRunsQueryParams {\n  showStatistics: boolean;\n}\n","import {Device} from './Device';\nimport {CollectionBasicQueryParams} from './HTTP';\n\nexport enum ScreenshotType {\n  LANDSCAPE = 'LANDSCAPE',\n  PORTRAIT = 'PORTRAIT'\n}\n\nexport type Screenshot = {\n  fail: boolean;\n  id: number;\n  originalName: string;\n  takeTimestamp: number;\n  type: ScreenshotType;\n}\n\nexport type ScreenshotExtended = Screenshot & {\n  device: Device;\n  deviceRunId: number;\n  projectId: number;\n  testRunId: number;\n}\n\nexport interface ScreenshotQueryParams extends CollectionBasicQueryParams {\n  name: string;\n}\n","import {ChargeType, PaymentMethod} from './AccountService';\nimport {CollectionQueryParams} from './HTTP';\nimport {Role} from './Role';\n\n\nexport type Service = {\n  activateTime: number;\n  activated: boolean;\n  archiveTime: number;\n  centPrice: number;\n  chargeType: ChargeType;\n  commonId: string;\n  customPlan: boolean;\n  defaultConcurrences: Array<number>;\n  description: string;\n  externalId: string;\n  features: string;\n  id: number;\n  includedHours: number;\n  name: string;\n  pricePerHour: number;\n  priceString: string;\n  roles: Array<Role>;\n  unit: ServiceUnit;\n}\n\nexport enum ServiceUnit {\n  DAY = 'DAY',\n  HOUR = 'HOUR',\n  MONTH = 'MONTH',\n  PROJECT = 'PROJECT',\n  RUN = 'RUN',\n  YEAR = 'YEAR'\n}\n\nexport interface AdminServicesParams extends CollectionQueryParams {\n  activeOnly: boolean;\n  inUse: boolean;\n  notArchive: boolean;\n}\n\nexport type ServiceActivateData = {\n  activateTime: number;\n}\n\nexport interface ServiceData {\n    address?: string;\n    braintreeNonce?: string;\n    cardNumber?: string;\n    city?: string;\n    count?: number;\n    country?: string;\n    cvv?: string;\n    email?: string;\n    expirationDate?: string;\n    firstName?: string;\n    lastName?: string;\n    organization?: string;\n    paymentMethod: PaymentMethod;\n    phone?: string;\n    serviceId: number;\n    state?: string;\n    stripeToken?: string;\n    vatId?: string;\n    zip?: string;\n}\n","import {QueryParams} from './HTTP';\n\n\nexport enum SharedResourceType {\n  DEVICE_GROUP = 'DEVICE_GROUP',\n  FILE = 'FILE',\n  PROJECT = 'PROJECT',\n}\n\nexport type SharedResource = {\n  id: number;\n  name: string;\n  resourceId: number;\n  type: SharedResourceType;\n}\n\nexport interface ShareData extends QueryParams {\n  accessGroupId: number;\n  email: string;\n}\n","import {Method} from 'axios';\nimport {CollectionResponse} from './HTTP';\n\n\nexport enum TestResult {\n  PASSED = 'PASSED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n  NOT_AVAILABLE = 'NOT_AVAILABLE'\n}\n\nexport type TestCaseRun = {\n  className: string;\n  createTime: number;\n  duration: number;\n  errorMessage: string;\n  id: number;\n  methodName: string;\n  result: TestResult;\n  stacktrace: string;\n  steps: CollectionResponse<TestCaseRunStep>;\n  suiteName: string;\n}\n\nexport type TestCaseRunStep = {\n  duration: number;\n  httpMethod: Uppercase<Method>;\n  id: number;\n  requestBody: string;\n  responseBody: string;\n  responseCode: number;\n  timestamp: number;\n  uri: string;\n}\n","import {Device} from './Device';\nimport {TunnelSettings} from './DeviceSession';\nimport {OsType} from './Enum';\nimport {CollectionBasicQueryParams, QueryParams} from './HTTP';\nimport {Tag} from './Tag';\nimport {UserFile} from './UserFile';\n\n\nexport enum LimitationType {\n  PACKAGE = 'PACKAGE',\n  CLASS = 'CLASS'\n}\n\nexport enum TestScheduler {\n  PARALLEL = 'PARALLEL',\n  SERIAL = 'SERIAL',\n  SINGLE = 'SINGLE',\n  ALL_INSTANCES = 'ALL_INSTANCES'\n}\n\nexport enum TestState {\n  WAITING = 'WAITING',\n  RUNNING = 'RUNNING',\n  FINISHED = 'FINISHED'\n}\n\n\nexport type TestRun = {\n  abortedDeviceCount: number;\n  billable: boolean;\n  config: TestRunConfig;\n  createTime: number;\n  deviceCount: number;\n  displayName: string;\n  errorsDeviceCount: number;\n  excludedDeviceCount: number;\n  executedTestCaseCount: number;\n  executionRatio: number;\n  failedTestCaseCount: number;\n  finishedDeviceCount: number;\n  frameworkId: number;\n  frameworkName: string;\n  id: number;\n  logsFileId: number;\n  message: string;\n  'number': number;\n  projectId: number;\n  projectName: string;\n  rowIndex: number;\n  runningDeviceCount: number;\n  screenshotsFileId: number;\n  startTime: number;\n  startedByDisplayName: string;\n  startedById: number;\n  state: TestState;\n  succeededDeviceCount: number;\n  successRatio: number;\n  successfulTestCaseCount: number;\n  tags: Array<Tag>;\n  testCaseCount: number;\n  timeoutedDeviceCount: number;\n  totalDeviceCount: number;\n  uiLink: string;\n  userId: number;\n  waitingDeviceCount: number;\n  warningDeviceCount: number;\n}\n\nexport enum TestRunConfigFileAction {\n  COPY_TO_DEVICE = 'COPY_TO_DEVICE',\n  INSTALL = 'INSTALL',\n  RUN_TEST = 'RUN_TEST',\n}\n\nexport type TestRunConfig = {\n  appCrawlerRun: boolean;\n  appiumBrokerAddress: string;\n  applicationPassword: string;\n  applicationUsername: string;\n  availableDeviceGroups: any;\n  availableDevices: Array<Device>;\n  availableFrameworks: any;\n  availableOsTypes: Array<OsType>;\n  clientSideTestConfig: any;\n  computedDevices: Array<number>;\n  creditsPrice: number;\n  deviceGroupId: number;\n  deviceIds: any;\n  deviceLanguageCode: string;\n  deviceNamePattern: string;\n  disableResigning: boolean;\n  files: Array<{\n    action: TestRunConfigFileAction;\n    availableActions: Array<TestRunConfigFileAction>;\n    file: UserFile;\n  }>;\n  frameworkId: number;\n  hookURL: string;\n  id: number;\n  instrumentationRunner: string;\n  limitationType: LimitationType;\n  limitationValue: string;\n  loadedPrevious: boolean;\n  example: true;\n  maxAutoRetriesCount: number;\n  maxTestTimeout: any;\n  osType: OsType;\n  projectId: number;\n  projectName: string;\n  resignFiles: boolean;\n  runAvailable: boolean;\n  scheduler: TestScheduler;\n  screenshotDir: string;\n  status: string;\n  statusCode: number;\n  testRunId: number;\n  testRunName: string;\n  testRunNameGrouping: string;\n  testRunParameters: any;\n  timeout: number;\n  tunnelSettings: TunnelSettings;\n  useSamples: boolean;\n  usedDeviceGroupId: number;\n  usedDeviceGroupName: string;\n  videoRecordingEnabled: boolean;\n  withAnnotation: string;\n  withoutAnnotation: string;\n}\n\nexport interface TestRunData extends QueryParams {\n  displayName: string;\n}\n\nexport interface RunData extends TestRunData {\n  projectId: number;\n}\n\nexport interface RunQueryParam extends QueryParams {\n  projectId: number;\n}\n\nexport interface TestRunsData {\n  configuration: TestRunConfig;\n}\n\nexport interface TestRunsConfigData extends TestRunsData {\n  includeDeviceGroups: boolean;\n  includeDevices: boolean;\n  includeFrameworks: boolean;\n}\n\n// for users/{userid}/runs\nexport interface TestRunsQueryParams extends CollectionBasicQueryParams {\n  forWholeAccount: boolean;\n  skipCommonProject: boolean;\n  skipShared: boolean;\n}\n","import {CollectionQueryParams, QueryParams} from './HTTP';\nimport {Role} from './Role';\n\n\nexport enum MfaStatus {\n  VERIFICATION_NEED = 'VERIFICATION_NEED',\n  DISABLED = 'DISABLED',\n  ENABLED = 'ENABLED'\n}\n\nexport enum UserStatus {\n  INACTIVE = 'INACTIVE',\n  DISABLED = 'DISABLED',\n  ENABLED = 'ENABLED'\n}\n\nexport type User = {\n  accountId: number;\n  accountName: string;\n  userAccountName: string;\n  accountOwners: Array<User>;\n  accountServiceIds: Array<number>;\n  address: string;\n  apiKey: string;\n  city: string;\n  code: string;\n  country: string;\n  createTime: number;\n  createdByEmail: string;\n  createdById: number;\n  deleteTime: number;\n  email: string;\n  enabled: boolean;\n  firstName: string;\n  id: number;\n  isAccountOwner: boolean;\n  lastLaunchedTestTime: number;\n  lastLoginTime: number;\n  lastName: string;\n  mfaQRCodeUrl: string;\n  mfaStatus: MfaStatus;\n  organization: string;\n  phone: string;\n  registrationIP: string;\n  roles: Array<Role>;\n  serviceIds: Array<number>;\n  state: string;\n  status: UserStatus;\n  timeZone: string;\n  vatId: string;\n}\n\nexport type UserData = Pick<User, 'email'>;\n\nexport interface UserParams extends CollectionQueryParams {\n  WITH_ADDRESS: boolean;\n  WITH_USER_INFO: boolean;\n  onlyMainUsers: boolean;\n  onlyWithDisabledServices: boolean;\n  withRole: string;\n  withRoles: boolean;\n}\n\nexport type UserUpdateAccount = Pick<User, 'accountId'>;\n\nexport type UserDeleteData = {\n  password: string;\n}\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\n\nexport type UserPasswordData = {\n  key: string;\n  password: string;\n};\nexport type UserActivateData = {\n  zip: string;\n} & UserPasswordData\n  & Pick<User, 'address' | 'city' | 'country' | 'email' | 'firstName' | 'lastName' | 'organization' | 'phone' | 'state' | 'vatId'>;\n\nexport interface UserRecoveryQueryParams extends QueryParams {\n  recoveryKey: string;\n}\n\nexport interface ValidateVatQueryParams extends QueryParams {\n  countryCode: string;\n  vatId: string;\n}\n","import {CollectionQueryParams, QueryParams} from './HTTP';\n\n\nexport enum FileDirection {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport enum FileInputType {\n  APPLICATION = 'APPLICATION',\n  TEST = 'TEST',\n  DATA = 'DATA'\n}\n\nexport enum FileState {\n  PREPARING = 'PREPARING',\n  READY = 'READY'\n}\n\nexport type FileProperty = {\n  id: number;\n  key: string;\n  value: string;\n};\n\nexport type UserFileTag = {\n  id: number;\n  name: string;\n}\n\nexport type UserFile = {\n  createTime: number;\n  directUrl: string;\n  direction: FileDirection;\n  duplicate: boolean;\n  fileProperties: Array<FileProperty>;\n  iconDirectUrl: string;\n  id: number;\n  inputType: FileInputType;\n  mimetype: string;\n  name: string;\n  shared: boolean;\n  size: number;\n  state: FileState;\n  userEmail: string;\n  userId: number;\n};\n\nexport interface UserFileParams extends CollectionQueryParams {\n  tag: Array<string>;\n}\n\nexport type UserFileData = {\n  file: FormData;\n  global: boolean;\n}\n\nexport type BuildLogsData = {\n  deviceRunIds: Array<number>;\n  projectId: number;\n  userId: number;\n}\n\nexport type BuildLogsParams = BuildLogsData;\n\nexport interface FileSizeData extends QueryParams {\n  height: number;\n  width: number;\n}\n\nexport type UploadObj = {\n  dir: string;\n  filename: string;\n}\n\nexport interface FileData {\n  file: Blob;\n  global: boolean;\n}\n","export enum VisualTestImageType {\n  FULL_PAGE = 'FULL_PAGE',\n  VIEWPORT = 'VIEWPORT',\n  ELEMENT_SCREENSHOT = 'ELEMENT_SCREENSHOT'\n}\n\nexport type VisualTestAccess = {\n  enabled: boolean;\n  apiKey: string | null;\n}\n\nexport type VisualTest = {\n  comparisonStatus:\tstring;\n  appUrl:\tstring;\n  createdAt:\tstring;\n  id: number;\n  imageName:\tstring;\n  imageThumbnailUrl:\tstring;\n  imageType:\tVisualTestImageType;\n  imageUrl:\tstring;\n  sessionId:\tstring;\n  testUrl:\tstring;\n}\n"],"names":["APIOrder","AbortController","stringify","InputFileset","OutputFileset","AccessGroupScope","PaymentStatus","PaymentMethod","ChargeType","DeactivateReason","InitStep","DeviceState","AdminErrorType","FrameworkType","BillingType","BrokerType","ClusterState","DeviceGroupOrigin","Platform","SupportedCreators","LockReason","CriterionField","RetentionStrategy","ProblemType","DeviceSessionType","RetryState","DeviceSessionState","DeviceSessionStepType","SessionReleaseReason","OsType","LicenseStatus","MaintenanceType","NotificationChannel","NotificationScope","ArchivingStrategy","ScreenshotType","ServiceUnit","SharedResourceType","TestResult","LimitationType","TestScheduler","TestState","TestRunConfigFileAction","MfaStatus","UserStatus","FileDirection","FileInputType","FileState","VisualTestImageType"],"mappings":"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"}